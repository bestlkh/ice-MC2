{"version":3,"sources":["chat.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_typeof","Symbol","iterator","obj","constructor","_classCallCheck","instance","TypeError","e","t","n","r","s","o","u","a","require","f","Error","code","l","exports","call","1","module","Buffer","w","a2b","atob","str","toString","base64js","buf","b64ToByteArray","Array","map","ch","String","fromCharCode","join","window","this","buffer","2","root","factory","attrValueRegex","nameEqualsValueRegex","domainNameRegex","tldRegex","Autolinker","cfg","Util","assign","urls","email","twitter","newWindow","stripPrefix","truncate","undefined","className","htmlParser","matchParser","tagBuilder","link","textOrHtml","htmlNodes","getHtmlParser","parse","anchorTagStackCount","resultHtml","len","node","nodeType","getType","nodeText","getText","getTagName","isClosing","Math","max","push","linkifiedStr","linkifyStr","getMatchParser","replace","createMatchReturnVal","match","replaceFnResult","replaceFn","getMatchedText","HtmlTag","getTagBuilder","build","HtmlParser","MatchParser","AnchorTagBuilder","options","abstractMethod","dest","src","prop","hasOwnProperty","extend","superclass","subclass","superclassProto","F","subclassProto","apply","arguments","ellipsis","truncateLen","ellipsisChars","substring","indexOf","arr","element","splitAndCapture","splitRegex","global","result","lastIdx","exec","index","whitespaceRegex","innerHtml","innerHTML","setTagName","tagName","setAttr","attrName","attrValue","getAttrs","getAttr","setAttrs","attrs","tagAttrs","setClass","cssClass","addClass","newClass","classAttr","getClass","classes","split","newClasses","shift","removeClass","removeClasses","idx","splice","hasClass","setInnerHtml","html","getInnerHtml","attrsStr","buildAttrsStr","attrsArr","createAttrs","getAnchorHref","processAnchorText","getAnchorText","matchType","anchorHref","href","createCssClass","anchorText","doTruncate","Number","POSITIVE_INFINITY","htmlRegex","source","RegExp","htmlCharacterEntitiesRegex","currentResult","textAndEntityNodes","lastIndex","nodes","tagText","isClosingTag","inBetweenTagsText","parseTextAndEntityNodes","createElementNode","text","textAndEntityTokens","textToken","entityToken","createTextNode","createEntityNode","ElementNode","toLowerCase","closing","EntityNode","TextNode","HtmlNode","matcherRegex","charBeforeProtocolRelMatchRegex","matchValidator","MatchValidator","contextObj","me","matchStr","$1","$2","$3","$4","$5","$6","$7","$8","matchDescObj","processCandidateMatch","replaceStr","prefixStr","suffixStr","twitterMatch","twitterHandlePrefixWhitespaceChar","twitterHandle","emailAddressMatch","urlMatch","protocolUrlMatch","wwwProtocolRelativeMatch","tldProtocolRelativeMatch","protocolRelativeMatch","isValidMatch","matchHasUnbalancedClosingParen","substr","Email","matchedText","slice","Twitter","charBeforeMatch","Url","url","charAt","openParensMatch","closeParensMatch","invalidProtocolRelMatchRegex","hasFullProtocolRegex","uriSchemeRegex","hasWordCharAfterProtocolRegex","isValidUriScheme","urlMatchDoesNotHaveProtocolOrDot","urlMatchDoesNotHaveAtLeastOneWordChar","isInvalidProtocolRelativeMatch","uriSchemeMatch","uriScheme","test","Match","getEmail","getTwitterHandle","urlPrefixRegex","protocolRelativeRegex","protocolPrepended","getUrl","stripProtocolRelativePrefix","stripUrlPrefix","removeTrailingSlash","define","amd","3","byteLength","b64","placeHoldersCount","toByteArray","tmp","placeHolders","Arr","L","revLookup","charCodeAt","fromByteArray","uint8","extraBytes","output","parts","len2","encodeChunk","lookup","Uint8Array","start","end","num","4","$","safeAdd","x","y","lsw","md5cmn","q","b","cnt","md5ff","c","d","md5gg","md5hh","md5ii","binlMD5","olda","oldb","oldc","oldd","binl2rstr","input","length32","rstr2binl","length8","rstr2hex","hexTab","str2rstrUTF8","unescape","encodeURIComponent","rawMD5","rawHMACMD5","k","data","hash","bkey","ipad","opad","concat","rstrHMACMD5","md5","string","raw","5","6","base64","ieee754","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","value","isArrayBuffer","array","byteOffset","fromArrayBuffer","encoding","isEncoding","actual","write","fromString","isBuffer","checked","copy","ArrayBuffer","isView","numberIsNaN","fromArrayLike","type","isArray","fromObject","assertSize","size","loweredCase","utf8ToBytes","base64ToBytes","swap","m","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","remaining","strLen","parsed","parseInt","asciiWrite","blitBuffer","byteArray","asciiToBytes","base64Slice","utf8Slice","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","foo","typedArraySupport","console","error","get","species","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","toLocaleString","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","units","hi","lo","utf16leToBytes","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","Infinity","leadSurrogate","trim","base64clean","dst","name","base64-js","7","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","isNaN","floor","log","LN2","8","./lib/","9","Aacute","aacute","Abreve","abreve","ac","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","amp","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","apos","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","el","Element","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","GT","Gt","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","le","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","LT","Lt","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","pre","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","quot","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj","10","html_blocks","forEach","11","regex","self","attr_value","attribute","open_tag","HTML_TAG_RE","12","13","hasOwn","has","object","UNESCAPE_MD_RE","isValidEntityCode","fromCodePoint","surrogate1","surrogate2","NAMED_ENTITY_RE","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","&","<",">","\"","replaceUnsafeChar","keys","isString","unescapeMd","replaceEntities","escapeHtml","./entities","14","xhtmlOut","breaks","langPrefix","linkify","linkTarget","typographer","quotes","highlight","maxNesting","components","core","rules","inline","15","16","17","normalized","decodeURI","err","encodeURI","../common/utils","18","toUpperCase","19","normalizeLink","state","level","posMax","parser","validateLink","linkContent","./normalize_link","20","labelEnd","oldPos","oldFlag","isInLabel","labelUnmatchedScopes","skipToken","21","22","Renderer","ParserCore","ParserBlock","ParserInline","Ruler","config","default","full","commonmark","StateCore","env","tokens","inlineMode","renderer","Remarkable","preset","ruler","configure","presets","enable","use","plugin","process","render","parseInline","renderInline","utils","./common/utils","./configs/commonmark","./configs/default","./configs/full","./parser_block","./parser_core","./parser_inline","./renderer","./ruler","23","StateBlock","_rules","alt","tokenize","startLine","endLine","getRules","line","hasEmptyLines","skipEmptyLines","tShift","blkIndent","tight","isEmpty","parentType","TABS_SCAN_RE","NEWLINES_RE","SPACES_RE","outTokens","lineStart","lastTabPos","lineMax","./rules_block/blockquote","./rules_block/code","./rules_block/deflist","./rules_block/fences","./rules_block/footnote","./rules_block/heading","./rules_block/hr","./rules_block/htmlblock","./rules_block/lheading","./rules_block/list","./rules_block/paragraph","./rules_block/state_block","./rules_block/table","24","Core","./rules_core/abbr","./rules_core/abbr2","./rules_core/block","./rules_core/footnote_tail","./rules_core/inline","./rules_core/linkify","./rules_core/references","./rules_core/replacements","./rules_core/smartquotes","25","StateInline","cached_pos","cacheGet","cacheSet","ok","pending","pushPending","./rules_inline/autolink","./rules_inline/backticks","./rules_inline/del","./rules_inline/emphasis","./rules_inline/entity","./rules_inline/escape","./rules_inline/footnote_inline","./rules_inline/footnote_ref","./rules_inline/htmltag","./rules_inline/ins","./rules_inline/links","./rules_inline/mark","./rules_inline/newline","./rules_inline/state_inline","./rules_inline/sub","./rules_inline/sup","./rules_inline/text","26","getBreak","children","./rules","27","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","chain","fn","at","opt","before","beforeName","ruleName","after","afterName","strict","disable","chainName","28","blockquote_open","blockquote_close","content","fence","fences","fenceName","token","langClass","params","fence_custom","heading_open","hLevel","heading_close","hr","bullet_list_open","bullet_list_close","list_item_open","list_item_close","ordered_list_open","ordered_list_close","paragraph_open","paragraph_close","addBreak","link_open","title","link_close","table_open","table_close","thead_open","thead_close","tbody_open","tbody_close","tr_open","tr_close","th_open","align","th_close","td_open","td_close","strong_open","strong_close","em_open","em_close","del_open","del_close","ins_open","ins_close","mark_open","mark_close","hardbreak","softbreak","htmlblock","htmltag","abbr_open","abbr_close","footnote_ref","id","subId","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","dl_open","dt_open","dd_open","dl_close","dt_close","dd_close","nextToken","29","silent","nextLine","lastLineEmpty","oldTShift","oldBMarks","oldIndent","oldParentType","lines","terminatorRules","terminate","bMarks","eMarks","skipSpaces","30","last","getLines","31","skipMarker","contentStart","ddLine","dtLine","itemLines","listLines","listTokIdx","oldDDIndent","oldTight","prevEmptyEnd","ddIndent","OUTER","markTightParagraphs","32","mem","haveEndMarker","skipChars","33","oldBMark","label","footnotes","refs","34","skipCharsBack","35","36","block_names","HTML_TAG_OPEN_RE","HTML_TAG_CLOSE_RE","lc","../common/html_blocks","37","next","38","skipBulletListMarker","skipOrderedListMarker","indent","posAfterMarker","indentAfterMarker","markerValue","markerCharCode","isOrdered","39","40","indent_found","begin","keepLastLF","first","queue","41","getLine","lineText","rows","cell","aligns","tableLines","tbodyLines","42","parseLinkLabel","parseAbbr","parserInline","abbreviations","../helpers/parse_link_label","../rules_inline/state_inline","43","regEscape","regText","blockTokens","abbrRegExp","sort","44","45","lastParagraph","current","currentLabel","insideRef","refTokens","filter","tok","pop","count","46","47","LINK_SCAN_RE","createLinkifier","links","autolinker","linker","ln","htmlLinkLevel","linkifier","48","parseLinkDestination","parseLinkTitle","normalizeReference","parseReference","references","../helpers/normalize_reference","../helpers/parse_link_destination","../helpers/parse_link_title","49","RARE_RE","SCOPED_ABBR_RE","SCOPED_ABBR","p","tm","inlineTokens","blkIdx","50","QUOTE_TEST_RE","QUOTE_RE","PUNCT_RE","isLetter","replaceAt","thisLevel","lastSpace","nextSpace","item","canOpen","canClose","isSingle","stack","single","51","url_schemas","EMAIL_RE","AUTOLINK_RE","tail","linkMatch","emailMatch","fullUrl","../common/url_schemas","../helpers/normalize_link","52","matchStart","matchEnd","53","lastChar","nextChar","54","isAlphaNum","scanDelims","can_open","can_close","delims","startCount","oldCount","newCount","55","DIGITAL_RE","NAMED_RE","../common/entities","56","ESCAPED","57","labelStart","footnoteId","oldLength","linkLevel","58","footnoteSubId","59","../common/html_re","60","61","ref","isImage","62","63","pmax","64","pendingLevel","cache","65","UNESCAPE_RE","66","67","isTerminatorChar","68","Message","MessageText","Chat","./messages/Message","./messages/MessageText","69","raw_data","msg","getTime","getUsername","hidden","ownMsg","isInstructor","isTA","msgTime","userAvatar","initials","username","hasFile","isImageFile","filename","isMusicFile","isPDFFile","./MessageText","blueimp-md5","70","md","raw_attachments","rendered_text","attachments","JSON","is_image","is_equation","decodeURIComponent","escape","_getByteLen","normal_val","byteLen","btoa","remarkable"],"mappings":"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","file":"chat.js","sourcesContent":["\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n(function () {\n  function e(t, n, r) {\n    function s(o, u) {\n      if (!n[o]) {\n        if (!t[o]) {\n          var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw f.code = \"MODULE_NOT_FOUND\", f;\n        }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\n          var n = t[o][1][e];return s(n ? n : e);\n        }, l, l.exports, e, t, n, r);\n      }return n[o].exports;\n    }var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) {\n      s(r[o]);\n    }return s;\n  }return e;\n})()({ 1: [function (require, module, exports) {\n    (function (Buffer) {\n      (function (w) {\n        \"use strict\";\n\n        var a2b = w.atob;\n\n        function atob(str) {\n          // normal window\n          if ('function' === typeof a2b) {\n            return a2b(str);\n          }\n          // browserify (web worker)\n          else if ('function' === typeof Buffer) {\n              return new Buffer(str, 'base64').toString('binary');\n            }\n            // ios web worker with base64js\n            else if ('object' === _typeof(w.base64js)) {\n                // bufferToBinaryString\n                // https://github.com/coolaj86/unibabel-js/blob/master/index.js#L50\n                var buf = w.base64js.b64ToByteArray(str);\n\n                return Array.prototype.map.call(buf, function (ch) {\n                  return String.fromCharCode(ch);\n                }).join('');\n              }\n              // ios web worker without base64js\n              else {\n                  throw new Error(\"you're probably in an ios webworker. please include use beatgammit's base64-js\");\n                }\n        }\n\n        w.atob = atob;\n\n        if (typeof module !== 'undefined') {\n          module.exports = atob;\n        }\n      })(window);\n    }).call(this, require(\"buffer\").Buffer);\n  }, { \"buffer\": 6 }], 2: [function (require, module, exports) {\n    (function (root, factory) {\n      if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module unless amdModuleId is set\n        define([], function () {\n          return root['Autolinker'] = factory();\n        });\n      } else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n      } else {\n        root['Autolinker'] = factory();\n      }\n    })(this, function () {\n\n      /*!\n       * Autolinker.js\n       * 0.15.3\n       *\n       * Copyright(c) 2015 Gregory Jacobs <greg@greg-jacobs.com>\n       * MIT Licensed. http://www.opensource.org/licenses/mit-license.php\n       *\n       * https://github.com/gregjacobs/Autolinker.js\n       */\n      /**\n       * @class Autolinker\n       * @extends Object\n       * \n       * Utility class used to process a given string of text, and wrap the URLs, email addresses, and Twitter handles in \n       * the appropriate anchor (&lt;a&gt;) tags to turn them into links.\n       * \n       * Any of the configuration options may be provided in an Object (map) provided to the Autolinker constructor, which\n       * will configure how the {@link #link link()} method will process the links.\n       * \n       * For example:\n       * \n       *     var autolinker = new Autolinker( {\n       *         newWindow : false,\n       *         truncate  : 30\n       *     } );\n       *     \n       *     var html = autolinker.link( \"Joe went to www.yahoo.com\" );\n       *     // produces: 'Joe went to <a href=\"http://www.yahoo.com\">yahoo.com</a>'\n       * \n       * \n       * The {@link #static-link static link()} method may also be used to inline options into a single call, which may\n       * be more convenient for one-off uses. For example:\n       * \n       *     var html = Autolinker.link( \"Joe went to www.yahoo.com\", {\n       *         newWindow : false,\n       *         truncate  : 30\n       *     } );\n       *     // produces: 'Joe went to <a href=\"http://www.yahoo.com\">yahoo.com</a>'\n       * \n       * \n       * ## Custom Replacements of Links\n       * \n       * If the configuration options do not provide enough flexibility, a {@link #replaceFn} may be provided to fully customize\n       * the output of Autolinker. This function is called once for each URL/Email/Twitter handle match that is encountered.\n       * \n       * For example:\n       * \n       *     var input = \"...\";  // string with URLs, Email Addresses, and Twitter Handles\n       *     \n       *     var linkedText = Autolinker.link( input, {\n       *         replaceFn : function( autolinker, match ) {\n       *             console.log( \"href = \", match.getAnchorHref() );\n       *             console.log( \"text = \", match.getAnchorText() );\n       *         \n       *             switch( match.getType() ) {\n       *                 case 'url' : \n       *                     console.log( \"url: \", match.getUrl() );\n       *                     \n       *                     if( match.getUrl().indexOf( 'mysite.com' ) === -1 ) {\n       *                         var tag = autolinker.getTagBuilder().build( match );  // returns an `Autolinker.HtmlTag` instance, which provides mutator methods for easy changes\n       *                         tag.setAttr( 'rel', 'nofollow' );\n       *                         tag.addClass( 'external-link' );\n       *                         \n       *                         return tag;\n       *                         \n       *                     } else {\n       *                         return true;  // let Autolinker perform its normal anchor tag replacement\n       *                     }\n       *                     \n       *                 case 'email' :\n       *                     var email = match.getEmail();\n       *                     console.log( \"email: \", email );\n       *                     \n       *                     if( email === \"my@own.address\" ) {\n       *                         return false;  // don't auto-link this particular email address; leave as-is\n       *                     } else {\n       *                         return;  // no return value will have Autolinker perform its normal anchor tag replacement (same as returning `true`)\n       *                     }\n       *                 \n       *                 case 'twitter' :\n       *                     var twitterHandle = match.getTwitterHandle();\n       *                     console.log( twitterHandle );\n       *                     \n       *                     return '<a href=\"http://newplace.to.link.twitter.handles.to/\">' + twitterHandle + '</a>';\n       *             }\n       *         }\n       *     } );\n       * \n       * \n       * The function may return the following values:\n       * \n       * - `true` (Boolean): Allow Autolinker to replace the match as it normally would.\n       * - `false` (Boolean): Do not replace the current match at all - leave as-is.\n       * - Any String: If a string is returned from the function, the string will be used directly as the replacement HTML for\n       *   the match.\n       * - An {@link Autolinker.HtmlTag} instance, which can be used to build/modify an HTML tag before writing out its HTML text.\n       * \n       * @constructor\n       * @param {Object} [config] The configuration options for the Autolinker instance, specified in an Object (map).\n       */\n      var Autolinker = function Autolinker(cfg) {\n        Autolinker.Util.assign(this, cfg); // assign the properties of `cfg` onto the Autolinker instance. Prototype properties will be used for missing configs.\n      };\n\n      Autolinker.prototype = {\n        constructor: Autolinker, // fix constructor property\n\n        /**\n         * @cfg {Boolean} urls\n         * \n         * `true` if miscellaneous URLs should be automatically linked, `false` if they should not be.\n         */\n        urls: true,\n\n        /**\n         * @cfg {Boolean} email\n         * \n         * `true` if email addresses should be automatically linked, `false` if they should not be.\n         */\n        email: true,\n\n        /**\n         * @cfg {Boolean} twitter\n         * \n         * `true` if Twitter handles (\"@example\") should be automatically linked, `false` if they should not be.\n         */\n        twitter: true,\n\n        /**\n         * @cfg {Boolean} newWindow\n         * \n         * `true` if the links should open in a new window, `false` otherwise.\n         */\n        newWindow: true,\n\n        /**\n         * @cfg {Boolean} stripPrefix\n         * \n         * `true` if 'http://' or 'https://' and/or the 'www.' should be stripped from the beginning of URL links' text, \n         * `false` otherwise.\n         */\n        stripPrefix: true,\n\n        /**\n         * @cfg {Number} truncate\n         * \n         * A number for how many characters long URLs/emails/twitter handles should be truncated to inside the text of \n         * a link. If the URL/email/twitter is over this number of characters, it will be truncated to this length by \n         * adding a two period ellipsis ('..') to the end of the string.\n         * \n         * For example: A url like 'http://www.yahoo.com/some/long/path/to/a/file' truncated to 25 characters might look\n         * something like this: 'yahoo.com/some/long/pat..'\n         */\n        truncate: undefined,\n\n        /**\n         * @cfg {String} className\n         * \n         * A CSS class name to add to the generated links. This class will be added to all links, as well as this class\n         * plus url/email/twitter suffixes for styling url/email/twitter links differently.\n         * \n         * For example, if this config is provided as \"myLink\", then:\n         * \n         * - URL links will have the CSS classes: \"myLink myLink-url\"\n         * - Email links will have the CSS classes: \"myLink myLink-email\", and\n         * - Twitter links will have the CSS classes: \"myLink myLink-twitter\"\n         */\n        className: \"\",\n\n        /**\n         * @cfg {Function} replaceFn\n         * \n         * A function to individually process each URL/Email/Twitter match found in the input string.\n         * \n         * See the class's description for usage.\n         * \n         * This function is called with the following parameters:\n         * \n         * @cfg {Autolinker} replaceFn.autolinker The Autolinker instance, which may be used to retrieve child objects from (such\n         *   as the instance's {@link #getTagBuilder tag builder}).\n         * @cfg {Autolinker.match.Match} replaceFn.match The Match instance which can be used to retrieve information about the\n         *   {@link Autolinker.match.Url URL}/{@link Autolinker.match.Email email}/{@link Autolinker.match.Twitter Twitter}\n         *   match that the `replaceFn` is currently processing.\n         */\n\n        /**\n         * @private\n         * @property {Autolinker.htmlParser.HtmlParser} htmlParser\n         * \n         * The HtmlParser instance used to skip over HTML tags, while finding text nodes to process. This is lazily instantiated\n         * in the {@link #getHtmlParser} method.\n         */\n        htmlParser: undefined,\n\n        /**\n         * @private\n         * @property {Autolinker.matchParser.MatchParser} matchParser\n         * \n         * The MatchParser instance used to find URL/email/Twitter matches in the text nodes of an input string passed to\n         * {@link #link}. This is lazily instantiated in the {@link #getMatchParser} method.\n         */\n        matchParser: undefined,\n\n        /**\n         * @private\n         * @property {Autolinker.AnchorTagBuilder} tagBuilder\n         * \n         * The AnchorTagBuilder instance used to build the URL/email/Twitter replacement anchor tags. This is lazily instantiated\n         * in the {@link #getTagBuilder} method.\n         */\n        tagBuilder: undefined,\n\n        /**\n         * Automatically links URLs, email addresses, and Twitter handles found in the given chunk of HTML. \n         * Does not link URLs found within HTML tags.\n         * \n         * For instance, if given the text: `You should go to http://www.yahoo.com`, then the result\n         * will be `You should go to &lt;a href=\"http://www.yahoo.com\"&gt;http://www.yahoo.com&lt;/a&gt;`\n         * \n         * This method finds the text around any HTML elements in the input `textOrHtml`, which will be the text that is processed.\n         * Any original HTML elements will be left as-is, as well as the text that is already wrapped in anchor (&lt;a&gt;) tags.\n         * \n         * @param {String} textOrHtml The HTML or text to link URLs, email addresses, and Twitter handles within (depending on if\n         *   the {@link #urls}, {@link #email}, and {@link #twitter} options are enabled).\n         * @return {String} The HTML, with URLs/emails/Twitter handles automatically linked.\n         */\n        link: function link(textOrHtml) {\n          var htmlParser = this.getHtmlParser(),\n              htmlNodes = htmlParser.parse(textOrHtml),\n              anchorTagStackCount = 0,\n              // used to only process text around anchor tags, and any inner text/html they may have\n          resultHtml = [];\n\n          for (var i = 0, len = htmlNodes.length; i < len; i++) {\n            var node = htmlNodes[i],\n                nodeType = node.getType(),\n                nodeText = node.getText();\n\n            if (nodeType === 'element') {\n              // Process HTML nodes in the input `textOrHtml`\n              if (node.getTagName() === 'a') {\n                if (!node.isClosing()) {\n                  // it's the start <a> tag\n                  anchorTagStackCount++;\n                } else {\n                  // it's the end </a> tag\n                  anchorTagStackCount = Math.max(anchorTagStackCount - 1, 0); // attempt to handle extraneous </a> tags by making sure the stack count never goes below 0\n                }\n              }\n              resultHtml.push(nodeText); // now add the text of the tag itself verbatim\n            } else if (nodeType === 'entity') {\n              resultHtml.push(nodeText); // append HTML entity nodes (such as '&nbsp;') verbatim\n            } else {\n              // Process text nodes in the input `textOrHtml`\n              if (anchorTagStackCount === 0) {\n                // If we're not within an <a> tag, process the text node to linkify\n                var linkifiedStr = this.linkifyStr(nodeText);\n                resultHtml.push(linkifiedStr);\n              } else {\n                // `text` is within an <a> tag, simply append the text - we do not want to autolink anything \n                // already within an <a>...</a> tag\n                resultHtml.push(nodeText);\n              }\n            }\n          }\n\n          return resultHtml.join(\"\");\n        },\n\n        /**\n         * Process the text that lies in between HTML tags, performing the anchor tag replacements for matched \n         * URLs/emails/Twitter handles, and returns the string with the replacements made. \n         * \n         * This method does the actual wrapping of URLs/emails/Twitter handles with anchor tags.\n         * \n         * @private\n         * @param {String} str The string of text to auto-link.\n         * @return {String} The text with anchor tags auto-filled.\n         */\n        linkifyStr: function linkifyStr(str) {\n          return this.getMatchParser().replace(str, this.createMatchReturnVal, this);\n        },\n\n        /**\n         * Creates the return string value for a given match in the input string, for the {@link #processTextNode} method.\n         * \n         * This method handles the {@link #replaceFn}, if one was provided.\n         * \n         * @private\n         * @param {Autolinker.match.Match} match The Match object that represents the match.\n         * @return {String} The string that the `match` should be replaced with. This is usually the anchor tag string, but\n         *   may be the `matchStr` itself if the match is not to be replaced.\n         */\n        createMatchReturnVal: function createMatchReturnVal(match) {\n          // Handle a custom `replaceFn` being provided\n          var replaceFnResult;\n          if (this.replaceFn) {\n            replaceFnResult = this.replaceFn.call(this, this, match); // Autolinker instance is the context, and the first arg\n          }\n\n          if (typeof replaceFnResult === 'string') {\n            return replaceFnResult; // `replaceFn` returned a string, use that\n          } else if (replaceFnResult === false) {\n            return match.getMatchedText(); // no replacement for the match\n          } else if (replaceFnResult instanceof Autolinker.HtmlTag) {\n            return replaceFnResult.toString();\n          } else {\n            // replaceFnResult === true, or no/unknown return value from function\n            // Perform Autolinker's default anchor tag generation\n            var tagBuilder = this.getTagBuilder(),\n                anchorTag = tagBuilder.build(match); // returns an Autolinker.HtmlTag instance\n\n            return anchorTag.toString();\n          }\n        },\n\n        /**\n         * Lazily instantiates and returns the {@link #htmlParser} instance for this Autolinker instance.\n         * \n         * @protected\n         * @return {Autolinker.htmlParser.HtmlParser}\n         */\n        getHtmlParser: function getHtmlParser() {\n          var htmlParser = this.htmlParser;\n\n          if (!htmlParser) {\n            htmlParser = this.htmlParser = new Autolinker.htmlParser.HtmlParser();\n          }\n\n          return htmlParser;\n        },\n\n        /**\n         * Lazily instantiates and returns the {@link #matchParser} instance for this Autolinker instance.\n         * \n         * @protected\n         * @return {Autolinker.matchParser.MatchParser}\n         */\n        getMatchParser: function getMatchParser() {\n          var matchParser = this.matchParser;\n\n          if (!matchParser) {\n            matchParser = this.matchParser = new Autolinker.matchParser.MatchParser({\n              urls: this.urls,\n              email: this.email,\n              twitter: this.twitter,\n              stripPrefix: this.stripPrefix\n            });\n          }\n\n          return matchParser;\n        },\n\n        /**\n         * Returns the {@link #tagBuilder} instance for this Autolinker instance, lazily instantiating it\n         * if it does not yet exist.\n         * \n         * This method may be used in a {@link #replaceFn} to generate the {@link Autolinker.HtmlTag HtmlTag} instance that \n         * Autolinker would normally generate, and then allow for modifications before returning it. For example:\n         * \n         *     var html = Autolinker.link( \"Test google.com\", {\n         *         replaceFn : function( autolinker, match ) {\n         *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance\n         *             tag.setAttr( 'rel', 'nofollow' );\n         *             \n         *             return tag;\n         *         }\n         *     } );\n         *     \n         *     // generated html:\n         *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n         * \n         * @return {Autolinker.AnchorTagBuilder}\n         */\n        getTagBuilder: function getTagBuilder() {\n          var tagBuilder = this.tagBuilder;\n\n          if (!tagBuilder) {\n            tagBuilder = this.tagBuilder = new Autolinker.AnchorTagBuilder({\n              newWindow: this.newWindow,\n              truncate: this.truncate,\n              className: this.className\n            });\n          }\n\n          return tagBuilder;\n        }\n\n      };\n\n      /**\n       * Automatically links URLs, email addresses, and Twitter handles found in the given chunk of HTML. \n       * Does not link URLs found within HTML tags.\n       * \n       * For instance, if given the text: `You should go to http://www.yahoo.com`, then the result\n       * will be `You should go to &lt;a href=\"http://www.yahoo.com\"&gt;http://www.yahoo.com&lt;/a&gt;`\n       * \n       * Example:\n       * \n       *     var linkedText = Autolinker.link( \"Go to google.com\", { newWindow: false } );\n       *     // Produces: \"Go to <a href=\"http://google.com\">google.com</a>\"\n       * \n       * @static\n       * @param {String} textOrHtml The HTML or text to find URLs, email addresses, and Twitter handles within (depending on if\n       *   the {@link #urls}, {@link #email}, and {@link #twitter} options are enabled).\n       * @param {Object} [options] Any of the configuration options for the Autolinker class, specified in an Object (map).\n       *   See the class description for an example call.\n       * @return {String} The HTML text, with URLs automatically linked\n       */\n      Autolinker.link = function (textOrHtml, options) {\n        var autolinker = new Autolinker(options);\n        return autolinker.link(textOrHtml);\n      };\n\n      // Autolinker Namespaces\n      Autolinker.match = {};\n      Autolinker.htmlParser = {};\n      Autolinker.matchParser = {};\n      /*global Autolinker */\n      /*jshint eqnull:true, boss:true */\n      /**\n       * @class Autolinker.Util\n       * @singleton\n       * \n       * A few utility methods for Autolinker.\n       */\n      Autolinker.Util = {\n\n        /**\n         * @property {Function} abstractMethod\n         * \n         * A function object which represents an abstract method.\n         */\n        abstractMethod: function abstractMethod() {\n          throw \"abstract\";\n        },\n\n        /**\n         * Assigns (shallow copies) the properties of `src` onto `dest`.\n         * \n         * @param {Object} dest The destination object.\n         * @param {Object} src The source object.\n         * @return {Object} The destination object (`dest`)\n         */\n        assign: function assign(dest, src) {\n          for (var prop in src) {\n            if (src.hasOwnProperty(prop)) {\n              dest[prop] = src[prop];\n            }\n          }\n\n          return dest;\n        },\n\n        /**\n         * Extends `superclass` to create a new subclass, adding the `protoProps` to the new subclass's prototype.\n         * \n         * @param {Function} superclass The constructor function for the superclass.\n         * @param {Object} protoProps The methods/properties to add to the subclass's prototype. This may contain the\n         *   special property `constructor`, which will be used as the new subclass's constructor function.\n         * @return {Function} The new subclass function.\n         */\n        extend: function extend(superclass, protoProps) {\n          var superclassProto = superclass.prototype;\n\n          var F = function F() {};\n          F.prototype = superclassProto;\n\n          var subclass;\n          if (protoProps.hasOwnProperty('constructor')) {\n            subclass = protoProps.constructor;\n          } else {\n            subclass = function subclass() {\n              superclassProto.constructor.apply(this, arguments);\n            };\n          }\n\n          var subclassProto = subclass.prototype = new F(); // set up prototype chain\n          subclassProto.constructor = subclass; // fix constructor property\n          subclassProto.superclass = superclassProto;\n\n          delete protoProps.constructor; // don't re-assign constructor property to the prototype, since a new function may have been created (`subclass`), which is now already there\n          Autolinker.Util.assign(subclassProto, protoProps);\n\n          return subclass;\n        },\n\n        /**\n         * Truncates the `str` at `len - ellipsisChars.length`, and adds the `ellipsisChars` to the\n         * end of the string (by default, two periods: '..'). If the `str` length does not exceed \n         * `len`, the string will be returned unchanged.\n         * \n         * @param {String} str The string to truncate and add an ellipsis to.\n         * @param {Number} truncateLen The length to truncate the string at.\n         * @param {String} [ellipsisChars=..] The ellipsis character(s) to add to the end of `str`\n         *   when truncated. Defaults to '..'\n         */\n        ellipsis: function ellipsis(str, truncateLen, ellipsisChars) {\n          if (str.length > truncateLen) {\n            ellipsisChars = ellipsisChars == null ? '..' : ellipsisChars;\n            str = str.substring(0, truncateLen - ellipsisChars.length) + ellipsisChars;\n          }\n          return str;\n        },\n\n        /**\n         * Supports `Array.prototype.indexOf()` functionality for old IE (IE8 and below).\n         * \n         * @param {Array} arr The array to find an element of.\n         * @param {*} element The element to find in the array, and return the index of.\n         * @return {Number} The index of the `element`, or -1 if it was not found.\n         */\n        indexOf: function indexOf(arr, element) {\n          if (Array.prototype.indexOf) {\n            return arr.indexOf(element);\n          } else {\n            for (var i = 0, len = arr.length; i < len; i++) {\n              if (arr[i] === element) return i;\n            }\n            return -1;\n          }\n        },\n\n        /**\n         * Performs the functionality of what modern browsers do when `String.prototype.split()` is called\n         * with a regular expression that contains capturing parenthesis.\n         * \n         * For example:\n         * \n         *     // Modern browsers: \n         *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', ',', 'b', ',', 'c' ]\n         *     \n         *     // Old IE (including IE8):\n         *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', 'b', 'c' ]\n         *     \n         * This method emulates the functionality of modern browsers for the old IE case.\n         * \n         * @param {String} str The string to split.\n         * @param {RegExp} splitRegex The regular expression to split the input `str` on. The splitting\n         *   character(s) will be spliced into the array, as in the \"modern browsers\" example in the \n         *   description of this method. \n         *   Note #1: the supplied regular expression **must** have the 'g' flag specified.\n         *   Note #2: for simplicity's sake, the regular expression does not need \n         *   to contain capturing parenthesis - it will be assumed that any match has them.\n         * @return {String[]} The split array of strings, with the splitting character(s) included.\n         */\n        splitAndCapture: function splitAndCapture(str, splitRegex) {\n          if (!splitRegex.global) throw new Error(\"`splitRegex` must have the 'g' flag set\");\n\n          var result = [],\n              lastIdx = 0,\n              match;\n\n          while (match = splitRegex.exec(str)) {\n            result.push(str.substring(lastIdx, match.index));\n            result.push(match[0]); // push the splitting char(s)\n\n            lastIdx = match.index + match[0].length;\n          }\n          result.push(str.substring(lastIdx));\n\n          return result;\n        }\n\n      };\n      /*global Autolinker */\n      /*jshint boss:true */\n      /**\n       * @class Autolinker.HtmlTag\n       * @extends Object\n       * \n       * Represents an HTML tag, which can be used to easily build/modify HTML tags programmatically.\n       * \n       * Autolinker uses this abstraction to create HTML tags, and then write them out as strings. You may also use\n       * this class in your code, especially within a {@link Autolinker#replaceFn replaceFn}.\n       * \n       * ## Examples\n       * \n       * Example instantiation:\n       * \n       *     var tag = new Autolinker.HtmlTag( {\n       *         tagName : 'a',\n       *         attrs   : { 'href': 'http://google.com', 'class': 'external-link' },\n       *         innerHtml : 'Google'\n       *     } );\n       *     \n       *     tag.toString();  // <a href=\"http://google.com\" class=\"external-link\">Google</a>\n       *     \n       *     // Individual accessor methods\n       *     tag.getTagName();                 // 'a'\n       *     tag.getAttr( 'href' );            // 'http://google.com'\n       *     tag.hasClass( 'external-link' );  // true\n       * \n       * \n       * Using mutator methods (which may be used in combination with instantiation config properties):\n       * \n       *     var tag = new Autolinker.HtmlTag();\n       *     tag.setTagName( 'a' );\n       *     tag.setAttr( 'href', 'http://google.com' );\n       *     tag.addClass( 'external-link' );\n       *     tag.setInnerHtml( 'Google' );\n       *     \n       *     tag.getTagName();                 // 'a'\n       *     tag.getAttr( 'href' );            // 'http://google.com'\n       *     tag.hasClass( 'external-link' );  // true\n       *     \n       *     tag.toString();  // <a href=\"http://google.com\" class=\"external-link\">Google</a>\n       *     \n       * \n       * ## Example use within a {@link Autolinker#replaceFn replaceFn}\n       * \n       *     var html = Autolinker.link( \"Test google.com\", {\n       *         replaceFn : function( autolinker, match ) {\n       *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance, configured with the Match's href and anchor text\n       *             tag.setAttr( 'rel', 'nofollow' );\n       *             \n       *             return tag;\n       *         }\n       *     } );\n       *     \n       *     // generated html:\n       *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n       *     \n       *     \n       * ## Example use with a new tag for the replacement\n       * \n       *     var html = Autolinker.link( \"Test google.com\", {\n       *         replaceFn : function( autolinker, match ) {\n       *             var tag = new Autolinker.HtmlTag( {\n       *                 tagName : 'button',\n       *                 attrs   : { 'title': 'Load URL: ' + match.getAnchorHref() },\n       *                 innerHtml : 'Load URL: ' + match.getAnchorText()\n       *             } );\n       *             \n       *             return tag;\n       *         }\n       *     } );\n       *     \n       *     // generated html:\n       *     //   Test <button title=\"Load URL: http://google.com\">Load URL: google.com</button>\n       */\n      Autolinker.HtmlTag = Autolinker.Util.extend(Object, {\n\n        /**\n         * @cfg {String} tagName\n         * \n         * The tag name. Ex: 'a', 'button', etc.\n         * \n         * Not required at instantiation time, but should be set using {@link #setTagName} before {@link #toString}\n         * is executed.\n         */\n\n        /**\n         * @cfg {Object.<String, String>} attrs\n         * \n         * An key/value Object (map) of attributes to create the tag with. The keys are the attribute names, and the\n         * values are the attribute values.\n         */\n\n        /**\n         * @cfg {String} innerHtml\n         * \n         * The inner HTML for the tag. \n         * \n         * Note the camel case name on `innerHtml`. Acronyms are camelCased in this utility (such as not to run into the acronym \n         * naming inconsistency that the DOM developers created with `XMLHttpRequest`). You may alternatively use {@link #innerHTML}\n         * if you prefer, but this one is recommended.\n         */\n\n        /**\n         * @cfg {String} innerHTML\n         * \n         * Alias of {@link #innerHtml}, accepted for consistency with the browser DOM api, but prefer the camelCased version\n         * for acronym names.\n         */\n\n        /**\n         * @protected\n         * @property {RegExp} whitespaceRegex\n         * \n         * Regular expression used to match whitespace in a string of CSS classes.\n         */\n        whitespaceRegex: /\\s+/,\n\n        /**\n         * @constructor\n         * @param {Object} [cfg] The configuration properties for this class, in an Object (map)\n         */\n        constructor: function constructor(cfg) {\n          Autolinker.Util.assign(this, cfg);\n\n          this.innerHtml = this.innerHtml || this.innerHTML; // accept either the camelCased form or the fully capitalized acronym\n        },\n\n        /**\n         * Sets the tag name that will be used to generate the tag with.\n         * \n         * @param {String} tagName\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        setTagName: function setTagName(tagName) {\n          this.tagName = tagName;\n          return this;\n        },\n\n        /**\n         * Retrieves the tag name.\n         * \n         * @return {String}\n         */\n        getTagName: function getTagName() {\n          return this.tagName || \"\";\n        },\n\n        /**\n         * Sets an attribute on the HtmlTag.\n         * \n         * @param {String} attrName The attribute name to set.\n         * @param {String} attrValue The attribute value to set.\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        setAttr: function setAttr(attrName, attrValue) {\n          var tagAttrs = this.getAttrs();\n          tagAttrs[attrName] = attrValue;\n\n          return this;\n        },\n\n        /**\n         * Retrieves an attribute from the HtmlTag. If the attribute does not exist, returns `undefined`.\n         * \n         * @param {String} name The attribute name to retrieve.\n         * @return {String} The attribute's value, or `undefined` if it does not exist on the HtmlTag.\n         */\n        getAttr: function getAttr(attrName) {\n          return this.getAttrs()[attrName];\n        },\n\n        /**\n         * Sets one or more attributes on the HtmlTag.\n         * \n         * @param {Object.<String, String>} attrs A key/value Object (map) of the attributes to set.\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        setAttrs: function setAttrs(attrs) {\n          var tagAttrs = this.getAttrs();\n          Autolinker.Util.assign(tagAttrs, attrs);\n\n          return this;\n        },\n\n        /**\n         * Retrieves the attributes Object (map) for the HtmlTag.\n         * \n         * @return {Object.<String, String>} A key/value object of the attributes for the HtmlTag.\n         */\n        getAttrs: function getAttrs() {\n          return this.attrs || (this.attrs = {});\n        },\n\n        /**\n         * Sets the provided `cssClass`, overwriting any current CSS classes on the HtmlTag.\n         * \n         * @param {String} cssClass One or more space-separated CSS classes to set (overwrite).\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        setClass: function setClass(cssClass) {\n          return this.setAttr('class', cssClass);\n        },\n\n        /**\n         * Convenience method to add one or more CSS classes to the HtmlTag. Will not add duplicate CSS classes.\n         * \n         * @param {String} cssClass One or more space-separated CSS classes to add.\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        addClass: function addClass(cssClass) {\n          var classAttr = this.getClass(),\n              whitespaceRegex = this.whitespaceRegex,\n              indexOf = Autolinker.Util.indexOf,\n              // to support IE8 and below\n          classes = !classAttr ? [] : classAttr.split(whitespaceRegex),\n              newClasses = cssClass.split(whitespaceRegex),\n              newClass;\n\n          while (newClass = newClasses.shift()) {\n            if (indexOf(classes, newClass) === -1) {\n              classes.push(newClass);\n            }\n          }\n\n          this.getAttrs()['class'] = classes.join(\" \");\n          return this;\n        },\n\n        /**\n         * Convenience method to remove one or more CSS classes from the HtmlTag.\n         * \n         * @param {String} cssClass One or more space-separated CSS classes to remove.\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        removeClass: function removeClass(cssClass) {\n          var classAttr = this.getClass(),\n              whitespaceRegex = this.whitespaceRegex,\n              indexOf = Autolinker.Util.indexOf,\n              // to support IE8 and below\n          classes = !classAttr ? [] : classAttr.split(whitespaceRegex),\n              removeClasses = cssClass.split(whitespaceRegex),\n              removeClass;\n\n          while (classes.length && (removeClass = removeClasses.shift())) {\n            var idx = indexOf(classes, removeClass);\n            if (idx !== -1) {\n              classes.splice(idx, 1);\n            }\n          }\n\n          this.getAttrs()['class'] = classes.join(\" \");\n          return this;\n        },\n\n        /**\n         * Convenience method to retrieve the CSS class(es) for the HtmlTag, which will each be separated by spaces when\n         * there are multiple.\n         * \n         * @return {String}\n         */\n        getClass: function getClass() {\n          return this.getAttrs()['class'] || \"\";\n        },\n\n        /**\n         * Convenience method to check if the tag has a CSS class or not.\n         * \n         * @param {String} cssClass The CSS class to check for.\n         * @return {Boolean} `true` if the HtmlTag has the CSS class, `false` otherwise.\n         */\n        hasClass: function hasClass(cssClass) {\n          return (' ' + this.getClass() + ' ').indexOf(' ' + cssClass + ' ') !== -1;\n        },\n\n        /**\n         * Sets the inner HTML for the tag.\n         * \n         * @param {String} html The inner HTML to set.\n         * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n         */\n        setInnerHtml: function setInnerHtml(html) {\n          this.innerHtml = html;\n\n          return this;\n        },\n\n        /**\n         * Retrieves the inner HTML for the tag.\n         * \n         * @return {String}\n         */\n        getInnerHtml: function getInnerHtml() {\n          return this.innerHtml || \"\";\n        },\n\n        /**\n         * Override of superclass method used to generate the HTML string for the tag.\n         * \n         * @return {String}\n         */\n        toString: function toString() {\n          var tagName = this.getTagName(),\n              attrsStr = this.buildAttrsStr();\n\n          attrsStr = attrsStr ? ' ' + attrsStr : ''; // prepend a space if there are actually attributes\n\n          return ['<', tagName, attrsStr, '>', this.getInnerHtml(), '</', tagName, '>'].join(\"\");\n        },\n\n        /**\n         * Support method for {@link #toString}, returns the string space-separated key=\"value\" pairs, used to populate \n         * the stringified HtmlTag.\n         * \n         * @protected\n         * @return {String} Example return: `attr1=\"value1\" attr2=\"value2\"`\n         */\n        buildAttrsStr: function buildAttrsStr() {\n          if (!this.attrs) return \"\"; // no `attrs` Object (map) has been set, return empty string\n\n          var attrs = this.getAttrs(),\n              attrsArr = [];\n\n          for (var prop in attrs) {\n            if (attrs.hasOwnProperty(prop)) {\n              attrsArr.push(prop + '=\"' + attrs[prop] + '\"');\n            }\n          }\n          return attrsArr.join(\" \");\n        }\n\n      });\n      /*global Autolinker */\n      /*jshint sub:true */\n      /**\n       * @protected\n       * @class Autolinker.AnchorTagBuilder\n       * @extends Object\n       * \n       * Builds anchor (&lt;a&gt;) tags for the Autolinker utility when a match is found.\n       * \n       * Normally this class is instantiated, configured, and used internally by an {@link Autolinker} instance, but may \n       * actually be retrieved in a {@link Autolinker#replaceFn replaceFn} to create {@link Autolinker.HtmlTag HtmlTag} instances\n       * which may be modified before returning from the {@link Autolinker#replaceFn replaceFn}. For example:\n       * \n       *     var html = Autolinker.link( \"Test google.com\", {\n       *         replaceFn : function( autolinker, match ) {\n       *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance\n       *             tag.setAttr( 'rel', 'nofollow' );\n       *             \n       *             return tag;\n       *         }\n       *     } );\n       *     \n       *     // generated html:\n       *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n       */\n      Autolinker.AnchorTagBuilder = Autolinker.Util.extend(Object, {\n\n        /**\n         * @cfg {Boolean} newWindow\n         * @inheritdoc Autolinker#newWindow\n         */\n\n        /**\n         * @cfg {Number} truncate\n         * @inheritdoc Autolinker#truncate\n         */\n\n        /**\n         * @cfg {String} className\n         * @inheritdoc Autolinker#className\n         */\n\n        /**\n         * @constructor\n         * @param {Object} [cfg] The configuration options for the AnchorTagBuilder instance, specified in an Object (map).\n         */\n        constructor: function constructor(cfg) {\n          Autolinker.Util.assign(this, cfg);\n        },\n\n        /**\n         * Generates the actual anchor (&lt;a&gt;) tag to use in place of the matched URL/email/Twitter text,\n         * via its `match` object.\n         * \n         * @param {Autolinker.match.Match} match The Match instance to generate an anchor tag from.\n         * @return {Autolinker.HtmlTag} The HtmlTag instance for the anchor tag.\n         */\n        build: function build(match) {\n          var tag = new Autolinker.HtmlTag({\n            tagName: 'a',\n            attrs: this.createAttrs(match.getType(), match.getAnchorHref()),\n            innerHtml: this.processAnchorText(match.getAnchorText())\n          });\n\n          return tag;\n        },\n\n        /**\n         * Creates the Object (map) of the HTML attributes for the anchor (&lt;a&gt;) tag being generated.\n         * \n         * @protected\n         * @param {\"url\"/\"email\"/\"twitter\"} matchType The type of match that an anchor tag is being generated for.\n         * @param {String} href The href for the anchor tag.\n         * @return {Object} A key/value Object (map) of the anchor tag's attributes. \n         */\n        createAttrs: function createAttrs(matchType, anchorHref) {\n          var attrs = {\n            'href': anchorHref // we'll always have the `href` attribute\n          };\n\n          var cssClass = this.createCssClass(matchType);\n          if (cssClass) {\n            attrs['class'] = cssClass;\n          }\n          if (this.newWindow) {\n            attrs['target'] = \"_blank\";\n          }\n\n          return attrs;\n        },\n\n        /**\n         * Creates the CSS class that will be used for a given anchor tag, based on the `matchType` and the {@link #className}\n         * config.\n         * \n         * @private\n         * @param {\"url\"/\"email\"/\"twitter\"} matchType The type of match that an anchor tag is being generated for.\n         * @return {String} The CSS class string for the link. Example return: \"myLink myLink-url\". If no {@link #className}\n         *   was configured, returns an empty string.\n         */\n        createCssClass: function createCssClass(matchType) {\n          var className = this.className;\n\n          if (!className) return \"\";else return className + \" \" + className + \"-\" + matchType; // ex: \"myLink myLink-url\", \"myLink myLink-email\", or \"myLink myLink-twitter\"\n        },\n\n        /**\n         * Processes the `anchorText` by truncating the text according to the {@link #truncate} config.\n         * \n         * @private\n         * @param {String} anchorText The anchor tag's text (i.e. what will be displayed).\n         * @return {String} The processed `anchorText`.\n         */\n        processAnchorText: function processAnchorText(anchorText) {\n          anchorText = this.doTruncate(anchorText);\n\n          return anchorText;\n        },\n\n        /**\n         * Performs the truncation of the `anchorText`, if the `anchorText` is longer than the {@link #truncate} option.\n         * Truncates the text to 2 characters fewer than the {@link #truncate} option, and adds \"..\" to the end.\n         * \n         * @private\n         * @param {String} text The anchor tag's text (i.e. what will be displayed).\n         * @return {String} The truncated anchor text.\n         */\n        doTruncate: function doTruncate(anchorText) {\n          return Autolinker.Util.ellipsis(anchorText, this.truncate || Number.POSITIVE_INFINITY);\n        }\n\n      });\n      /*global Autolinker */\n      /**\n       * @private\n       * @class Autolinker.htmlParser.HtmlParser\n       * @extends Object\n       * \n       * An HTML parser implementation which simply walks an HTML string and returns an array of \n       * {@link Autolinker.htmlParser.HtmlNode HtmlNodes} that represent the basic HTML structure of the input string.\n       * \n       * Autolinker uses this to only link URLs/emails/Twitter handles within text nodes, effectively ignoring / \"walking\n       * around\" HTML tags.\n       */\n      Autolinker.htmlParser.HtmlParser = Autolinker.Util.extend(Object, {\n\n        /**\n         * @private\n         * @property {RegExp} htmlRegex\n         * \n         * The regular expression used to pull out HTML tags from a string. Handles namespaced HTML tags and\n         * attribute names, as specified by http://www.w3.org/TR/html-markup/syntax.html.\n         * \n         * Capturing groups:\n         * \n         * 1. The \"!DOCTYPE\" tag name, if a tag is a &lt;!DOCTYPE&gt; tag.\n         * 2. If it is an end tag, this group will have the '/'.\n         * 3. The tag name for all tags (other than the &lt;!DOCTYPE&gt; tag)\n         */\n        htmlRegex: function () {\n          var tagNameRegex = /[0-9a-zA-Z][0-9a-zA-Z:]*/,\n              attrNameRegex = /[^\\s\\0\"'>\\/=\\x01-\\x1F\\x7F]+/,\n              // the unicode range accounts for excluding control chars, and the delete char\n          attrValueRegex = /(?:\"[^\"]*?\"|'[^']*?'|[^'\"=<>`\\s]+)/,\n              // double quoted, single quoted, or unquoted attribute values\n          nameEqualsValueRegex = attrNameRegex.source + '(?:\\\\s*=\\\\s*' + attrValueRegex.source + ')?'; // optional '=[value]'\n\n          return new RegExp([\n          // for <!DOCTYPE> tag. Ex: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">) \n          '(?:', '<(!DOCTYPE)', // *** Capturing Group 1 - If it's a doctype tag\n\n          // Zero or more attributes following the tag name\n          '(?:', '\\\\s+', // one or more whitespace chars before an attribute\n\n          // Either:\n          // A. attr=\"value\", or \n          // B. \"value\" alone (To cover example doctype tag: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">) \n          '(?:', nameEqualsValueRegex, '|', attrValueRegex.source + ')', ')*', '>', ')', '|',\n\n          // All other HTML tags (i.e. tags that are not <!DOCTYPE>)\n          '(?:', '<(/)?', // Beginning of a tag. Either '<' for a start tag, or '</' for an end tag. \n          // *** Capturing Group 2: The slash or an empty string. Slash ('/') for end tag, empty string for start or self-closing tag.\n\n          // *** Capturing Group 3 - The tag name\n          '(' + tagNameRegex.source + ')',\n\n          // Zero or more attributes following the tag name\n          '(?:', '\\\\s+', // one or more whitespace chars before an attribute\n          nameEqualsValueRegex, // attr=\"value\" (with optional =\"value\" part)\n          ')*', '\\\\s*/?', // any trailing spaces and optional '/' before the closing '>'\n          '>', ')'].join(\"\"), 'gi');\n        }(),\n\n        /**\n         * @private\n         * @property {RegExp} htmlCharacterEntitiesRegex\n         *\n         * The regular expression that matches common HTML character entities.\n         * \n         * Ignoring &amp; as it could be part of a query string -- handling it separately.\n         */\n        htmlCharacterEntitiesRegex: /(&nbsp;|&#160;|&lt;|&#60;|&gt;|&#62;|&quot;|&#34;|&#39;)/gi,\n\n        /**\n         * Parses an HTML string and returns a simple array of {@link Autolinker.htmlParser.HtmlNode HtmlNodes} to represent\n         * the HTML structure of the input string. \n         * \n         * @param {String} html The HTML to parse.\n         * @return {Autolinker.htmlParser.HtmlNode[]}\n         */\n        parse: function parse(html) {\n          var htmlRegex = this.htmlRegex,\n              currentResult,\n              lastIndex = 0,\n              textAndEntityNodes,\n              nodes = []; // will be the result of the method\n\n          while ((currentResult = htmlRegex.exec(html)) !== null) {\n            var tagText = currentResult[0],\n                tagName = currentResult[1] || currentResult[3],\n                // The <!DOCTYPE> tag (ex: \"!DOCTYPE\"), or another tag (ex: \"a\" or \"img\") \n            isClosingTag = !!currentResult[2],\n                inBetweenTagsText = html.substring(lastIndex, currentResult.index);\n\n            // Push TextNodes and EntityNodes for any text found between tags\n            if (inBetweenTagsText) {\n              textAndEntityNodes = this.parseTextAndEntityNodes(inBetweenTagsText);\n              nodes.push.apply(nodes, textAndEntityNodes);\n            }\n\n            // Push the ElementNode\n            nodes.push(this.createElementNode(tagText, tagName, isClosingTag));\n\n            lastIndex = currentResult.index + tagText.length;\n          }\n\n          // Process any remaining text after the last HTML element. Will process all of the text if there were no HTML elements.\n          if (lastIndex < html.length) {\n            var text = html.substring(lastIndex);\n\n            // Push TextNodes and EntityNodes for any text found between tags\n            if (text) {\n              textAndEntityNodes = this.parseTextAndEntityNodes(text);\n              nodes.push.apply(nodes, textAndEntityNodes);\n            }\n          }\n\n          return nodes;\n        },\n\n        /**\n         * Parses text and HTML entity nodes from a given string. The input string should not have any HTML tags (elements)\n         * within it.\n         * \n         * @private\n         * @param {String} text The text to parse.\n         * @return {Autolinker.htmlParser.HtmlNode[]} An array of HtmlNodes to represent the \n         *   {@link Autolinker.htmlParser.TextNode TextNodes} and {@link Autolinker.htmlParser.EntityNode EntityNodes} found.\n         */\n        parseTextAndEntityNodes: function parseTextAndEntityNodes(text) {\n          var nodes = [],\n              textAndEntityTokens = Autolinker.Util.splitAndCapture(text, this.htmlCharacterEntitiesRegex); // split at HTML entities, but include the HTML entities in the results array\n\n          // Every even numbered token is a TextNode, and every odd numbered token is an EntityNode\n          // For example: an input `text` of \"Test &quot;this&quot; today\" would turn into the \n          //   `textAndEntityTokens`: [ 'Test ', '&quot;', 'this', '&quot;', ' today' ]\n          for (var i = 0, len = textAndEntityTokens.length; i < len; i += 2) {\n            var textToken = textAndEntityTokens[i],\n                entityToken = textAndEntityTokens[i + 1];\n\n            if (textToken) nodes.push(this.createTextNode(textToken));\n            if (entityToken) nodes.push(this.createEntityNode(entityToken));\n          }\n          return nodes;\n        },\n\n        /**\n         * Factory method to create an {@link Autolinker.htmlParser.ElementNode ElementNode}.\n         * \n         * @private\n         * @param {String} tagText The full text of the tag (element) that was matched, including its attributes.\n         * @param {String} tagName The name of the tag. Ex: An &lt;img&gt; tag would be passed to this method as \"img\".\n         * @param {Boolean} isClosingTag `true` if it's a closing tag, false otherwise.\n         * @return {Autolinker.htmlParser.ElementNode}\n         */\n        createElementNode: function createElementNode(tagText, tagName, isClosingTag) {\n          return new Autolinker.htmlParser.ElementNode({\n            text: tagText,\n            tagName: tagName.toLowerCase(),\n            closing: isClosingTag\n          });\n        },\n\n        /**\n         * Factory method to create a {@link Autolinker.htmlParser.EntityNode EntityNode}.\n         * \n         * @private\n         * @param {String} text The text that was matched for the HTML entity (such as '&amp;nbsp;').\n         * @return {Autolinker.htmlParser.EntityNode}\n         */\n        createEntityNode: function createEntityNode(text) {\n          return new Autolinker.htmlParser.EntityNode({ text: text });\n        },\n\n        /**\n         * Factory method to create a {@link Autolinker.htmlParser.TextNode TextNode}.\n         * \n         * @private\n         * @param {String} text The text that was matched.\n         * @return {Autolinker.htmlParser.TextNode}\n         */\n        createTextNode: function createTextNode(text) {\n          return new Autolinker.htmlParser.TextNode({ text: text });\n        }\n\n      });\n      /*global Autolinker */\n      /**\n       * @abstract\n       * @class Autolinker.htmlParser.HtmlNode\n       * \n       * Represents an HTML node found in an input string. An HTML node is one of the following:\n       * \n       * 1. An {@link Autolinker.htmlParser.ElementNode ElementNode}, which represents HTML tags.\n       * 2. A {@link Autolinker.htmlParser.TextNode TextNode}, which represents text outside or within HTML tags.\n       * 3. A {@link Autolinker.htmlParser.EntityNode EntityNode}, which represents one of the known HTML\n       *    entities that Autolinker looks for. This includes common ones such as &amp;quot; and &amp;nbsp;\n       */\n      Autolinker.htmlParser.HtmlNode = Autolinker.Util.extend(Object, {\n\n        /**\n         * @cfg {String} text (required)\n         * \n         * The original text that was matched for the HtmlNode. \n         * \n         * - In the case of an {@link Autolinker.htmlParser.ElementNode ElementNode}, this will be the tag's\n         *   text.\n         * - In the case of a {@link Autolinker.htmlParser.TextNode TextNode}, this will be the text itself.\n         * - In the case of a {@link Autolinker.htmlParser.EntityNode EntityNode}, this will be the text of\n         *   the HTML entity.\n         */\n        text: \"\",\n\n        /**\n         * @constructor\n         * @param {Object} cfg The configuration properties for the Match instance, specified in an Object (map).\n         */\n        constructor: function constructor(cfg) {\n          Autolinker.Util.assign(this, cfg);\n        },\n\n        /**\n         * Returns a string name for the type of node that this class represents.\n         * \n         * @abstract\n         * @return {String}\n         */\n        getType: Autolinker.Util.abstractMethod,\n\n        /**\n         * Retrieves the {@link #text} for the HtmlNode.\n         * \n         * @return {String}\n         */\n        getText: function getText() {\n          return this.text;\n        }\n\n      });\n      /*global Autolinker */\n      /**\n       * @class Autolinker.htmlParser.ElementNode\n       * @extends Autolinker.htmlParser.HtmlNode\n       * \n       * Represents an HTML element node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n       * \n       * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more details.\n       */\n      Autolinker.htmlParser.ElementNode = Autolinker.Util.extend(Autolinker.htmlParser.HtmlNode, {\n\n        /**\n         * @cfg {String} tagName (required)\n         * \n         * The name of the tag that was matched.\n         */\n        tagName: '',\n\n        /**\n         * @cfg {Boolean} closing (required)\n         * \n         * `true` if the element (tag) is a closing tag, `false` if its an opening tag.\n         */\n        closing: false,\n\n        /**\n         * Returns a string name for the type of node that this class represents.\n         * \n         * @return {String}\n         */\n        getType: function getType() {\n          return 'element';\n        },\n\n        /**\n         * Returns the HTML element's (tag's) name. Ex: for an &lt;img&gt; tag, returns \"img\".\n         * \n         * @return {String}\n         */\n        getTagName: function getTagName() {\n          return this.tagName;\n        },\n\n        /**\n         * Determines if the HTML element (tag) is a closing tag. Ex: &lt;div&gt; returns\n         * `false`, while &lt;/div&gt; returns `true`.\n         * \n         * @return {Boolean}\n         */\n        isClosing: function isClosing() {\n          return this.closing;\n        }\n\n      });\n      /*global Autolinker */\n      /**\n       * @class Autolinker.htmlParser.EntityNode\n       * @extends Autolinker.htmlParser.HtmlNode\n       * \n       * Represents a known HTML entity node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n       * Ex: '&amp;nbsp;', or '&amp#160;' (which will be retrievable from the {@link #getText} method.\n       * \n       * Note that this class will only be returned from the HtmlParser for the set of checked HTML entity nodes \n       * defined by the {@link Autolinker.htmlParser.HtmlParser#htmlCharacterEntitiesRegex}.\n       * \n       * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more details.\n       */\n      Autolinker.htmlParser.EntityNode = Autolinker.Util.extend(Autolinker.htmlParser.HtmlNode, {\n\n        /**\n         * Returns a string name for the type of node that this class represents.\n         * \n         * @return {String}\n         */\n        getType: function getType() {\n          return 'entity';\n        }\n\n      });\n      /*global Autolinker */\n      /**\n       * @class Autolinker.htmlParser.TextNode\n       * @extends Autolinker.htmlParser.HtmlNode\n       * \n       * Represents a text node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n       * \n       * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more details.\n       */\n      Autolinker.htmlParser.TextNode = Autolinker.Util.extend(Autolinker.htmlParser.HtmlNode, {\n\n        /**\n         * Returns a string name for the type of node that this class represents.\n         * \n         * @return {String}\n         */\n        getType: function getType() {\n          return 'text';\n        }\n\n      });\n      /*global Autolinker */\n      /**\n       * @private\n       * @class Autolinker.matchParser.MatchParser\n       * @extends Object\n       * \n       * Used by Autolinker to parse {@link #urls URLs}, {@link #emails email addresses}, and {@link #twitter Twitter handles}, \n       * given an input string of text.\n       * \n       * The MatchParser is fed a non-HTML string in order to search out URLs, email addresses and Twitter handles. Autolinker\n       * first uses the {@link HtmlParser} to \"walk around\" HTML tags, and then the text around the HTML tags is passed into\n       * the MatchParser in order to find the actual matches.\n       */\n      Autolinker.matchParser.MatchParser = Autolinker.Util.extend(Object, {\n\n        /**\n         * @cfg {Boolean} urls\n         * \n         * `true` if miscellaneous URLs should be automatically linked, `false` if they should not be.\n         */\n        urls: true,\n\n        /**\n         * @cfg {Boolean} email\n         * \n         * `true` if email addresses should be automatically linked, `false` if they should not be.\n         */\n        email: true,\n\n        /**\n         * @cfg {Boolean} twitter\n         * \n         * `true` if Twitter handles (\"@example\") should be automatically linked, `false` if they should not be.\n         */\n        twitter: true,\n\n        /**\n         * @cfg {Boolean} stripPrefix\n         * \n         * `true` if 'http://' or 'https://' and/or the 'www.' should be stripped from the beginning of URL links' text\n         * in {@link Autolinker.match.Url URL matches}, `false` otherwise.\n         * \n         * TODO: Handle this before a URL Match object is instantiated.\n         */\n        stripPrefix: true,\n\n        /**\n         * @private\n         * @property {RegExp} matcherRegex\n         * \n         * The regular expression that matches URLs, email addresses, and Twitter handles.\n         * \n         * This regular expression has the following capturing groups:\n         * \n         * 1. Group that is used to determine if there is a Twitter handle match (i.e. \\@someTwitterUser). Simply check for its \n         *    existence to determine if there is a Twitter handle match. The next couple of capturing groups give information \n         *    about the Twitter handle match.\n         * 2. The whitespace character before the \\@sign in a Twitter handle. This is needed because there are no lookbehinds in\n         *    JS regular expressions, and can be used to reconstruct the original string in a replace().\n         * 3. The Twitter handle itself in a Twitter match. If the match is '@someTwitterUser', the handle is 'someTwitterUser'.\n         * 4. Group that matches an email address. Used to determine if the match is an email address, as well as holding the full \n         *    address. Ex: 'me@my.com'\n         * 5. Group that matches a URL in the input text. Ex: 'http://google.com', 'www.google.com', or just 'google.com'.\n         *    This also includes a path, url parameters, or hash anchors. Ex: google.com/path/to/file?q1=1&q2=2#myAnchor\n         * 6. Group that matches a protocol URL (i.e. 'http://google.com'). This is used to match protocol URLs with just a single\n         *    word, like 'http://localhost', where we won't double check that the domain name has at least one '.' in it.\n         * 7. A protocol-relative ('//') match for the case of a 'www.' prefixed URL. Will be an empty string if it is not a \n         *    protocol-relative match. We need to know the character before the '//' in order to determine if it is a valid match\n         *    or the // was in a string we don't want to auto-link.\n         * 8. A protocol-relative ('//') match for the case of a known TLD prefixed URL. Will be an empty string if it is not a \n         *    protocol-relative match. See #6 for more info. \n         */\n        matcherRegex: function () {\n          var twitterRegex = /(^|[^\\w])@(\\w{1,15})/,\n              // For matching a twitter handle. Ex: @gregory_jacobs\n\n          emailRegex = /(?:[\\-;:&=\\+\\$,\\w\\.]+@)/,\n              // something@ for email addresses (a.k.a. local-part)\n\n          protocolRegex = /(?:[A-Za-z][-.+A-Za-z0-9]+:(?![A-Za-z][-.+A-Za-z0-9]+:\\/\\/)(?!\\d+\\/?)(?:\\/\\/)?)/,\n              // match protocol, allow in format \"http://\" or \"mailto:\". However, do not match the first part of something like 'link:http://www.google.com' (i.e. don't match \"link:\"). Also, make sure we don't interpret 'google.com:8000' as if 'google.com' was a protocol here (i.e. ignore a trailing port number in this regex)\n          wwwRegex = /(?:www\\.)/,\n              // starting with 'www.'\n          domainNameRegex = /[A-Za-z0-9\\.\\-]*[A-Za-z0-9\\-]/,\n              // anything looking at all like a domain, non-unicode domains, not ending in a period\n          tldRegex = /\\.(?:international|construction|contractors|enterprises|photography|productions|foundation|immobilien|industries|management|properties|technology|christmas|community|directory|education|equipment|institute|marketing|solutions|vacations|bargains|boutique|builders|catering|cleaning|clothing|computer|democrat|diamonds|graphics|holdings|lighting|partners|plumbing|supplies|training|ventures|academy|careers|company|cruises|domains|exposed|flights|florist|gallery|guitars|holiday|kitchen|neustar|okinawa|recipes|rentals|reviews|shiksha|singles|support|systems|agency|berlin|camera|center|coffee|condos|dating|estate|events|expert|futbol|kaufen|luxury|maison|monash|museum|nagoya|photos|repair|report|social|supply|tattoo|tienda|travel|viajes|villas|vision|voting|voyage|actor|build|cards|cheap|codes|dance|email|glass|house|mango|ninja|parts|photo|shoes|solar|today|tokyo|tools|watch|works|aero|arpa|asia|best|bike|blue|buzz|camp|club|cool|coop|farm|fish|gift|guru|info|jobs|kiwi|kred|land|limo|link|menu|mobi|moda|name|pics|pink|post|qpon|rich|ruhr|sexy|tips|vote|voto|wang|wien|wiki|zone|bar|bid|biz|cab|cat|ceo|com|edu|gov|int|kim|mil|net|onl|org|pro|pub|red|tel|uno|wed|xxx|xyz|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw)\\b/,\n              // match our known top level domains (TLDs)\n\n          // Allow optional path, query string, and hash anchor, not ending in the following characters: \"?!:,.;\"\n          // http://blog.codinghorror.com/the-problem-with-urls/\n          urlSuffixRegex = /[\\-A-Za-z0-9+&@#\\/%=~_()|'$*\\[\\]?!:,.;]*[\\-A-Za-z0-9+&@#\\/%=~_()|'$*\\[\\]]/;\n\n          return new RegExp(['(', // *** Capturing group $1, which can be used to check for a twitter handle match. Use group $3 for the actual twitter handle though. $2 may be used to reconstruct the original string in a replace() \n          // *** Capturing group $2, which matches the whitespace character before the '@' sign (needed because of no lookbehinds), and \n          // *** Capturing group $3, which matches the actual twitter handle\n          twitterRegex.source, ')', '|', '(', // *** Capturing group $4, which is used to determine an email match\n          emailRegex.source, domainNameRegex.source, tldRegex.source, ')', '|', '(', // *** Capturing group $5, which is used to match a URL\n          '(?:', // parens to cover match for protocol (optional), and domain\n          '(', // *** Capturing group $6, for a protocol-prefixed url (ex: http://google.com)\n          protocolRegex.source, domainNameRegex.source, ')', '|', '(?:', // non-capturing paren for a 'www.' prefixed url (ex: www.google.com)\n          '(.?//)?', // *** Capturing group $7 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character\n          wwwRegex.source, domainNameRegex.source, ')', '|', '(?:', // non-capturing paren for known a TLD url (ex: google.com)\n          '(.?//)?', // *** Capturing group $8 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character\n          domainNameRegex.source, tldRegex.source, ')', ')', '(?:' + urlSuffixRegex.source + ')?', // match for path, query string, and/or hash anchor - optional\n          ')'].join(\"\"), 'gi');\n        }(),\n\n        /**\n         * @private\n         * @property {RegExp} charBeforeProtocolRelMatchRegex\n         * \n         * The regular expression used to retrieve the character before a protocol-relative URL match.\n         * \n         * This is used in conjunction with the {@link #matcherRegex}, which needs to grab the character before a protocol-relative\n         * '//' due to the lack of a negative look-behind in JavaScript regular expressions. The character before the match is stripped\n         * from the URL.\n         */\n        charBeforeProtocolRelMatchRegex: /^(.)?\\/\\//,\n\n        /**\n         * @private\n         * @property {Autolinker.MatchValidator} matchValidator\n         * \n         * The MatchValidator object, used to filter out any false positives from the {@link #matcherRegex}. See\n         * {@link Autolinker.MatchValidator} for details.\n         */\n\n        /**\n         * @constructor\n         * @param {Object} [cfg] The configuration options for the AnchorTagBuilder instance, specified in an Object (map).\n         */\n        constructor: function constructor(cfg) {\n          Autolinker.Util.assign(this, cfg);\n\n          this.matchValidator = new Autolinker.MatchValidator();\n        },\n\n        /**\n         * Parses the input `text` to search for URLs/emails/Twitter handles, and calls the `replaceFn`\n         * to allow replacements of the matches. Returns the `text` with matches replaced.\n         * \n         * @param {String} text The text to search and repace matches in.\n         * @param {Function} replaceFn The iterator function to handle the replacements. The function takes a\n         *   single argument, a {@link Autolinker.match.Match} object, and should return the text that should\n         *   make the replacement.\n         * @param {Object} [contextObj=window] The context object (\"scope\") to run the `replaceFn` in.\n         * @return {String}\n         */\n        replace: function replace(text, replaceFn, contextObj) {\n          var me = this; // for closure\n\n          return text.replace(this.matcherRegex, function (matchStr, $1, $2, $3, $4, $5, $6, $7, $8) {\n            var matchDescObj = me.processCandidateMatch(matchStr, $1, $2, $3, $4, $5, $6, $7, $8); // \"match description\" object\n\n            // Return out with no changes for match types that are disabled (url, email, twitter), or for matches that are \n            // invalid (false positives from the matcherRegex, which can't use look-behinds since they are unavailable in JS).\n            if (!matchDescObj) {\n              return matchStr;\n            } else {\n              // Generate replacement text for the match from the `replaceFn`\n              var replaceStr = replaceFn.call(contextObj, matchDescObj.match);\n              return matchDescObj.prefixStr + replaceStr + matchDescObj.suffixStr;\n            }\n          });\n        },\n\n        /**\n         * Processes a candidate match from the {@link #matcherRegex}. \n         * \n         * Not all matches found by the regex are actual URL/email/Twitter matches, as determined by the {@link #matchValidator}. In\n         * this case, the method returns `null`. Otherwise, a valid Object with `prefixStr`, `match`, and `suffixStr` is returned.\n         * \n         * @private\n         * @param {String} matchStr The full match that was found by the {@link #matcherRegex}.\n         * @param {String} twitterMatch The matched text of a Twitter handle, if the match is a Twitter match.\n         * @param {String} twitterHandlePrefixWhitespaceChar The whitespace char before the @ sign in a Twitter handle match. This \n         *   is needed because of no lookbehinds in JS regexes, and is need to re-include the character for the anchor tag replacement.\n         * @param {String} twitterHandle The actual Twitter user (i.e the word after the @ sign in a Twitter match).\n         * @param {String} emailAddressMatch The matched email address for an email address match.\n         * @param {String} urlMatch The matched URL string for a URL match.\n         * @param {String} protocolUrlMatch The match URL string for a protocol match. Ex: 'http://yahoo.com'. This is used to match\n         *   something like 'http://localhost', where we won't double check that the domain name has at least one '.' in it.\n         * @param {String} wwwProtocolRelativeMatch The '//' for a protocol-relative match from a 'www' url, with the character that \n         *   comes before the '//'.\n         * @param {String} tldProtocolRelativeMatch The '//' for a protocol-relative match from a TLD (top level domain) match, with \n         *   the character that comes before the '//'.\n         *   \n         * @return {Object} A \"match description object\". This will be `null` if the match was invalid, or if a match type is disabled.\n         *   Otherwise, this will be an Object (map) with the following properties:\n         * @return {String} return.prefixStr The char(s) that should be prepended to the replacement string. These are char(s) that\n         *   were needed to be included from the regex match that were ignored by processing code, and should be re-inserted into \n         *   the replacement stream.\n         * @return {String} return.suffixStr The char(s) that should be appended to the replacement string. These are char(s) that\n         *   were needed to be included from the regex match that were ignored by processing code, and should be re-inserted into \n         *   the replacement stream.\n         * @return {Autolinker.match.Match} return.match The Match object that represents the match that was found.\n         */\n        processCandidateMatch: function processCandidateMatch(matchStr, twitterMatch, twitterHandlePrefixWhitespaceChar, twitterHandle, emailAddressMatch, urlMatch, protocolUrlMatch, wwwProtocolRelativeMatch, tldProtocolRelativeMatch) {\n          // Note: The `matchStr` variable wil be fixed up to remove characters that are no longer needed (which will \n          // be added to `prefixStr` and `suffixStr`).\n\n          var protocolRelativeMatch = wwwProtocolRelativeMatch || tldProtocolRelativeMatch,\n              match,\n              // Will be an Autolinker.match.Match object\n\n          prefixStr = \"\",\n              // A string to use to prefix the anchor tag that is created. This is needed for the Twitter handle match\n          suffixStr = \"\"; // A string to suffix the anchor tag that is created. This is used if there is a trailing parenthesis that should not be auto-linked.\n\n\n          // Return out with `null` for match types that are disabled (url, email, twitter), or for matches that are \n          // invalid (false positives from the matcherRegex, which can't use look-behinds since they are unavailable in JS).\n          if (twitterMatch && !this.twitter || emailAddressMatch && !this.email || urlMatch && !this.urls || !this.matchValidator.isValidMatch(urlMatch, protocolUrlMatch, protocolRelativeMatch)) {\n            return null;\n          }\n\n          // Handle a closing parenthesis at the end of the match, and exclude it if there is not a matching open parenthesis\n          // in the match itself. \n          if (this.matchHasUnbalancedClosingParen(matchStr)) {\n            matchStr = matchStr.substr(0, matchStr.length - 1); // remove the trailing \")\"\n            suffixStr = \")\"; // this will be added after the generated <a> tag\n          }\n\n          if (emailAddressMatch) {\n            match = new Autolinker.match.Email({ matchedText: matchStr, email: emailAddressMatch });\n          } else if (twitterMatch) {\n            // fix up the `matchStr` if there was a preceding whitespace char, which was needed to determine the match \n            // itself (since there are no look-behinds in JS regexes)\n            if (twitterHandlePrefixWhitespaceChar) {\n              prefixStr = twitterHandlePrefixWhitespaceChar;\n              matchStr = matchStr.slice(1); // remove the prefixed whitespace char from the match\n            }\n            match = new Autolinker.match.Twitter({ matchedText: matchStr, twitterHandle: twitterHandle });\n          } else {\n            // url match\n            // If it's a protocol-relative '//' match, remove the character before the '//' (which the matcherRegex needed\n            // to match due to the lack of a negative look-behind in JavaScript regular expressions)\n            if (protocolRelativeMatch) {\n              var charBeforeMatch = protocolRelativeMatch.match(this.charBeforeProtocolRelMatchRegex)[1] || \"\";\n\n              if (charBeforeMatch) {\n                // fix up the `matchStr` if there was a preceding char before a protocol-relative match, which was needed to determine the match itself (since there are no look-behinds in JS regexes)\n                prefixStr = charBeforeMatch;\n                matchStr = matchStr.slice(1); // remove the prefixed char from the match\n              }\n            }\n\n            match = new Autolinker.match.Url({\n              matchedText: matchStr,\n              url: matchStr,\n              protocolUrlMatch: !!protocolUrlMatch,\n              protocolRelativeMatch: !!protocolRelativeMatch,\n              stripPrefix: this.stripPrefix\n            });\n          }\n\n          return {\n            prefixStr: prefixStr,\n            suffixStr: suffixStr,\n            match: match\n          };\n        },\n\n        /**\n         * Determines if a match found has an unmatched closing parenthesis. If so, this parenthesis will be removed\n         * from the match itself, and appended after the generated anchor tag in {@link #processTextNode}.\n         * \n         * A match may have an extra closing parenthesis at the end of the match because the regular expression must include parenthesis\n         * for URLs such as \"wikipedia.com/something_(disambiguation)\", which should be auto-linked. \n         * \n         * However, an extra parenthesis *will* be included when the URL itself is wrapped in parenthesis, such as in the case of\n         * \"(wikipedia.com/something_(disambiguation))\". In this case, the last closing parenthesis should *not* be part of the URL \n         * itself, and this method will return `true`.\n         * \n         * @private\n         * @param {String} matchStr The full match string from the {@link #matcherRegex}.\n         * @return {Boolean} `true` if there is an unbalanced closing parenthesis at the end of the `matchStr`, `false` otherwise.\n         */\n        matchHasUnbalancedClosingParen: function matchHasUnbalancedClosingParen(matchStr) {\n          var lastChar = matchStr.charAt(matchStr.length - 1);\n\n          if (lastChar === ')') {\n            var openParensMatch = matchStr.match(/\\(/g),\n                closeParensMatch = matchStr.match(/\\)/g),\n                numOpenParens = openParensMatch && openParensMatch.length || 0,\n                numCloseParens = closeParensMatch && closeParensMatch.length || 0;\n\n            if (numOpenParens < numCloseParens) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n      });\n      /*global Autolinker */\n      /*jshint scripturl:true */\n      /**\n       * @private\n       * @class Autolinker.MatchValidator\n       * @extends Object\n       * \n       * Used by Autolinker to filter out false positives from the {@link Autolinker#matcherRegex}.\n       * \n       * Due to the limitations of regular expressions (including the missing feature of look-behinds in JS regular expressions),\n       * we cannot always determine the validity of a given match. This class applies a bit of additional logic to filter out any\n       * false positives that have been matched by the {@link Autolinker#matcherRegex}.\n       */\n      Autolinker.MatchValidator = Autolinker.Util.extend(Object, {\n\n        /**\n         * @private\n         * @property {RegExp} invalidProtocolRelMatchRegex\n         * \n         * The regular expression used to check a potential protocol-relative URL match, coming from the \n         * {@link Autolinker#matcherRegex}. A protocol-relative URL is, for example, \"//yahoo.com\"\n         * \n         * This regular expression checks to see if there is a word character before the '//' match in order to determine if \n         * we should actually autolink a protocol-relative URL. This is needed because there is no negative look-behind in \n         * JavaScript regular expressions. \n         * \n         * For instance, we want to autolink something like \"Go to: //google.com\", but we don't want to autolink something \n         * like \"abc//google.com\"\n         */\n        invalidProtocolRelMatchRegex: /^[\\w]\\/\\//,\n\n        /**\n         * Regex to test for a full protocol, with the two trailing slashes. Ex: 'http://'\n         * \n         * @private\n         * @property {RegExp} hasFullProtocolRegex\n         */\n        hasFullProtocolRegex: /^[A-Za-z][-.+A-Za-z0-9]+:\\/\\//,\n\n        /**\n         * Regex to find the URI scheme, such as 'mailto:'.\n         * \n         * This is used to filter out 'javascript:' and 'vbscript:' schemes.\n         * \n         * @private\n         * @property {RegExp} uriSchemeRegex\n         */\n        uriSchemeRegex: /^[A-Za-z][-.+A-Za-z0-9]+:/,\n\n        /**\n         * Regex to determine if at least one word char exists after the protocol (i.e. after the ':')\n         * \n         * @private\n         * @property {RegExp} hasWordCharAfterProtocolRegex\n         */\n        hasWordCharAfterProtocolRegex: /:[^\\s]*?[A-Za-z]/,\n\n        /**\n         * Determines if a given match found by {@link Autolinker#processTextNode} is valid. Will return `false` for:\n         * \n         * 1) URL matches which do not have at least have one period ('.') in the domain name (effectively skipping over \n         *    matches like \"abc:def\"). However, URL matches with a protocol will be allowed (ex: 'http://localhost')\n         * 2) URL matches which do not have at least one word character in the domain name (effectively skipping over\n         *    matches like \"git:1.0\").\n         * 3) A protocol-relative url match (a URL beginning with '//') whose previous character is a word character \n         *    (effectively skipping over strings like \"abc//google.com\")\n         * \n         * Otherwise, returns `true`.\n         * \n         * @param {String} urlMatch The matched URL, if there was one. Will be an empty string if the match is not a URL match.\n         * @param {String} protocolUrlMatch The match URL string for a protocol match. Ex: 'http://yahoo.com'. This is used to match\n         *   something like 'http://localhost', where we won't double check that the domain name has at least one '.' in it.\n         * @param {String} protocolRelativeMatch The protocol-relative string for a URL match (i.e. '//'), possibly with a preceding\n         *   character (ex, a space, such as: ' //', or a letter, such as: 'a//'). The match is invalid if there is a word character\n         *   preceding the '//'.\n         * @return {Boolean} `true` if the match given is valid and should be processed, or `false` if the match is invalid and/or \n         *   should just not be processed.\n         */\n        isValidMatch: function isValidMatch(urlMatch, protocolUrlMatch, protocolRelativeMatch) {\n          if (protocolUrlMatch && !this.isValidUriScheme(protocolUrlMatch) || this.urlMatchDoesNotHaveProtocolOrDot(urlMatch, protocolUrlMatch) || // At least one period ('.') must exist in the URL match for us to consider it an actual URL, *unless* it was a full protocol match (like 'http://localhost')\n          this.urlMatchDoesNotHaveAtLeastOneWordChar(urlMatch, protocolUrlMatch) || // At least one letter character must exist in the domain name after a protocol match. Ex: skip over something like \"git:1.0\"\n          this.isInvalidProtocolRelativeMatch(protocolRelativeMatch) // A protocol-relative match which has a word character in front of it (so we can skip something like \"abc//google.com\")\n          ) {\n              return false;\n            }\n\n          return true;\n        },\n\n        /**\n         * Determines if the URI scheme is a valid scheme to be autolinked. Returns `false` if the scheme is \n         * 'javascript:' or 'vbscript:'\n         * \n         * @private\n         * @param {String} uriSchemeMatch The match URL string for a full URI scheme match. Ex: 'http://yahoo.com' \n         *   or 'mailto:a@a.com'.\n         * @return {Boolean} `true` if the scheme is a valid one, `false` otherwise.\n         */\n        isValidUriScheme: function isValidUriScheme(uriSchemeMatch) {\n          var uriScheme = uriSchemeMatch.match(this.uriSchemeRegex)[0].toLowerCase();\n\n          return uriScheme !== 'javascript:' && uriScheme !== 'vbscript:';\n        },\n\n        /**\n         * Determines if a URL match does not have either:\n         * \n         * a) a full protocol (i.e. 'http://'), or\n         * b) at least one dot ('.') in the domain name (for a non-full-protocol match).\n         * \n         * Either situation is considered an invalid URL (ex: 'git:d' does not have either the '://' part, or at least one dot\n         * in the domain name. If the match was 'git:abc.com', we would consider this valid.)\n         * \n         * @private\n         * @param {String} urlMatch The matched URL, if there was one. Will be an empty string if the match is not a URL match.\n         * @param {String} protocolUrlMatch The match URL string for a protocol match. Ex: 'http://yahoo.com'. This is used to match\n         *   something like 'http://localhost', where we won't double check that the domain name has at least one '.' in it.\n         * @return {Boolean} `true` if the URL match does not have a full protocol, or at least one dot ('.') in a non-full-protocol\n         *   match.\n         */\n        urlMatchDoesNotHaveProtocolOrDot: function urlMatchDoesNotHaveProtocolOrDot(urlMatch, protocolUrlMatch) {\n          return !!urlMatch && (!protocolUrlMatch || !this.hasFullProtocolRegex.test(protocolUrlMatch)) && urlMatch.indexOf('.') === -1;\n        },\n\n        /**\n         * Determines if a URL match does not have at least one word character after the protocol (i.e. in the domain name).\n         * \n         * At least one letter character must exist in the domain name after a protocol match. Ex: skip over something \n         * like \"git:1.0\"\n         * \n         * @private\n         * @param {String} urlMatch The matched URL, if there was one. Will be an empty string if the match is not a URL match.\n         * @param {String} protocolUrlMatch The match URL string for a protocol match. Ex: 'http://yahoo.com'. This is used to\n         *   know whether or not we have a protocol in the URL string, in order to check for a word character after the protocol\n         *   separator (':').\n         * @return {Boolean} `true` if the URL match does not have at least one word character in it after the protocol, `false`\n         *   otherwise.\n         */\n        urlMatchDoesNotHaveAtLeastOneWordChar: function urlMatchDoesNotHaveAtLeastOneWordChar(urlMatch, protocolUrlMatch) {\n          if (urlMatch && protocolUrlMatch) {\n            return !this.hasWordCharAfterProtocolRegex.test(urlMatch);\n          } else {\n            return false;\n          }\n        },\n\n        /**\n         * Determines if a protocol-relative match is an invalid one. This method returns `true` if there is a `protocolRelativeMatch`,\n         * and that match contains a word character before the '//' (i.e. it must contain whitespace or nothing before the '//' in\n         * order to be considered valid).\n         * \n         * @private\n         * @param {String} protocolRelativeMatch The protocol-relative string for a URL match (i.e. '//'), possibly with a preceding\n         *   character (ex, a space, such as: ' //', or a letter, such as: 'a//'). The match is invalid if there is a word character\n         *   preceding the '//'.\n         * @return {Boolean} `true` if it is an invalid protocol-relative match, `false` otherwise.\n         */\n        isInvalidProtocolRelativeMatch: function isInvalidProtocolRelativeMatch(protocolRelativeMatch) {\n          return !!protocolRelativeMatch && this.invalidProtocolRelMatchRegex.test(protocolRelativeMatch);\n        }\n\n      });\n      /*global Autolinker */\n      /**\n       * @abstract\n       * @class Autolinker.match.Match\n       * \n       * Represents a match found in an input string which should be Autolinked. A Match object is what is provided in a \n       * {@link Autolinker#replaceFn replaceFn}, and may be used to query for details about the match.\n       * \n       * For example:\n       * \n       *     var input = \"...\";  // string with URLs, Email Addresses, and Twitter Handles\n       *     \n       *     var linkedText = Autolinker.link( input, {\n       *         replaceFn : function( autolinker, match ) {\n       *             console.log( \"href = \", match.getAnchorHref() );\n       *             console.log( \"text = \", match.getAnchorText() );\n       *         \n       *             switch( match.getType() ) {\n       *                 case 'url' : \n       *                     console.log( \"url: \", match.getUrl() );\n       *                     \n       *                 case 'email' :\n       *                     console.log( \"email: \", match.getEmail() );\n       *                     \n       *                 case 'twitter' :\n       *                     console.log( \"twitter: \", match.getTwitterHandle() );\n       *             }\n       *         }\n       *     } );\n       *     \n       * See the {@link Autolinker} class for more details on using the {@link Autolinker#replaceFn replaceFn}.\n       */\n      Autolinker.match.Match = Autolinker.Util.extend(Object, {\n\n        /**\n         * @cfg {String} matchedText (required)\n         * \n         * The original text that was matched.\n         */\n\n        /**\n         * @constructor\n         * @param {Object} cfg The configuration properties for the Match instance, specified in an Object (map).\n         */\n        constructor: function constructor(cfg) {\n          Autolinker.Util.assign(this, cfg);\n        },\n\n        /**\n         * Returns a string name for the type of match that this class represents.\n         * \n         * @abstract\n         * @return {String}\n         */\n        getType: Autolinker.Util.abstractMethod,\n\n        /**\n         * Returns the original text that was matched.\n         * \n         * @return {String}\n         */\n        getMatchedText: function getMatchedText() {\n          return this.matchedText;\n        },\n\n        /**\n         * Returns the anchor href that should be generated for the match.\n         * \n         * @abstract\n         * @return {String}\n         */\n        getAnchorHref: Autolinker.Util.abstractMethod,\n\n        /**\n         * Returns the anchor text that should be generated for the match.\n         * \n         * @abstract\n         * @return {String}\n         */\n        getAnchorText: Autolinker.Util.abstractMethod\n\n      });\n      /*global Autolinker */\n      /**\n       * @class Autolinker.match.Email\n       * @extends Autolinker.match.Match\n       * \n       * Represents a Email match found in an input string which should be Autolinked.\n       * \n       * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n       */\n      Autolinker.match.Email = Autolinker.Util.extend(Autolinker.match.Match, {\n\n        /**\n         * @cfg {String} email (required)\n         * \n         * The email address that was matched.\n         */\n\n        /**\n         * Returns a string name for the type of match that this class represents.\n         * \n         * @return {String}\n         */\n        getType: function getType() {\n          return 'email';\n        },\n\n        /**\n         * Returns the email address that was matched.\n         * \n         * @return {String}\n         */\n        getEmail: function getEmail() {\n          return this.email;\n        },\n\n        /**\n         * Returns the anchor href that should be generated for the match.\n         * \n         * @return {String}\n         */\n        getAnchorHref: function getAnchorHref() {\n          return 'mailto:' + this.email;\n        },\n\n        /**\n         * Returns the anchor text that should be generated for the match.\n         * \n         * @return {String}\n         */\n        getAnchorText: function getAnchorText() {\n          return this.email;\n        }\n\n      });\n      /*global Autolinker */\n      /**\n       * @class Autolinker.match.Twitter\n       * @extends Autolinker.match.Match\n       * \n       * Represents a Twitter match found in an input string which should be Autolinked.\n       * \n       * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n       */\n      Autolinker.match.Twitter = Autolinker.Util.extend(Autolinker.match.Match, {\n\n        /**\n         * @cfg {String} twitterHandle (required)\n         * \n         * The Twitter handle that was matched.\n         */\n\n        /**\n         * Returns the type of match that this class represents.\n         * \n         * @return {String}\n         */\n        getType: function getType() {\n          return 'twitter';\n        },\n\n        /**\n         * Returns a string name for the type of match that this class represents.\n         * \n         * @return {String}\n         */\n        getTwitterHandle: function getTwitterHandle() {\n          return this.twitterHandle;\n        },\n\n        /**\n         * Returns the anchor href that should be generated for the match.\n         * \n         * @return {String}\n         */\n        getAnchorHref: function getAnchorHref() {\n          return 'https://twitter.com/' + this.twitterHandle;\n        },\n\n        /**\n         * Returns the anchor text that should be generated for the match.\n         * \n         * @return {String}\n         */\n        getAnchorText: function getAnchorText() {\n          return '@' + this.twitterHandle;\n        }\n\n      });\n      /*global Autolinker */\n      /**\n       * @class Autolinker.match.Url\n       * @extends Autolinker.match.Match\n       * \n       * Represents a Url match found in an input string which should be Autolinked.\n       * \n       * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n       */\n      Autolinker.match.Url = Autolinker.Util.extend(Autolinker.match.Match, {\n\n        /**\n         * @cfg {String} url (required)\n         * \n         * The url that was matched.\n         */\n\n        /**\n         * @cfg {Boolean} protocolUrlMatch (required)\n         * \n         * `true` if the URL is a match which already has a protocol (i.e. 'http://'), `false` if the match was from a 'www' or\n         * known TLD match.\n         */\n\n        /**\n         * @cfg {Boolean} protocolRelativeMatch (required)\n         * \n         * `true` if the URL is a protocol-relative match. A protocol-relative match is a URL that starts with '//',\n         * and will be either http:// or https:// based on the protocol that the site is loaded under.\n         */\n\n        /**\n         * @cfg {Boolean} stripPrefix (required)\n         * @inheritdoc Autolinker#stripPrefix\n         */\n\n        /**\n         * @private\n         * @property {RegExp} urlPrefixRegex\n         * \n         * A regular expression used to remove the 'http://' or 'https://' and/or the 'www.' from URLs.\n         */\n        urlPrefixRegex: /^(https?:\\/\\/)?(www\\.)?/i,\n\n        /**\n         * @private\n         * @property {RegExp} protocolRelativeRegex\n         * \n         * The regular expression used to remove the protocol-relative '//' from the {@link #url} string, for purposes\n         * of {@link #getAnchorText}. A protocol-relative URL is, for example, \"//yahoo.com\"\n         */\n        protocolRelativeRegex: /^\\/\\//,\n\n        /**\n         * @private\n         * @property {Boolean} protocolPrepended\n         * \n         * Will be set to `true` if the 'http://' protocol has been prepended to the {@link #url} (because the\n         * {@link #url} did not have a protocol)\n         */\n        protocolPrepended: false,\n\n        /**\n         * Returns a string name for the type of match that this class represents.\n         * \n         * @return {String}\n         */\n        getType: function getType() {\n          return 'url';\n        },\n\n        /**\n         * Returns the url that was matched, assuming the protocol to be 'http://' if the original\n         * match was missing a protocol.\n         * \n         * @return {String}\n         */\n        getUrl: function getUrl() {\n          var url = this.url;\n\n          // if the url string doesn't begin with a protocol, assume 'http://'\n          if (!this.protocolRelativeMatch && !this.protocolUrlMatch && !this.protocolPrepended) {\n            url = this.url = 'http://' + url;\n\n            this.protocolPrepended = true;\n          }\n\n          return url;\n        },\n\n        /**\n         * Returns the anchor href that should be generated for the match.\n         * \n         * @return {String}\n         */\n        getAnchorHref: function getAnchorHref() {\n          var url = this.getUrl();\n\n          return url.replace(/&amp;/g, '&'); // any &amp;'s in the URL should be converted back to '&' if they were displayed as &amp; in the source html \n        },\n\n        /**\n         * Returns the anchor text that should be generated for the match.\n         * \n         * @return {String}\n         */\n        getAnchorText: function getAnchorText() {\n          var anchorText = this.getUrl();\n\n          if (this.protocolRelativeMatch) {\n            // Strip off any protocol-relative '//' from the anchor text\n            anchorText = this.stripProtocolRelativePrefix(anchorText);\n          }\n          if (this.stripPrefix) {\n            anchorText = this.stripUrlPrefix(anchorText);\n          }\n          anchorText = this.removeTrailingSlash(anchorText); // remove trailing slash, if there is one\n\n          return anchorText;\n        },\n\n        // ---------------------------------------\n\n        // Utility Functionality\n\n        /**\n         * Strips the URL prefix (such as \"http://\" or \"https://\") from the given text.\n         * \n         * @private\n         * @param {String} text The text of the anchor that is being generated, for which to strip off the\n         *   url prefix (such as stripping off \"http://\")\n         * @return {String} The `anchorText`, with the prefix stripped.\n         */\n        stripUrlPrefix: function stripUrlPrefix(text) {\n          return text.replace(this.urlPrefixRegex, '');\n        },\n\n        /**\n         * Strips any protocol-relative '//' from the anchor text.\n         * \n         * @private\n         * @param {String} text The text of the anchor that is being generated, for which to strip off the\n         *   protocol-relative prefix (such as stripping off \"//\")\n         * @return {String} The `anchorText`, with the protocol-relative prefix stripped.\n         */\n        stripProtocolRelativePrefix: function stripProtocolRelativePrefix(text) {\n          return text.replace(this.protocolRelativeRegex, '');\n        },\n\n        /**\n         * Removes any trailing slash from the given `anchorText`, in preparation for the text to be displayed.\n         * \n         * @private\n         * @param {String} anchorText The text of the anchor that is being generated, for which to remove any trailing\n         *   slash ('/') that may exist.\n         * @return {String} The `anchorText`, with the trailing slash removed.\n         */\n        removeTrailingSlash: function removeTrailingSlash(anchorText) {\n          if (anchorText.charAt(anchorText.length - 1) === '/') {\n            anchorText = anchorText.slice(0, -1);\n          }\n          return anchorText;\n        }\n\n      });\n      return Autolinker;\n    });\n  }, {}], 3: [function (require, module, exports) {\n    'use strict';\n\n    exports.byteLength = byteLength;\n    exports.toByteArray = toByteArray;\n    exports.fromByteArray = fromByteArray;\n\n    var lookup = [];\n    var revLookup = [];\n    var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\n    var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    for (var i = 0, len = code.length; i < len; ++i) {\n      lookup[i] = code[i];\n      revLookup[code.charCodeAt(i)] = i;\n    }\n\n    // Support decoding URL-safe base64 strings, as Node.js does.\n    // See: https://en.wikipedia.org/wiki/Base64#URL_applications\n    revLookup['-'.charCodeAt(0)] = 62;\n    revLookup['_'.charCodeAt(0)] = 63;\n\n    function placeHoldersCount(b64) {\n      var len = b64.length;\n      if (len % 4 > 0) {\n        throw new Error('Invalid string. Length must be a multiple of 4');\n      }\n\n      // the number of equal signs (place holders)\n      // if there are two placeholders, than the two characters before it\n      // represent one byte\n      // if there is only one, then the three characters before it represent 2 bytes\n      // this is just a cheap hack to not do indexOf twice\n      return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n    }\n\n    function byteLength(b64) {\n      // base64 is 4/3 + up to two characters of the original data\n      return b64.length * 3 / 4 - placeHoldersCount(b64);\n    }\n\n    function toByteArray(b64) {\n      var i, l, tmp, placeHolders, arr;\n      var len = b64.length;\n      placeHolders = placeHoldersCount(b64);\n\n      arr = new Arr(len * 3 / 4 - placeHolders);\n\n      // if there are placeholders, only get up to the last complete 4 chars\n      l = placeHolders > 0 ? len - 4 : len;\n\n      var L = 0;\n\n      for (i = 0; i < l; i += 4) {\n        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n        arr[L++] = tmp >> 16 & 0xFF;\n        arr[L++] = tmp >> 8 & 0xFF;\n        arr[L++] = tmp & 0xFF;\n      }\n\n      if (placeHolders === 2) {\n        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n        arr[L++] = tmp & 0xFF;\n      } else if (placeHolders === 1) {\n        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n        arr[L++] = tmp >> 8 & 0xFF;\n        arr[L++] = tmp & 0xFF;\n      }\n\n      return arr;\n    }\n\n    function tripletToBase64(num) {\n      return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n    }\n\n    function encodeChunk(uint8, start, end) {\n      var tmp;\n      var output = [];\n      for (var i = start; i < end; i += 3) {\n        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n        output.push(tripletToBase64(tmp));\n      }\n      return output.join('');\n    }\n\n    function fromByteArray(uint8) {\n      var tmp;\n      var len = uint8.length;\n      var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n      var output = '';\n      var parts = [];\n      var maxChunkLength = 16383; // must be multiple of 3\n\n      // go through the array every three bytes, we'll deal with trailing stuff later\n      for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n        parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n      }\n\n      // pad the end with zeros, but make sure to not forget the extra bytes\n      if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        output += lookup[tmp >> 2];\n        output += lookup[tmp << 4 & 0x3F];\n        output += '==';\n      } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        output += lookup[tmp >> 10];\n        output += lookup[tmp >> 4 & 0x3F];\n        output += lookup[tmp << 2 & 0x3F];\n        output += '=';\n      }\n\n      parts.push(output);\n\n      return parts.join('');\n    }\n  }, {}], 4: [function (require, module, exports) {\n    /*\n     * JavaScript MD5\n     * https://github.com/blueimp/JavaScript-MD5\n     *\n     * Copyright 2011, Sebastian Tschan\n     * https://blueimp.net\n     *\n     * Licensed under the MIT license:\n     * https://opensource.org/licenses/MIT\n     *\n     * Based on\n     * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n     * Digest Algorithm, as defined in RFC 1321.\n     * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n     * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n     * Distributed under the BSD License\n     * See http://pajhome.org.uk/crypt/md5 for more info.\n     */\n\n    /* global define */\n\n    ;(function ($) {\n      'use strict';\n\n      /*\n      * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n      * to work around bugs in some JS interpreters.\n      */\n\n      function safeAdd(x, y) {\n        var lsw = (x & 0xffff) + (y & 0xffff);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return msw << 16 | lsw & 0xffff;\n      }\n\n      /*\n      * Bitwise rotate a 32-bit number to the left.\n      */\n      function bitRotateLeft(num, cnt) {\n        return num << cnt | num >>> 32 - cnt;\n      }\n\n      /*\n      * These functions implement the four basic operations the algorithm uses.\n      */\n      function md5cmn(q, a, b, x, s, t) {\n        return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n      }\n      function md5ff(a, b, c, d, x, s, t) {\n        return md5cmn(b & c | ~b & d, a, b, x, s, t);\n      }\n      function md5gg(a, b, c, d, x, s, t) {\n        return md5cmn(b & d | c & ~d, a, b, x, s, t);\n      }\n      function md5hh(a, b, c, d, x, s, t) {\n        return md5cmn(b ^ c ^ d, a, b, x, s, t);\n      }\n      function md5ii(a, b, c, d, x, s, t) {\n        return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n      }\n\n      /*\n      * Calculate the MD5 of an array of little-endian words, and a bit length.\n      */\n      function binlMD5(x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << len % 32;\n        x[(len + 64 >>> 9 << 4) + 14] = len;\n\n        var i;\n        var olda;\n        var oldb;\n        var oldc;\n        var oldd;\n        var a = 1732584193;\n        var b = -271733879;\n        var c = -1732584194;\n        var d = 271733878;\n\n        for (i = 0; i < x.length; i += 16) {\n          olda = a;\n          oldb = b;\n          oldc = c;\n          oldd = d;\n\n          a = md5ff(a, b, c, d, x[i], 7, -680876936);\n          d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n          c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n          b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n          a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n          d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n          c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n          b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n          a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n          d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n          c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n          b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n          a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n          d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n          c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n          b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n          a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n          d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n          c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n          b = md5gg(b, c, d, a, x[i], 20, -373897302);\n          a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n          d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n          c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n          b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n          a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n          d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n          c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n          b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n          a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n          d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n          c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n          b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n          a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n          d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n          c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n          b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n          a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n          d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n          c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n          b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n          a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n          d = md5hh(d, a, b, c, x[i], 11, -358537222);\n          c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n          b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n          a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n          d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n          c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n          b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n          a = md5ii(a, b, c, d, x[i], 6, -198630844);\n          d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n          c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n          b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n          a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n          d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n          c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n          b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n          a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n          d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n          c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n          b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n          a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n          d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n          c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n          b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n          a = safeAdd(a, olda);\n          b = safeAdd(b, oldb);\n          c = safeAdd(c, oldc);\n          d = safeAdd(d, oldd);\n        }\n        return [a, b, c, d];\n      }\n\n      /*\n      * Convert an array of little-endian words to a string\n      */\n      function binl2rstr(input) {\n        var i;\n        var output = '';\n        var length32 = input.length * 32;\n        for (i = 0; i < length32; i += 8) {\n          output += String.fromCharCode(input[i >> 5] >>> i % 32 & 0xff);\n        }\n        return output;\n      }\n\n      /*\n      * Convert a raw string to an array of little-endian words\n      * Characters >255 have their high-byte silently ignored.\n      */\n      function rstr2binl(input) {\n        var i;\n        var output = [];\n        output[(input.length >> 2) - 1] = undefined;\n        for (i = 0; i < output.length; i += 1) {\n          output[i] = 0;\n        }\n        var length8 = input.length * 8;\n        for (i = 0; i < length8; i += 8) {\n          output[i >> 5] |= (input.charCodeAt(i / 8) & 0xff) << i % 32;\n        }\n        return output;\n      }\n\n      /*\n      * Calculate the MD5 of a raw string\n      */\n      function rstrMD5(s) {\n        return binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\n      }\n\n      /*\n      * Calculate the HMAC-MD5, of a key and some data (raw strings)\n      */\n      function rstrHMACMD5(key, data) {\n        var i;\n        var bkey = rstr2binl(key);\n        var ipad = [];\n        var opad = [];\n        var hash;\n        ipad[15] = opad[15] = undefined;\n        if (bkey.length > 16) {\n          bkey = binlMD5(bkey, key.length * 8);\n        }\n        for (i = 0; i < 16; i += 1) {\n          ipad[i] = bkey[i] ^ 0x36363636;\n          opad[i] = bkey[i] ^ 0x5c5c5c5c;\n        }\n        hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n        return binl2rstr(binlMD5(opad.concat(hash), 512 + 128));\n      }\n\n      /*\n      * Convert a raw string to a hex string\n      */\n      function rstr2hex(input) {\n        var hexTab = '0123456789abcdef';\n        var output = '';\n        var x;\n        var i;\n        for (i = 0; i < input.length; i += 1) {\n          x = input.charCodeAt(i);\n          output += hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f);\n        }\n        return output;\n      }\n\n      /*\n      * Encode a string as utf-8\n      */\n      function str2rstrUTF8(input) {\n        return unescape(encodeURIComponent(input));\n      }\n\n      /*\n      * Take string arguments and return either raw or hex encoded strings\n      */\n      function rawMD5(s) {\n        return rstrMD5(str2rstrUTF8(s));\n      }\n      function hexMD5(s) {\n        return rstr2hex(rawMD5(s));\n      }\n      function rawHMACMD5(k, d) {\n        return rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));\n      }\n      function hexHMACMD5(k, d) {\n        return rstr2hex(rawHMACMD5(k, d));\n      }\n\n      function md5(string, key, raw) {\n        if (!key) {\n          if (!raw) {\n            return hexMD5(string);\n          }\n          return rawMD5(string);\n        }\n        if (!raw) {\n          return hexHMACMD5(key, string);\n        }\n        return rawHMACMD5(key, string);\n      }\n\n      if (typeof define === 'function' && define.amd) {\n        define(function () {\n          return md5;\n        });\n      } else if ((typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === 'object' && module.exports) {\n        module.exports = md5;\n      } else {\n        $.md5 = md5;\n      }\n    })(this);\n  }, {}], 5: [function (require, module, exports) {\n    (function (Buffer) {\n      (function () {\n        \"use strict\";\n\n        function btoa(str) {\n          var buffer;\n\n          if (str instanceof Buffer) {\n            buffer = str;\n          } else {\n            buffer = new Buffer(str.toString(), 'binary');\n          }\n\n          return buffer.toString('base64');\n        }\n\n        module.exports = btoa;\n      })();\n    }).call(this, require(\"buffer\").Buffer);\n  }, { \"buffer\": 6 }], 6: [function (require, module, exports) {\n    /*!\n     * The buffer module from node.js, for the browser.\n     *\n     * @author   Feross Aboukhadijeh <https://feross.org>\n     * @license  MIT\n     */\n    /* eslint-disable no-proto */\n\n    'use strict';\n\n    var base64 = require('base64-js');\n    var ieee754 = require('ieee754');\n\n    exports.Buffer = Buffer;\n    exports.SlowBuffer = SlowBuffer;\n    exports.INSPECT_MAX_BYTES = 50;\n\n    var K_MAX_LENGTH = 0x7fffffff;\n    exports.kMaxLength = K_MAX_LENGTH;\n\n    /**\n     * If `Buffer.TYPED_ARRAY_SUPPORT`:\n     *   === true    Use Uint8Array implementation (fastest)\n     *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n     *               implementation (most compatible, even IE6)\n     *\n     * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n     * Opera 11.6+, iOS 4.2+.\n     *\n     * We report that the browser does not support typed arrays if the are not subclassable\n     * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n     * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n     * for __proto__ and has a buggy typed array implementation.\n     */\n    Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\n\n    if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {\n      console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');\n    }\n\n    function typedArraySupport() {\n      // Can typed array instances can be augmented?\n      try {\n        var arr = new Uint8Array(1);\n        arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function foo() {\n            return 42;\n          } };\n        return arr.foo() === 42;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    Object.defineProperty(Buffer.prototype, 'parent', {\n      get: function get() {\n        if (!(this instanceof Buffer)) {\n          return undefined;\n        }\n        return this.buffer;\n      }\n    });\n\n    Object.defineProperty(Buffer.prototype, 'offset', {\n      get: function get() {\n        if (!(this instanceof Buffer)) {\n          return undefined;\n        }\n        return this.byteOffset;\n      }\n    });\n\n    function createBuffer(length) {\n      if (length > K_MAX_LENGTH) {\n        throw new RangeError('Invalid typed array length');\n      }\n      // Return an augmented `Uint8Array` instance\n      var buf = new Uint8Array(length);\n      buf.__proto__ = Buffer.prototype;\n      return buf;\n    }\n\n    /**\n     * The Buffer constructor returns instances of `Uint8Array` that have their\n     * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n     * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n     * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n     * returns a single octet.\n     *\n     * The `Uint8Array` prototype remains unmodified.\n     */\n\n    function Buffer(arg, encodingOrOffset, length) {\n      // Common case.\n      if (typeof arg === 'number') {\n        if (typeof encodingOrOffset === 'string') {\n          throw new Error('If encoding is specified then the first argument must be a string');\n        }\n        return allocUnsafe(arg);\n      }\n      return from(arg, encodingOrOffset, length);\n    }\n\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n      Object.defineProperty(Buffer, Symbol.species, {\n        value: null,\n        configurable: true,\n        enumerable: false,\n        writable: false\n      });\n    }\n\n    Buffer.poolSize = 8192; // not used by this implementation\n\n    function from(value, encodingOrOffset, length) {\n      if (typeof value === 'number') {\n        throw new TypeError('\"value\" argument must not be a number');\n      }\n\n      if (isArrayBuffer(value) || value && isArrayBuffer(value.buffer)) {\n        return fromArrayBuffer(value, encodingOrOffset, length);\n      }\n\n      if (typeof value === 'string') {\n        return fromString(value, encodingOrOffset);\n      }\n\n      return fromObject(value);\n    }\n\n    /**\n     * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n     * if value is a number.\n     * Buffer.from(str[, encoding])\n     * Buffer.from(array)\n     * Buffer.from(buffer)\n     * Buffer.from(arrayBuffer[, byteOffset[, length]])\n     **/\n    Buffer.from = function (value, encodingOrOffset, length) {\n      return from(value, encodingOrOffset, length);\n    };\n\n    // Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n    // https://github.com/feross/buffer/pull/148\n    Buffer.prototype.__proto__ = Uint8Array.prototype;\n    Buffer.__proto__ = Uint8Array;\n\n    function assertSize(size) {\n      if (typeof size !== 'number') {\n        throw new TypeError('\"size\" argument must be of type number');\n      } else if (size < 0) {\n        throw new RangeError('\"size\" argument must not be negative');\n      }\n    }\n\n    function alloc(size, fill, encoding) {\n      assertSize(size);\n      if (size <= 0) {\n        return createBuffer(size);\n      }\n      if (fill !== undefined) {\n        // Only pay attention to encoding if it's a string. This\n        // prevents accidentally sending in a number that would\n        // be interpretted as a start offset.\n        return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);\n      }\n      return createBuffer(size);\n    }\n\n    /**\n     * Creates a new filled Buffer instance.\n     * alloc(size[, fill[, encoding]])\n     **/\n    Buffer.alloc = function (size, fill, encoding) {\n      return alloc(size, fill, encoding);\n    };\n\n    function allocUnsafe(size) {\n      assertSize(size);\n      return createBuffer(size < 0 ? 0 : checked(size) | 0);\n    }\n\n    /**\n     * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n     * */\n    Buffer.allocUnsafe = function (size) {\n      return allocUnsafe(size);\n    };\n    /**\n     * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n     */\n    Buffer.allocUnsafeSlow = function (size) {\n      return allocUnsafe(size);\n    };\n\n    function fromString(string, encoding) {\n      if (typeof encoding !== 'string' || encoding === '') {\n        encoding = 'utf8';\n      }\n\n      if (!Buffer.isEncoding(encoding)) {\n        throw new TypeError('Unknown encoding: ' + encoding);\n      }\n\n      var length = byteLength(string, encoding) | 0;\n      var buf = createBuffer(length);\n\n      var actual = buf.write(string, encoding);\n\n      if (actual !== length) {\n        // Writing a hex string, for example, that contains invalid characters will\n        // cause everything after the first invalid character to be ignored. (e.g.\n        // 'abxxcd' will be treated as 'ab')\n        buf = buf.slice(0, actual);\n      }\n\n      return buf;\n    }\n\n    function fromArrayLike(array) {\n      var length = array.length < 0 ? 0 : checked(array.length) | 0;\n      var buf = createBuffer(length);\n      for (var i = 0; i < length; i += 1) {\n        buf[i] = array[i] & 255;\n      }\n      return buf;\n    }\n\n    function fromArrayBuffer(array, byteOffset, length) {\n      if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError('\"offset\" is outside of buffer bounds');\n      }\n\n      if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError('\"length\" is outside of buffer bounds');\n      }\n\n      var buf;\n      if (byteOffset === undefined && length === undefined) {\n        buf = new Uint8Array(array);\n      } else if (length === undefined) {\n        buf = new Uint8Array(array, byteOffset);\n      } else {\n        buf = new Uint8Array(array, byteOffset, length);\n      }\n\n      // Return an augmented `Uint8Array` instance\n      buf.__proto__ = Buffer.prototype;\n      return buf;\n    }\n\n    function fromObject(obj) {\n      if (Buffer.isBuffer(obj)) {\n        var len = checked(obj.length) | 0;\n        var buf = createBuffer(len);\n\n        if (buf.length === 0) {\n          return buf;\n        }\n\n        obj.copy(buf, 0, 0, len);\n        return buf;\n      }\n\n      if (obj) {\n        if (ArrayBuffer.isView(obj) || 'length' in obj) {\n          if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n            return createBuffer(0);\n          }\n          return fromArrayLike(obj);\n        }\n\n        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n          return fromArrayLike(obj.data);\n        }\n      }\n\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.');\n    }\n\n    function checked(length) {\n      // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n      // length is NaN (which is otherwise coerced to zero.)\n      if (length >= K_MAX_LENGTH) {\n        throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n      }\n      return length | 0;\n    }\n\n    function SlowBuffer(length) {\n      if (+length != length) {\n        // eslint-disable-line eqeqeq\n        length = 0;\n      }\n      return Buffer.alloc(+length);\n    }\n\n    Buffer.isBuffer = function isBuffer(b) {\n      return b != null && b._isBuffer === true;\n    };\n\n    Buffer.compare = function compare(a, b) {\n      if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n        throw new TypeError('Arguments must be Buffers');\n      }\n\n      if (a === b) return 0;\n\n      var x = a.length;\n      var y = b.length;\n\n      for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n        if (a[i] !== b[i]) {\n          x = a[i];\n          y = b[i];\n          break;\n        }\n      }\n\n      if (x < y) return -1;\n      if (y < x) return 1;\n      return 0;\n    };\n\n    Buffer.isEncoding = function isEncoding(encoding) {\n      switch (String(encoding).toLowerCase()) {\n        case 'hex':\n        case 'utf8':\n        case 'utf-8':\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n        case 'base64':\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n          return true;\n        default:\n          return false;\n      }\n    };\n\n    Buffer.concat = function concat(list, length) {\n      if (!Array.isArray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n      }\n\n      if (list.length === 0) {\n        return Buffer.alloc(0);\n      }\n\n      var i;\n      if (length === undefined) {\n        length = 0;\n        for (i = 0; i < list.length; ++i) {\n          length += list[i].length;\n        }\n      }\n\n      var buffer = Buffer.allocUnsafe(length);\n      var pos = 0;\n      for (i = 0; i < list.length; ++i) {\n        var buf = list[i];\n        if (ArrayBuffer.isView(buf)) {\n          buf = Buffer.from(buf);\n        }\n        if (!Buffer.isBuffer(buf)) {\n          throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n        buf.copy(buffer, pos);\n        pos += buf.length;\n      }\n      return buffer;\n    };\n\n    function byteLength(string, encoding) {\n      if (Buffer.isBuffer(string)) {\n        return string.length;\n      }\n      if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {\n        return string.byteLength;\n      }\n      if (typeof string !== 'string') {\n        string = '' + string;\n      }\n\n      var len = string.length;\n      if (len === 0) return 0;\n\n      // Use a for loop to avoid recursion\n      var loweredCase = false;\n      for (;;) {\n        switch (encoding) {\n          case 'ascii':\n          case 'latin1':\n          case 'binary':\n            return len;\n          case 'utf8':\n          case 'utf-8':\n          case undefined:\n            return utf8ToBytes(string).length;\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return len * 2;\n          case 'hex':\n            return len >>> 1;\n          case 'base64':\n            return base64ToBytes(string).length;\n          default:\n            if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n    Buffer.byteLength = byteLength;\n\n    function slowToString(encoding, start, end) {\n      var loweredCase = false;\n\n      // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n      // property of a typed array.\n\n      // This behaves neither like String nor Uint8Array in that we set start/end\n      // to their upper/lower bounds if the value passed is out of range.\n      // undefined is handled specially as per ECMA-262 6th Edition,\n      // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n      if (start === undefined || start < 0) {\n        start = 0;\n      }\n      // Return early if start > this.length. Done here to prevent potential uint32\n      // coercion fail below.\n      if (start > this.length) {\n        return '';\n      }\n\n      if (end === undefined || end > this.length) {\n        end = this.length;\n      }\n\n      if (end <= 0) {\n        return '';\n      }\n\n      // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n      end >>>= 0;\n      start >>>= 0;\n\n      if (end <= start) {\n        return '';\n      }\n\n      if (!encoding) encoding = 'utf8';\n\n      while (true) {\n        switch (encoding) {\n          case 'hex':\n            return hexSlice(this, start, end);\n\n          case 'utf8':\n          case 'utf-8':\n            return utf8Slice(this, start, end);\n\n          case 'ascii':\n            return asciiSlice(this, start, end);\n\n          case 'latin1':\n          case 'binary':\n            return latin1Slice(this, start, end);\n\n          case 'base64':\n            return base64Slice(this, start, end);\n\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return utf16leSlice(this, start, end);\n\n          default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = (encoding + '').toLowerCase();\n            loweredCase = true;\n        }\n      }\n    }\n\n    // This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n    // to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n    // reliably in a browserify context because there could be multiple different\n    // copies of the 'buffer' package in use. This method works even for Buffer\n    // instances that were created from another copy of the `buffer` package.\n    // See: https://github.com/feross/buffer/issues/154\n    Buffer.prototype._isBuffer = true;\n\n    function swap(b, n, m) {\n      var i = b[n];\n      b[n] = b[m];\n      b[m] = i;\n    }\n\n    Buffer.prototype.swap16 = function swap16() {\n      var len = this.length;\n      if (len % 2 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 16-bits');\n      }\n      for (var i = 0; i < len; i += 2) {\n        swap(this, i, i + 1);\n      }\n      return this;\n    };\n\n    Buffer.prototype.swap32 = function swap32() {\n      var len = this.length;\n      if (len % 4 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 32-bits');\n      }\n      for (var i = 0; i < len; i += 4) {\n        swap(this, i, i + 3);\n        swap(this, i + 1, i + 2);\n      }\n      return this;\n    };\n\n    Buffer.prototype.swap64 = function swap64() {\n      var len = this.length;\n      if (len % 8 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 64-bits');\n      }\n      for (var i = 0; i < len; i += 8) {\n        swap(this, i, i + 7);\n        swap(this, i + 1, i + 6);\n        swap(this, i + 2, i + 5);\n        swap(this, i + 3, i + 4);\n      }\n      return this;\n    };\n\n    Buffer.prototype.toString = function toString() {\n      var length = this.length;\n      if (length === 0) return '';\n      if (arguments.length === 0) return utf8Slice(this, 0, length);\n      return slowToString.apply(this, arguments);\n    };\n\n    Buffer.prototype.toLocaleString = Buffer.prototype.toString;\n\n    Buffer.prototype.equals = function equals(b) {\n      if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n      if (this === b) return true;\n      return Buffer.compare(this, b) === 0;\n    };\n\n    Buffer.prototype.inspect = function inspect() {\n      var str = '';\n      var max = exports.INSPECT_MAX_BYTES;\n      if (this.length > 0) {\n        str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n        if (this.length > max) str += ' ... ';\n      }\n      return '<Buffer ' + str + '>';\n    };\n\n    Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n      if (!Buffer.isBuffer(target)) {\n        throw new TypeError('Argument must be a Buffer');\n      }\n\n      if (start === undefined) {\n        start = 0;\n      }\n      if (end === undefined) {\n        end = target ? target.length : 0;\n      }\n      if (thisStart === undefined) {\n        thisStart = 0;\n      }\n      if (thisEnd === undefined) {\n        thisEnd = this.length;\n      }\n\n      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n        throw new RangeError('out of range index');\n      }\n\n      if (thisStart >= thisEnd && start >= end) {\n        return 0;\n      }\n      if (thisStart >= thisEnd) {\n        return -1;\n      }\n      if (start >= end) {\n        return 1;\n      }\n\n      start >>>= 0;\n      end >>>= 0;\n      thisStart >>>= 0;\n      thisEnd >>>= 0;\n\n      if (this === target) return 0;\n\n      var x = thisEnd - thisStart;\n      var y = end - start;\n      var len = Math.min(x, y);\n\n      var thisCopy = this.slice(thisStart, thisEnd);\n      var targetCopy = target.slice(start, end);\n\n      for (var i = 0; i < len; ++i) {\n        if (thisCopy[i] !== targetCopy[i]) {\n          x = thisCopy[i];\n          y = targetCopy[i];\n          break;\n        }\n      }\n\n      if (x < y) return -1;\n      if (y < x) return 1;\n      return 0;\n    };\n\n    // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n    // OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n    //\n    // Arguments:\n    // - buffer - a Buffer to search\n    // - val - a string, Buffer, or number\n    // - byteOffset - an index into `buffer`; will be clamped to an int32\n    // - encoding - an optional encoding, relevant is val is a string\n    // - dir - true for indexOf, false for lastIndexOf\n    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n      // Empty buffer means no match\n      if (buffer.length === 0) return -1;\n\n      // Normalize byteOffset\n      if (typeof byteOffset === 'string') {\n        encoding = byteOffset;\n        byteOffset = 0;\n      } else if (byteOffset > 0x7fffffff) {\n        byteOffset = 0x7fffffff;\n      } else if (byteOffset < -0x80000000) {\n        byteOffset = -0x80000000;\n      }\n      byteOffset = +byteOffset; // Coerce to Number.\n      if (numberIsNaN(byteOffset)) {\n        // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n        byteOffset = dir ? 0 : buffer.length - 1;\n      }\n\n      // Normalize byteOffset: negative offsets start from the end of the buffer\n      if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n      if (byteOffset >= buffer.length) {\n        if (dir) return -1;else byteOffset = buffer.length - 1;\n      } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0;else return -1;\n      }\n\n      // Normalize val\n      if (typeof val === 'string') {\n        val = Buffer.from(val, encoding);\n      }\n\n      // Finally, search either indexOf (if dir is true) or lastIndexOf\n      if (Buffer.isBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) {\n          return -1;\n        }\n        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n      } else if (typeof val === 'number') {\n        val = val & 0xFF; // Search for a byte value [0-255]\n        if (typeof Uint8Array.prototype.indexOf === 'function') {\n          if (dir) {\n            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n          } else {\n            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n          }\n        }\n        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n      }\n\n      throw new TypeError('val must be string, number or Buffer');\n    }\n\n    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n      var indexSize = 1;\n      var arrLength = arr.length;\n      var valLength = val.length;\n\n      if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase();\n        if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n          if (arr.length < 2 || val.length < 2) {\n            return -1;\n          }\n          indexSize = 2;\n          arrLength /= 2;\n          valLength /= 2;\n          byteOffset /= 2;\n        }\n      }\n\n      function read(buf, i) {\n        if (indexSize === 1) {\n          return buf[i];\n        } else {\n          return buf.readUInt16BE(i * indexSize);\n        }\n      }\n\n      var i;\n      if (dir) {\n        var foundIndex = -1;\n        for (i = byteOffset; i < arrLength; i++) {\n          if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n            if (foundIndex === -1) foundIndex = i;\n            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n          } else {\n            if (foundIndex !== -1) i -= i - foundIndex;\n            foundIndex = -1;\n          }\n        }\n      } else {\n        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n        for (i = byteOffset; i >= 0; i--) {\n          var found = true;\n          for (var j = 0; j < valLength; j++) {\n            if (read(arr, i + j) !== read(val, j)) {\n              found = false;\n              break;\n            }\n          }\n          if (found) return i;\n        }\n      }\n\n      return -1;\n    }\n\n    Buffer.prototype.includes = function includes(val, byteOffset, encoding) {\n      return this.indexOf(val, byteOffset, encoding) !== -1;\n    };\n\n    Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n    };\n\n    Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n      return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n    };\n\n    function hexWrite(buf, string, offset, length) {\n      offset = Number(offset) || 0;\n      var remaining = buf.length - offset;\n      if (!length) {\n        length = remaining;\n      } else {\n        length = Number(length);\n        if (length > remaining) {\n          length = remaining;\n        }\n      }\n\n      var strLen = string.length;\n\n      if (length > strLen / 2) {\n        length = strLen / 2;\n      }\n      for (var i = 0; i < length; ++i) {\n        var parsed = parseInt(string.substr(i * 2, 2), 16);\n        if (numberIsNaN(parsed)) return i;\n        buf[offset + i] = parsed;\n      }\n      return i;\n    }\n\n    function utf8Write(buf, string, offset, length) {\n      return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n    }\n\n    function asciiWrite(buf, string, offset, length) {\n      return blitBuffer(asciiToBytes(string), buf, offset, length);\n    }\n\n    function latin1Write(buf, string, offset, length) {\n      return asciiWrite(buf, string, offset, length);\n    }\n\n    function base64Write(buf, string, offset, length) {\n      return blitBuffer(base64ToBytes(string), buf, offset, length);\n    }\n\n    function ucs2Write(buf, string, offset, length) {\n      return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n    }\n\n    Buffer.prototype.write = function write(string, offset, length, encoding) {\n      // Buffer#write(string)\n      if (offset === undefined) {\n        encoding = 'utf8';\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, encoding)\n      } else if (length === undefined && typeof offset === 'string') {\n        encoding = offset;\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, offset[, length][, encoding])\n      } else if (isFinite(offset)) {\n        offset = offset >>> 0;\n        if (isFinite(length)) {\n          length = length >>> 0;\n          if (encoding === undefined) encoding = 'utf8';\n        } else {\n          encoding = length;\n          length = undefined;\n        }\n      } else {\n        throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n      }\n\n      var remaining = this.length - offset;\n      if (length === undefined || length > remaining) length = remaining;\n\n      if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n        throw new RangeError('Attempt to write outside buffer bounds');\n      }\n\n      if (!encoding) encoding = 'utf8';\n\n      var loweredCase = false;\n      for (;;) {\n        switch (encoding) {\n          case 'hex':\n            return hexWrite(this, string, offset, length);\n\n          case 'utf8':\n          case 'utf-8':\n            return utf8Write(this, string, offset, length);\n\n          case 'ascii':\n            return asciiWrite(this, string, offset, length);\n\n          case 'latin1':\n          case 'binary':\n            return latin1Write(this, string, offset, length);\n\n          case 'base64':\n            // Warning: maxLength not taken into account in base64Write\n            return base64Write(this, string, offset, length);\n\n          case 'ucs2':\n          case 'ucs-2':\n          case 'utf16le':\n          case 'utf-16le':\n            return ucs2Write(this, string, offset, length);\n\n          default:\n            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n            encoding = ('' + encoding).toLowerCase();\n            loweredCase = true;\n        }\n      }\n    };\n\n    Buffer.prototype.toJSON = function toJSON() {\n      return {\n        type: 'Buffer',\n        data: Array.prototype.slice.call(this._arr || this, 0)\n      };\n    };\n\n    function base64Slice(buf, start, end) {\n      if (start === 0 && end === buf.length) {\n        return base64.fromByteArray(buf);\n      } else {\n        return base64.fromByteArray(buf.slice(start, end));\n      }\n    }\n\n    function utf8Slice(buf, start, end) {\n      end = Math.min(buf.length, end);\n      var res = [];\n\n      var i = start;\n      while (i < end) {\n        var firstByte = buf[i];\n        var codePoint = null;\n        var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence <= end) {\n          var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n          switch (bytesPerSequence) {\n            case 1:\n              if (firstByte < 0x80) {\n                codePoint = firstByte;\n              }\n              break;\n            case 2:\n              secondByte = buf[i + 1];\n              if ((secondByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n                if (tempCodePoint > 0x7F) {\n                  codePoint = tempCodePoint;\n                }\n              }\n              break;\n            case 3:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n                if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n                  codePoint = tempCodePoint;\n                }\n              }\n              break;\n            case 4:\n              secondByte = buf[i + 1];\n              thirdByte = buf[i + 2];\n              fourthByte = buf[i + 3];\n              if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n                tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n                if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n                  codePoint = tempCodePoint;\n                }\n              }\n          }\n        }\n\n        if (codePoint === null) {\n          // we did not generate a valid codePoint so insert a\n          // replacement char (U+FFFD) and advance only 1 byte\n          codePoint = 0xFFFD;\n          bytesPerSequence = 1;\n        } else if (codePoint > 0xFFFF) {\n          // encode to utf16 (surrogate pair dance)\n          codePoint -= 0x10000;\n          res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n          codePoint = 0xDC00 | codePoint & 0x3FF;\n        }\n\n        res.push(codePoint);\n        i += bytesPerSequence;\n      }\n\n      return decodeCodePointsArray(res);\n    }\n\n    // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n    // the lowest limit is Chrome, with 0x10000 args.\n    // We go 1 magnitude less, for safety\n    var MAX_ARGUMENTS_LENGTH = 0x1000;\n\n    function decodeCodePointsArray(codePoints) {\n      var len = codePoints.length;\n      if (len <= MAX_ARGUMENTS_LENGTH) {\n        return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n      }\n\n      // Decode in chunks to avoid \"call stack size exceeded\".\n      var res = '';\n      var i = 0;\n      while (i < len) {\n        res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n      }\n      return res;\n    }\n\n    function asciiSlice(buf, start, end) {\n      var ret = '';\n      end = Math.min(buf.length, end);\n\n      for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i] & 0x7F);\n      }\n      return ret;\n    }\n\n    function latin1Slice(buf, start, end) {\n      var ret = '';\n      end = Math.min(buf.length, end);\n\n      for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i]);\n      }\n      return ret;\n    }\n\n    function hexSlice(buf, start, end) {\n      var len = buf.length;\n\n      if (!start || start < 0) start = 0;\n      if (!end || end < 0 || end > len) end = len;\n\n      var out = '';\n      for (var i = start; i < end; ++i) {\n        out += toHex(buf[i]);\n      }\n      return out;\n    }\n\n    function utf16leSlice(buf, start, end) {\n      var bytes = buf.slice(start, end);\n      var res = '';\n      for (var i = 0; i < bytes.length; i += 2) {\n        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n      }\n      return res;\n    }\n\n    Buffer.prototype.slice = function slice(start, end) {\n      var len = this.length;\n      start = ~~start;\n      end = end === undefined ? len : ~~end;\n\n      if (start < 0) {\n        start += len;\n        if (start < 0) start = 0;\n      } else if (start > len) {\n        start = len;\n      }\n\n      if (end < 0) {\n        end += len;\n        if (end < 0) end = 0;\n      } else if (end > len) {\n        end = len;\n      }\n\n      if (end < start) end = start;\n\n      var newBuf = this.subarray(start, end);\n      // Return an augmented `Uint8Array` instance\n      newBuf.__proto__ = Buffer.prototype;\n      return newBuf;\n    };\n\n    /*\n     * Need to make sure that buffer isn't trying to write out of bounds.\n     */\n    function checkOffset(offset, ext, length) {\n      if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n      if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n    }\n\n    Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n      offset = offset >>> 0;\n      byteLength = byteLength >>> 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n      var val = this[offset];\n      var mul = 1;\n      var i = 0;\n      while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul;\n      }\n\n      return val;\n    };\n\n    Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n      offset = offset >>> 0;\n      byteLength = byteLength >>> 0;\n      if (!noAssert) {\n        checkOffset(offset, byteLength, this.length);\n      }\n\n      var val = this[offset + --byteLength];\n      var mul = 1;\n      while (byteLength > 0 && (mul *= 0x100)) {\n        val += this[offset + --byteLength] * mul;\n      }\n\n      return val;\n    };\n\n    Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 1, this.length);\n      return this[offset];\n    };\n\n    Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      return this[offset] | this[offset + 1] << 8;\n    };\n\n    Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      return this[offset] << 8 | this[offset + 1];\n    };\n\n    Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n\n      return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n    };\n\n    Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n\n      return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n    };\n\n    Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n      offset = offset >>> 0;\n      byteLength = byteLength >>> 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n      var val = this[offset];\n      var mul = 1;\n      var i = 0;\n      while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul;\n      }\n      mul *= 0x80;\n\n      if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n      return val;\n    };\n\n    Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n      offset = offset >>> 0;\n      byteLength = byteLength >>> 0;\n      if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n      var i = byteLength;\n      var mul = 1;\n      var val = this[offset + --i];\n      while (i > 0 && (mul *= 0x100)) {\n        val += this[offset + --i] * mul;\n      }\n      mul *= 0x80;\n\n      if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n      return val;\n    };\n\n    Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 1, this.length);\n      if (!(this[offset] & 0x80)) return this[offset];\n      return (0xff - this[offset] + 1) * -1;\n    };\n\n    Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      var val = this[offset] | this[offset + 1] << 8;\n      return val & 0x8000 ? val | 0xFFFF0000 : val;\n    };\n\n    Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 2, this.length);\n      var val = this[offset + 1] | this[offset] << 8;\n      return val & 0x8000 ? val | 0xFFFF0000 : val;\n    };\n\n    Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n\n      return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n    };\n\n    Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n\n      return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n    };\n\n    Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, true, 23, 4);\n    };\n\n    Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 4, this.length);\n      return ieee754.read(this, offset, false, 23, 4);\n    };\n\n    Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, true, 52, 8);\n    };\n\n    Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n      offset = offset >>> 0;\n      if (!noAssert) checkOffset(offset, 8, this.length);\n      return ieee754.read(this, offset, false, 52, 8);\n    };\n\n    function checkInt(buf, value, offset, ext, max, min) {\n      if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n      if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n      if (offset + ext > buf.length) throw new RangeError('Index out of range');\n    }\n\n    Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      byteLength = byteLength >>> 0;\n      if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        checkInt(this, value, offset, byteLength, maxBytes, 0);\n      }\n\n      var mul = 1;\n      var i = 0;\n      this[offset] = value & 0xFF;\n      while (++i < byteLength && (mul *= 0x100)) {\n        this[offset + i] = value / mul & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      byteLength = byteLength >>> 0;\n      if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n        checkInt(this, value, offset, byteLength, maxBytes, 0);\n      }\n\n      var i = byteLength - 1;\n      var mul = 1;\n      this[offset + i] = value & 0xFF;\n      while (--i >= 0 && (mul *= 0x100)) {\n        this[offset + i] = value / mul & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n      this[offset] = value & 0xff;\n      return offset + 1;\n    };\n\n    Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n      this[offset] = value & 0xff;\n      this[offset + 1] = value >>> 8;\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n      this[offset] = value >>> 8;\n      this[offset + 1] = value & 0xff;\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n      this[offset + 3] = value >>> 24;\n      this[offset + 2] = value >>> 16;\n      this[offset + 1] = value >>> 8;\n      this[offset] = value & 0xff;\n      return offset + 4;\n    };\n\n    Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n      this[offset] = value >>> 24;\n      this[offset + 1] = value >>> 16;\n      this[offset + 2] = value >>> 8;\n      this[offset + 3] = value & 0xff;\n      return offset + 4;\n    };\n\n    Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n\n        checkInt(this, value, offset, byteLength, limit - 1, -limit);\n      }\n\n      var i = 0;\n      var mul = 1;\n      var sub = 0;\n      this[offset] = value & 0xFF;\n      while (++i < byteLength && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n          sub = 1;\n        }\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1);\n\n        checkInt(this, value, offset, byteLength, limit - 1, -limit);\n      }\n\n      var i = byteLength - 1;\n      var mul = 1;\n      var sub = 0;\n      this[offset + i] = value & 0xFF;\n      while (--i >= 0 && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n          sub = 1;\n        }\n        this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n      }\n\n      return offset + byteLength;\n    };\n\n    Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n      if (value < 0) value = 0xff + value + 1;\n      this[offset] = value & 0xff;\n      return offset + 1;\n    };\n\n    Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n      this[offset] = value & 0xff;\n      this[offset + 1] = value >>> 8;\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n      this[offset] = value >>> 8;\n      this[offset + 1] = value & 0xff;\n      return offset + 2;\n    };\n\n    Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n      this[offset] = value & 0xff;\n      this[offset + 1] = value >>> 8;\n      this[offset + 2] = value >>> 16;\n      this[offset + 3] = value >>> 24;\n      return offset + 4;\n    };\n\n    Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n      if (value < 0) value = 0xffffffff + value + 1;\n      this[offset] = value >>> 24;\n      this[offset + 1] = value >>> 16;\n      this[offset + 2] = value >>> 8;\n      this[offset + 3] = value & 0xff;\n      return offset + 4;\n    };\n\n    function checkIEEE754(buf, value, offset, ext, max, min) {\n      if (offset + ext > buf.length) throw new RangeError('Index out of range');\n      if (offset < 0) throw new RangeError('Index out of range');\n    }\n\n    function writeFloat(buf, value, offset, littleEndian, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n      }\n      ieee754.write(buf, value, offset, littleEndian, 23, 4);\n      return offset + 4;\n    }\n\n    Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, true, noAssert);\n    };\n\n    Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n      return writeFloat(this, value, offset, false, noAssert);\n    };\n\n    function writeDouble(buf, value, offset, littleEndian, noAssert) {\n      value = +value;\n      offset = offset >>> 0;\n      if (!noAssert) {\n        checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n      }\n      ieee754.write(buf, value, offset, littleEndian, 52, 8);\n      return offset + 8;\n    }\n\n    Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, true, noAssert);\n    };\n\n    Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n      return writeDouble(this, value, offset, false, noAssert);\n    };\n\n    // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n    Buffer.prototype.copy = function copy(target, targetStart, start, end) {\n      if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');\n      if (!start) start = 0;\n      if (!end && end !== 0) end = this.length;\n      if (targetStart >= target.length) targetStart = target.length;\n      if (!targetStart) targetStart = 0;\n      if (end > 0 && end < start) end = start;\n\n      // Copy 0 bytes; we're done\n      if (end === start) return 0;\n      if (target.length === 0 || this.length === 0) return 0;\n\n      // Fatal error conditions\n      if (targetStart < 0) {\n        throw new RangeError('targetStart out of bounds');\n      }\n      if (start < 0 || start >= this.length) throw new RangeError('Index out of range');\n      if (end < 0) throw new RangeError('sourceEnd out of bounds');\n\n      // Are we oob?\n      if (end > this.length) end = this.length;\n      if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start;\n      }\n\n      var len = end - start;\n\n      if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n        // Use built-in when available, missing from IE11\n        this.copyWithin(targetStart, start, end);\n      } else if (this === target && start < targetStart && targetStart < end) {\n        // descending copy from end\n        for (var i = len - 1; i >= 0; --i) {\n          target[i + targetStart] = this[i + start];\n        }\n      } else {\n        Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);\n      }\n\n      return len;\n    };\n\n    // Usage:\n    //    buffer.fill(number[, offset[, end]])\n    //    buffer.fill(buffer[, offset[, end]])\n    //    buffer.fill(string[, offset[, end]][, encoding])\n    Buffer.prototype.fill = function fill(val, start, end, encoding) {\n      // Handle string cases:\n      if (typeof val === 'string') {\n        if (typeof start === 'string') {\n          encoding = start;\n          start = 0;\n          end = this.length;\n        } else if (typeof end === 'string') {\n          encoding = end;\n          end = this.length;\n        }\n        if (encoding !== undefined && typeof encoding !== 'string') {\n          throw new TypeError('encoding must be a string');\n        }\n        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n          throw new TypeError('Unknown encoding: ' + encoding);\n        }\n        if (val.length === 1) {\n          var code = val.charCodeAt(0);\n          if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {\n            // Fast path: If `val` fits into a single byte, use that numeric value.\n            val = code;\n          }\n        }\n      } else if (typeof val === 'number') {\n        val = val & 255;\n      }\n\n      // Invalid ranges are not set to a default, so can range check early.\n      if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError('Out of range index');\n      }\n\n      if (end <= start) {\n        return this;\n      }\n\n      start = start >>> 0;\n      end = end === undefined ? this.length : end >>> 0;\n\n      if (!val) val = 0;\n\n      var i;\n      if (typeof val === 'number') {\n        for (i = start; i < end; ++i) {\n          this[i] = val;\n        }\n      } else {\n        var bytes = Buffer.isBuffer(val) ? val : new Buffer(val, encoding);\n        var len = bytes.length;\n        if (len === 0) {\n          throw new TypeError('The value \"' + val + '\" is invalid for argument \"value\"');\n        }\n        for (i = 0; i < end - start; ++i) {\n          this[i + start] = bytes[i % len];\n        }\n      }\n\n      return this;\n    };\n\n    // HELPER FUNCTIONS\n    // ================\n\n    var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;\n\n    function base64clean(str) {\n      // Node takes equal signs as end of the Base64 encoding\n      str = str.split('=')[0];\n      // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n      str = str.trim().replace(INVALID_BASE64_RE, '');\n      // Node converts strings with length < 2 to ''\n      if (str.length < 2) return '';\n      // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n      while (str.length % 4 !== 0) {\n        str = str + '=';\n      }\n      return str;\n    }\n\n    function toHex(n) {\n      if (n < 16) return '0' + n.toString(16);\n      return n.toString(16);\n    }\n\n    function utf8ToBytes(string, units) {\n      units = units || Infinity;\n      var codePoint;\n      var length = string.length;\n      var leadSurrogate = null;\n      var bytes = [];\n\n      for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i);\n\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n          // last char was a lead\n          if (!leadSurrogate) {\n            // no lead yet\n            if (codePoint > 0xDBFF) {\n              // unexpected trail\n              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n              continue;\n            } else if (i + 1 === length) {\n              // unpaired lead\n              if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n              continue;\n            }\n\n            // valid lead\n            leadSurrogate = codePoint;\n\n            continue;\n          }\n\n          // 2 leads in a row\n          if (codePoint < 0xDC00) {\n            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n            leadSurrogate = codePoint;\n            continue;\n          }\n\n          // valid surrogate pair\n          codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        } else if (leadSurrogate) {\n          // valid bmp char, but last char was a lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        }\n\n        leadSurrogate = null;\n\n        // encode utf8\n        if (codePoint < 0x80) {\n          if ((units -= 1) < 0) break;\n          bytes.push(codePoint);\n        } else if (codePoint < 0x800) {\n          if ((units -= 2) < 0) break;\n          bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x10000) {\n          if ((units -= 3) < 0) break;\n          bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else if (codePoint < 0x110000) {\n          if ((units -= 4) < 0) break;\n          bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        } else {\n          throw new Error('Invalid code point');\n        }\n      }\n\n      return bytes;\n    }\n\n    function asciiToBytes(str) {\n      var byteArray = [];\n      for (var i = 0; i < str.length; ++i) {\n        // Node's code seems to be doing this and not & 0x7F..\n        byteArray.push(str.charCodeAt(i) & 0xFF);\n      }\n      return byteArray;\n    }\n\n    function utf16leToBytes(str, units) {\n      var c, hi, lo;\n      var byteArray = [];\n      for (var i = 0; i < str.length; ++i) {\n        if ((units -= 2) < 0) break;\n\n        c = str.charCodeAt(i);\n        hi = c >> 8;\n        lo = c % 256;\n        byteArray.push(lo);\n        byteArray.push(hi);\n      }\n\n      return byteArray;\n    }\n\n    function base64ToBytes(str) {\n      return base64.toByteArray(base64clean(str));\n    }\n\n    function blitBuffer(src, dst, offset, length) {\n      for (var i = 0; i < length; ++i) {\n        if (i + offset >= dst.length || i >= src.length) break;\n        dst[i + offset] = src[i];\n      }\n      return i;\n    }\n\n    // ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n    // but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\n    function isArrayBuffer(obj) {\n      return obj instanceof ArrayBuffer || obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' && typeof obj.byteLength === 'number';\n    }\n\n    function numberIsNaN(obj) {\n      return obj !== obj; // eslint-disable-line no-self-compare\n    }\n  }, { \"base64-js\": 3, \"ieee754\": 7 }], 7: [function (require, module, exports) {\n    exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n      var e, m;\n      var eLen = nBytes * 8 - mLen - 1;\n      var eMax = (1 << eLen) - 1;\n      var eBias = eMax >> 1;\n      var nBits = -7;\n      var i = isLE ? nBytes - 1 : 0;\n      var d = isLE ? -1 : 1;\n      var s = buffer[offset + i];\n\n      i += d;\n\n      e = s & (1 << -nBits) - 1;\n      s >>= -nBits;\n      nBits += eLen;\n      for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n      m = e & (1 << -nBits) - 1;\n      e >>= -nBits;\n      nBits += mLen;\n      for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n      if (e === 0) {\n        e = 1 - eBias;\n      } else if (e === eMax) {\n        return m ? NaN : (s ? -1 : 1) * Infinity;\n      } else {\n        m = m + Math.pow(2, mLen);\n        e = e - eBias;\n      }\n      return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n    };\n\n    exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n      var e, m, c;\n      var eLen = nBytes * 8 - mLen - 1;\n      var eMax = (1 << eLen) - 1;\n      var eBias = eMax >> 1;\n      var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n      var i = isLE ? 0 : nBytes - 1;\n      var d = isLE ? 1 : -1;\n      var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\n      value = Math.abs(value);\n\n      if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0;\n        e = eMax;\n      } else {\n        e = Math.floor(Math.log(value) / Math.LN2);\n        if (value * (c = Math.pow(2, -e)) < 1) {\n          e--;\n          c *= 2;\n        }\n        if (e + eBias >= 1) {\n          value += rt / c;\n        } else {\n          value += rt * Math.pow(2, 1 - eBias);\n        }\n        if (value * c >= 2) {\n          e++;\n          c /= 2;\n        }\n\n        if (e + eBias >= eMax) {\n          m = 0;\n          e = eMax;\n        } else if (e + eBias >= 1) {\n          m = (value * c - 1) * Math.pow(2, mLen);\n          e = e + eBias;\n        } else {\n          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n          e = 0;\n        }\n      }\n\n      for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n      e = e << mLen | m;\n      eLen += mLen;\n      for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n      buffer[offset + i - d] |= s * 128;\n    };\n  }, {}], 8: [function (require, module, exports) {\n    'use strict';\n\n    module.exports = require('./lib/');\n  }, { \"./lib/\": 22 }], 9: [function (require, module, exports) {\n    // List of valid entities\n    //\n    // Generate with ./support/entities.js script\n    //\n    'use strict';\n\n    /*eslint quotes:0*/\n\n    module.exports = {\n      \"Aacute\": \"\\xC1\",\n      \"aacute\": \"\\xE1\",\n      \"Abreve\": \"\\u0102\",\n      \"abreve\": \"\\u0103\",\n      \"ac\": \"\\u223E\",\n      \"acd\": \"\\u223F\",\n      \"acE\": \"\\u223E\\u0333\",\n      \"Acirc\": \"\\xC2\",\n      \"acirc\": \"\\xE2\",\n      \"acute\": \"\\xB4\",\n      \"Acy\": \"\\u0410\",\n      \"acy\": \"\\u0430\",\n      \"AElig\": \"\\xC6\",\n      \"aelig\": \"\\xE6\",\n      \"af\": \"\\u2061\",\n      \"Afr\": \"\\uD835\\uDD04\",\n      \"afr\": \"\\uD835\\uDD1E\",\n      \"Agrave\": \"\\xC0\",\n      \"agrave\": \"\\xE0\",\n      \"alefsym\": \"\\u2135\",\n      \"aleph\": \"\\u2135\",\n      \"Alpha\": \"\\u0391\",\n      \"alpha\": \"\\u03B1\",\n      \"Amacr\": \"\\u0100\",\n      \"amacr\": \"\\u0101\",\n      \"amalg\": \"\\u2A3F\",\n      \"AMP\": \"&\",\n      \"amp\": \"&\",\n      \"And\": \"\\u2A53\",\n      \"and\": \"\\u2227\",\n      \"andand\": \"\\u2A55\",\n      \"andd\": \"\\u2A5C\",\n      \"andslope\": \"\\u2A58\",\n      \"andv\": \"\\u2A5A\",\n      \"ang\": \"\\u2220\",\n      \"ange\": \"\\u29A4\",\n      \"angle\": \"\\u2220\",\n      \"angmsd\": \"\\u2221\",\n      \"angmsdaa\": \"\\u29A8\",\n      \"angmsdab\": \"\\u29A9\",\n      \"angmsdac\": \"\\u29AA\",\n      \"angmsdad\": \"\\u29AB\",\n      \"angmsdae\": \"\\u29AC\",\n      \"angmsdaf\": \"\\u29AD\",\n      \"angmsdag\": \"\\u29AE\",\n      \"angmsdah\": \"\\u29AF\",\n      \"angrt\": \"\\u221F\",\n      \"angrtvb\": \"\\u22BE\",\n      \"angrtvbd\": \"\\u299D\",\n      \"angsph\": \"\\u2222\",\n      \"angst\": \"\\xC5\",\n      \"angzarr\": \"\\u237C\",\n      \"Aogon\": \"\\u0104\",\n      \"aogon\": \"\\u0105\",\n      \"Aopf\": \"\\uD835\\uDD38\",\n      \"aopf\": \"\\uD835\\uDD52\",\n      \"ap\": \"\\u2248\",\n      \"apacir\": \"\\u2A6F\",\n      \"apE\": \"\\u2A70\",\n      \"ape\": \"\\u224A\",\n      \"apid\": \"\\u224B\",\n      \"apos\": \"'\",\n      \"ApplyFunction\": \"\\u2061\",\n      \"approx\": \"\\u2248\",\n      \"approxeq\": \"\\u224A\",\n      \"Aring\": \"\\xC5\",\n      \"aring\": \"\\xE5\",\n      \"Ascr\": \"\\uD835\\uDC9C\",\n      \"ascr\": \"\\uD835\\uDCB6\",\n      \"Assign\": \"\\u2254\",\n      \"ast\": \"*\",\n      \"asymp\": \"\\u2248\",\n      \"asympeq\": \"\\u224D\",\n      \"Atilde\": \"\\xC3\",\n      \"atilde\": \"\\xE3\",\n      \"Auml\": \"\\xC4\",\n      \"auml\": \"\\xE4\",\n      \"awconint\": \"\\u2233\",\n      \"awint\": \"\\u2A11\",\n      \"backcong\": \"\\u224C\",\n      \"backepsilon\": \"\\u03F6\",\n      \"backprime\": \"\\u2035\",\n      \"backsim\": \"\\u223D\",\n      \"backsimeq\": \"\\u22CD\",\n      \"Backslash\": \"\\u2216\",\n      \"Barv\": \"\\u2AE7\",\n      \"barvee\": \"\\u22BD\",\n      \"Barwed\": \"\\u2306\",\n      \"barwed\": \"\\u2305\",\n      \"barwedge\": \"\\u2305\",\n      \"bbrk\": \"\\u23B5\",\n      \"bbrktbrk\": \"\\u23B6\",\n      \"bcong\": \"\\u224C\",\n      \"Bcy\": \"\\u0411\",\n      \"bcy\": \"\\u0431\",\n      \"bdquo\": \"\\u201E\",\n      \"becaus\": \"\\u2235\",\n      \"Because\": \"\\u2235\",\n      \"because\": \"\\u2235\",\n      \"bemptyv\": \"\\u29B0\",\n      \"bepsi\": \"\\u03F6\",\n      \"bernou\": \"\\u212C\",\n      \"Bernoullis\": \"\\u212C\",\n      \"Beta\": \"\\u0392\",\n      \"beta\": \"\\u03B2\",\n      \"beth\": \"\\u2136\",\n      \"between\": \"\\u226C\",\n      \"Bfr\": \"\\uD835\\uDD05\",\n      \"bfr\": \"\\uD835\\uDD1F\",\n      \"bigcap\": \"\\u22C2\",\n      \"bigcirc\": \"\\u25EF\",\n      \"bigcup\": \"\\u22C3\",\n      \"bigodot\": \"\\u2A00\",\n      \"bigoplus\": \"\\u2A01\",\n      \"bigotimes\": \"\\u2A02\",\n      \"bigsqcup\": \"\\u2A06\",\n      \"bigstar\": \"\\u2605\",\n      \"bigtriangledown\": \"\\u25BD\",\n      \"bigtriangleup\": \"\\u25B3\",\n      \"biguplus\": \"\\u2A04\",\n      \"bigvee\": \"\\u22C1\",\n      \"bigwedge\": \"\\u22C0\",\n      \"bkarow\": \"\\u290D\",\n      \"blacklozenge\": \"\\u29EB\",\n      \"blacksquare\": \"\\u25AA\",\n      \"blacktriangle\": \"\\u25B4\",\n      \"blacktriangledown\": \"\\u25BE\",\n      \"blacktriangleleft\": \"\\u25C2\",\n      \"blacktriangleright\": \"\\u25B8\",\n      \"blank\": \"\\u2423\",\n      \"blk12\": \"\\u2592\",\n      \"blk14\": \"\\u2591\",\n      \"blk34\": \"\\u2593\",\n      \"block\": \"\\u2588\",\n      \"bne\": \"=\\u20E5\",\n      \"bnequiv\": \"\\u2261\\u20E5\",\n      \"bNot\": \"\\u2AED\",\n      \"bnot\": \"\\u2310\",\n      \"Bopf\": \"\\uD835\\uDD39\",\n      \"bopf\": \"\\uD835\\uDD53\",\n      \"bot\": \"\\u22A5\",\n      \"bottom\": \"\\u22A5\",\n      \"bowtie\": \"\\u22C8\",\n      \"boxbox\": \"\\u29C9\",\n      \"boxDL\": \"\\u2557\",\n      \"boxDl\": \"\\u2556\",\n      \"boxdL\": \"\\u2555\",\n      \"boxdl\": \"\\u2510\",\n      \"boxDR\": \"\\u2554\",\n      \"boxDr\": \"\\u2553\",\n      \"boxdR\": \"\\u2552\",\n      \"boxdr\": \"\\u250C\",\n      \"boxH\": \"\\u2550\",\n      \"boxh\": \"\\u2500\",\n      \"boxHD\": \"\\u2566\",\n      \"boxHd\": \"\\u2564\",\n      \"boxhD\": \"\\u2565\",\n      \"boxhd\": \"\\u252C\",\n      \"boxHU\": \"\\u2569\",\n      \"boxHu\": \"\\u2567\",\n      \"boxhU\": \"\\u2568\",\n      \"boxhu\": \"\\u2534\",\n      \"boxminus\": \"\\u229F\",\n      \"boxplus\": \"\\u229E\",\n      \"boxtimes\": \"\\u22A0\",\n      \"boxUL\": \"\\u255D\",\n      \"boxUl\": \"\\u255C\",\n      \"boxuL\": \"\\u255B\",\n      \"boxul\": \"\\u2518\",\n      \"boxUR\": \"\\u255A\",\n      \"boxUr\": \"\\u2559\",\n      \"boxuR\": \"\\u2558\",\n      \"boxur\": \"\\u2514\",\n      \"boxV\": \"\\u2551\",\n      \"boxv\": \"\\u2502\",\n      \"boxVH\": \"\\u256C\",\n      \"boxVh\": \"\\u256B\",\n      \"boxvH\": \"\\u256A\",\n      \"boxvh\": \"\\u253C\",\n      \"boxVL\": \"\\u2563\",\n      \"boxVl\": \"\\u2562\",\n      \"boxvL\": \"\\u2561\",\n      \"boxvl\": \"\\u2524\",\n      \"boxVR\": \"\\u2560\",\n      \"boxVr\": \"\\u255F\",\n      \"boxvR\": \"\\u255E\",\n      \"boxvr\": \"\\u251C\",\n      \"bprime\": \"\\u2035\",\n      \"Breve\": \"\\u02D8\",\n      \"breve\": \"\\u02D8\",\n      \"brvbar\": \"\\xA6\",\n      \"Bscr\": \"\\u212C\",\n      \"bscr\": \"\\uD835\\uDCB7\",\n      \"bsemi\": \"\\u204F\",\n      \"bsim\": \"\\u223D\",\n      \"bsime\": \"\\u22CD\",\n      \"bsol\": \"\\\\\",\n      \"bsolb\": \"\\u29C5\",\n      \"bsolhsub\": \"\\u27C8\",\n      \"bull\": \"\\u2022\",\n      \"bullet\": \"\\u2022\",\n      \"bump\": \"\\u224E\",\n      \"bumpE\": \"\\u2AAE\",\n      \"bumpe\": \"\\u224F\",\n      \"Bumpeq\": \"\\u224E\",\n      \"bumpeq\": \"\\u224F\",\n      \"Cacute\": \"\\u0106\",\n      \"cacute\": \"\\u0107\",\n      \"Cap\": \"\\u22D2\",\n      \"cap\": \"\\u2229\",\n      \"capand\": \"\\u2A44\",\n      \"capbrcup\": \"\\u2A49\",\n      \"capcap\": \"\\u2A4B\",\n      \"capcup\": \"\\u2A47\",\n      \"capdot\": \"\\u2A40\",\n      \"CapitalDifferentialD\": \"\\u2145\",\n      \"caps\": \"\\u2229\\uFE00\",\n      \"caret\": \"\\u2041\",\n      \"caron\": \"\\u02C7\",\n      \"Cayleys\": \"\\u212D\",\n      \"ccaps\": \"\\u2A4D\",\n      \"Ccaron\": \"\\u010C\",\n      \"ccaron\": \"\\u010D\",\n      \"Ccedil\": \"\\xC7\",\n      \"ccedil\": \"\\xE7\",\n      \"Ccirc\": \"\\u0108\",\n      \"ccirc\": \"\\u0109\",\n      \"Cconint\": \"\\u2230\",\n      \"ccups\": \"\\u2A4C\",\n      \"ccupssm\": \"\\u2A50\",\n      \"Cdot\": \"\\u010A\",\n      \"cdot\": \"\\u010B\",\n      \"cedil\": \"\\xB8\",\n      \"Cedilla\": \"\\xB8\",\n      \"cemptyv\": \"\\u29B2\",\n      \"cent\": \"\\xA2\",\n      \"CenterDot\": \"\\xB7\",\n      \"centerdot\": \"\\xB7\",\n      \"Cfr\": \"\\u212D\",\n      \"cfr\": \"\\uD835\\uDD20\",\n      \"CHcy\": \"\\u0427\",\n      \"chcy\": \"\\u0447\",\n      \"check\": \"\\u2713\",\n      \"checkmark\": \"\\u2713\",\n      \"Chi\": \"\\u03A7\",\n      \"chi\": \"\\u03C7\",\n      \"cir\": \"\\u25CB\",\n      \"circ\": \"\\u02C6\",\n      \"circeq\": \"\\u2257\",\n      \"circlearrowleft\": \"\\u21BA\",\n      \"circlearrowright\": \"\\u21BB\",\n      \"circledast\": \"\\u229B\",\n      \"circledcirc\": \"\\u229A\",\n      \"circleddash\": \"\\u229D\",\n      \"CircleDot\": \"\\u2299\",\n      \"circledR\": \"\\xAE\",\n      \"circledS\": \"\\u24C8\",\n      \"CircleMinus\": \"\\u2296\",\n      \"CirclePlus\": \"\\u2295\",\n      \"CircleTimes\": \"\\u2297\",\n      \"cirE\": \"\\u29C3\",\n      \"cire\": \"\\u2257\",\n      \"cirfnint\": \"\\u2A10\",\n      \"cirmid\": \"\\u2AEF\",\n      \"cirscir\": \"\\u29C2\",\n      \"ClockwiseContourIntegral\": \"\\u2232\",\n      \"CloseCurlyDoubleQuote\": \"\\u201D\",\n      \"CloseCurlyQuote\": \"\\u2019\",\n      \"clubs\": \"\\u2663\",\n      \"clubsuit\": \"\\u2663\",\n      \"Colon\": \"\\u2237\",\n      \"colon\": \":\",\n      \"Colone\": \"\\u2A74\",\n      \"colone\": \"\\u2254\",\n      \"coloneq\": \"\\u2254\",\n      \"comma\": \",\",\n      \"commat\": \"@\",\n      \"comp\": \"\\u2201\",\n      \"compfn\": \"\\u2218\",\n      \"complement\": \"\\u2201\",\n      \"complexes\": \"\\u2102\",\n      \"cong\": \"\\u2245\",\n      \"congdot\": \"\\u2A6D\",\n      \"Congruent\": \"\\u2261\",\n      \"Conint\": \"\\u222F\",\n      \"conint\": \"\\u222E\",\n      \"ContourIntegral\": \"\\u222E\",\n      \"Copf\": \"\\u2102\",\n      \"copf\": \"\\uD835\\uDD54\",\n      \"coprod\": \"\\u2210\",\n      \"Coproduct\": \"\\u2210\",\n      \"COPY\": \"\\xA9\",\n      \"copy\": \"\\xA9\",\n      \"copysr\": \"\\u2117\",\n      \"CounterClockwiseContourIntegral\": \"\\u2233\",\n      \"crarr\": \"\\u21B5\",\n      \"Cross\": \"\\u2A2F\",\n      \"cross\": \"\\u2717\",\n      \"Cscr\": \"\\uD835\\uDC9E\",\n      \"cscr\": \"\\uD835\\uDCB8\",\n      \"csub\": \"\\u2ACF\",\n      \"csube\": \"\\u2AD1\",\n      \"csup\": \"\\u2AD0\",\n      \"csupe\": \"\\u2AD2\",\n      \"ctdot\": \"\\u22EF\",\n      \"cudarrl\": \"\\u2938\",\n      \"cudarrr\": \"\\u2935\",\n      \"cuepr\": \"\\u22DE\",\n      \"cuesc\": \"\\u22DF\",\n      \"cularr\": \"\\u21B6\",\n      \"cularrp\": \"\\u293D\",\n      \"Cup\": \"\\u22D3\",\n      \"cup\": \"\\u222A\",\n      \"cupbrcap\": \"\\u2A48\",\n      \"CupCap\": \"\\u224D\",\n      \"cupcap\": \"\\u2A46\",\n      \"cupcup\": \"\\u2A4A\",\n      \"cupdot\": \"\\u228D\",\n      \"cupor\": \"\\u2A45\",\n      \"cups\": \"\\u222A\\uFE00\",\n      \"curarr\": \"\\u21B7\",\n      \"curarrm\": \"\\u293C\",\n      \"curlyeqprec\": \"\\u22DE\",\n      \"curlyeqsucc\": \"\\u22DF\",\n      \"curlyvee\": \"\\u22CE\",\n      \"curlywedge\": \"\\u22CF\",\n      \"curren\": \"\\xA4\",\n      \"curvearrowleft\": \"\\u21B6\",\n      \"curvearrowright\": \"\\u21B7\",\n      \"cuvee\": \"\\u22CE\",\n      \"cuwed\": \"\\u22CF\",\n      \"cwconint\": \"\\u2232\",\n      \"cwint\": \"\\u2231\",\n      \"cylcty\": \"\\u232D\",\n      \"Dagger\": \"\\u2021\",\n      \"dagger\": \"\\u2020\",\n      \"daleth\": \"\\u2138\",\n      \"Darr\": \"\\u21A1\",\n      \"dArr\": \"\\u21D3\",\n      \"darr\": \"\\u2193\",\n      \"dash\": \"\\u2010\",\n      \"Dashv\": \"\\u2AE4\",\n      \"dashv\": \"\\u22A3\",\n      \"dbkarow\": \"\\u290F\",\n      \"dblac\": \"\\u02DD\",\n      \"Dcaron\": \"\\u010E\",\n      \"dcaron\": \"\\u010F\",\n      \"Dcy\": \"\\u0414\",\n      \"dcy\": \"\\u0434\",\n      \"DD\": \"\\u2145\",\n      \"dd\": \"\\u2146\",\n      \"ddagger\": \"\\u2021\",\n      \"ddarr\": \"\\u21CA\",\n      \"DDotrahd\": \"\\u2911\",\n      \"ddotseq\": \"\\u2A77\",\n      \"deg\": \"\\xB0\",\n      \"Del\": \"\\u2207\",\n      \"Delta\": \"\\u0394\",\n      \"delta\": \"\\u03B4\",\n      \"demptyv\": \"\\u29B1\",\n      \"dfisht\": \"\\u297F\",\n      \"Dfr\": \"\\uD835\\uDD07\",\n      \"dfr\": \"\\uD835\\uDD21\",\n      \"dHar\": \"\\u2965\",\n      \"dharl\": \"\\u21C3\",\n      \"dharr\": \"\\u21C2\",\n      \"DiacriticalAcute\": \"\\xB4\",\n      \"DiacriticalDot\": \"\\u02D9\",\n      \"DiacriticalDoubleAcute\": \"\\u02DD\",\n      \"DiacriticalGrave\": \"`\",\n      \"DiacriticalTilde\": \"\\u02DC\",\n      \"diam\": \"\\u22C4\",\n      \"Diamond\": \"\\u22C4\",\n      \"diamond\": \"\\u22C4\",\n      \"diamondsuit\": \"\\u2666\",\n      \"diams\": \"\\u2666\",\n      \"die\": \"\\xA8\",\n      \"DifferentialD\": \"\\u2146\",\n      \"digamma\": \"\\u03DD\",\n      \"disin\": \"\\u22F2\",\n      \"div\": \"\\xF7\",\n      \"divide\": \"\\xF7\",\n      \"divideontimes\": \"\\u22C7\",\n      \"divonx\": \"\\u22C7\",\n      \"DJcy\": \"\\u0402\",\n      \"djcy\": \"\\u0452\",\n      \"dlcorn\": \"\\u231E\",\n      \"dlcrop\": \"\\u230D\",\n      \"dollar\": \"$\",\n      \"Dopf\": \"\\uD835\\uDD3B\",\n      \"dopf\": \"\\uD835\\uDD55\",\n      \"Dot\": \"\\xA8\",\n      \"dot\": \"\\u02D9\",\n      \"DotDot\": \"\\u20DC\",\n      \"doteq\": \"\\u2250\",\n      \"doteqdot\": \"\\u2251\",\n      \"DotEqual\": \"\\u2250\",\n      \"dotminus\": \"\\u2238\",\n      \"dotplus\": \"\\u2214\",\n      \"dotsquare\": \"\\u22A1\",\n      \"doublebarwedge\": \"\\u2306\",\n      \"DoubleContourIntegral\": \"\\u222F\",\n      \"DoubleDot\": \"\\xA8\",\n      \"DoubleDownArrow\": \"\\u21D3\",\n      \"DoubleLeftArrow\": \"\\u21D0\",\n      \"DoubleLeftRightArrow\": \"\\u21D4\",\n      \"DoubleLeftTee\": \"\\u2AE4\",\n      \"DoubleLongLeftArrow\": \"\\u27F8\",\n      \"DoubleLongLeftRightArrow\": \"\\u27FA\",\n      \"DoubleLongRightArrow\": \"\\u27F9\",\n      \"DoubleRightArrow\": \"\\u21D2\",\n      \"DoubleRightTee\": \"\\u22A8\",\n      \"DoubleUpArrow\": \"\\u21D1\",\n      \"DoubleUpDownArrow\": \"\\u21D5\",\n      \"DoubleVerticalBar\": \"\\u2225\",\n      \"DownArrow\": \"\\u2193\",\n      \"Downarrow\": \"\\u21D3\",\n      \"downarrow\": \"\\u2193\",\n      \"DownArrowBar\": \"\\u2913\",\n      \"DownArrowUpArrow\": \"\\u21F5\",\n      \"DownBreve\": \"\\u0311\",\n      \"downdownarrows\": \"\\u21CA\",\n      \"downharpoonleft\": \"\\u21C3\",\n      \"downharpoonright\": \"\\u21C2\",\n      \"DownLeftRightVector\": \"\\u2950\",\n      \"DownLeftTeeVector\": \"\\u295E\",\n      \"DownLeftVector\": \"\\u21BD\",\n      \"DownLeftVectorBar\": \"\\u2956\",\n      \"DownRightTeeVector\": \"\\u295F\",\n      \"DownRightVector\": \"\\u21C1\",\n      \"DownRightVectorBar\": \"\\u2957\",\n      \"DownTee\": \"\\u22A4\",\n      \"DownTeeArrow\": \"\\u21A7\",\n      \"drbkarow\": \"\\u2910\",\n      \"drcorn\": \"\\u231F\",\n      \"drcrop\": \"\\u230C\",\n      \"Dscr\": \"\\uD835\\uDC9F\",\n      \"dscr\": \"\\uD835\\uDCB9\",\n      \"DScy\": \"\\u0405\",\n      \"dscy\": \"\\u0455\",\n      \"dsol\": \"\\u29F6\",\n      \"Dstrok\": \"\\u0110\",\n      \"dstrok\": \"\\u0111\",\n      \"dtdot\": \"\\u22F1\",\n      \"dtri\": \"\\u25BF\",\n      \"dtrif\": \"\\u25BE\",\n      \"duarr\": \"\\u21F5\",\n      \"duhar\": \"\\u296F\",\n      \"dwangle\": \"\\u29A6\",\n      \"DZcy\": \"\\u040F\",\n      \"dzcy\": \"\\u045F\",\n      \"dzigrarr\": \"\\u27FF\",\n      \"Eacute\": \"\\xC9\",\n      \"eacute\": \"\\xE9\",\n      \"easter\": \"\\u2A6E\",\n      \"Ecaron\": \"\\u011A\",\n      \"ecaron\": \"\\u011B\",\n      \"ecir\": \"\\u2256\",\n      \"Ecirc\": \"\\xCA\",\n      \"ecirc\": \"\\xEA\",\n      \"ecolon\": \"\\u2255\",\n      \"Ecy\": \"\\u042D\",\n      \"ecy\": \"\\u044D\",\n      \"eDDot\": \"\\u2A77\",\n      \"Edot\": \"\\u0116\",\n      \"eDot\": \"\\u2251\",\n      \"edot\": \"\\u0117\",\n      \"ee\": \"\\u2147\",\n      \"efDot\": \"\\u2252\",\n      \"Efr\": \"\\uD835\\uDD08\",\n      \"efr\": \"\\uD835\\uDD22\",\n      \"eg\": \"\\u2A9A\",\n      \"Egrave\": \"\\xC8\",\n      \"egrave\": \"\\xE8\",\n      \"egs\": \"\\u2A96\",\n      \"egsdot\": \"\\u2A98\",\n      \"el\": \"\\u2A99\",\n      \"Element\": \"\\u2208\",\n      \"elinters\": \"\\u23E7\",\n      \"ell\": \"\\u2113\",\n      \"els\": \"\\u2A95\",\n      \"elsdot\": \"\\u2A97\",\n      \"Emacr\": \"\\u0112\",\n      \"emacr\": \"\\u0113\",\n      \"empty\": \"\\u2205\",\n      \"emptyset\": \"\\u2205\",\n      \"EmptySmallSquare\": \"\\u25FB\",\n      \"emptyv\": \"\\u2205\",\n      \"EmptyVerySmallSquare\": \"\\u25AB\",\n      \"emsp\": \"\\u2003\",\n      \"emsp13\": \"\\u2004\",\n      \"emsp14\": \"\\u2005\",\n      \"ENG\": \"\\u014A\",\n      \"eng\": \"\\u014B\",\n      \"ensp\": \"\\u2002\",\n      \"Eogon\": \"\\u0118\",\n      \"eogon\": \"\\u0119\",\n      \"Eopf\": \"\\uD835\\uDD3C\",\n      \"eopf\": \"\\uD835\\uDD56\",\n      \"epar\": \"\\u22D5\",\n      \"eparsl\": \"\\u29E3\",\n      \"eplus\": \"\\u2A71\",\n      \"epsi\": \"\\u03B5\",\n      \"Epsilon\": \"\\u0395\",\n      \"epsilon\": \"\\u03B5\",\n      \"epsiv\": \"\\u03F5\",\n      \"eqcirc\": \"\\u2256\",\n      \"eqcolon\": \"\\u2255\",\n      \"eqsim\": \"\\u2242\",\n      \"eqslantgtr\": \"\\u2A96\",\n      \"eqslantless\": \"\\u2A95\",\n      \"Equal\": \"\\u2A75\",\n      \"equals\": \"=\",\n      \"EqualTilde\": \"\\u2242\",\n      \"equest\": \"\\u225F\",\n      \"Equilibrium\": \"\\u21CC\",\n      \"equiv\": \"\\u2261\",\n      \"equivDD\": \"\\u2A78\",\n      \"eqvparsl\": \"\\u29E5\",\n      \"erarr\": \"\\u2971\",\n      \"erDot\": \"\\u2253\",\n      \"Escr\": \"\\u2130\",\n      \"escr\": \"\\u212F\",\n      \"esdot\": \"\\u2250\",\n      \"Esim\": \"\\u2A73\",\n      \"esim\": \"\\u2242\",\n      \"Eta\": \"\\u0397\",\n      \"eta\": \"\\u03B7\",\n      \"ETH\": \"\\xD0\",\n      \"eth\": \"\\xF0\",\n      \"Euml\": \"\\xCB\",\n      \"euml\": \"\\xEB\",\n      \"euro\": \"\\u20AC\",\n      \"excl\": \"!\",\n      \"exist\": \"\\u2203\",\n      \"Exists\": \"\\u2203\",\n      \"expectation\": \"\\u2130\",\n      \"ExponentialE\": \"\\u2147\",\n      \"exponentiale\": \"\\u2147\",\n      \"fallingdotseq\": \"\\u2252\",\n      \"Fcy\": \"\\u0424\",\n      \"fcy\": \"\\u0444\",\n      \"female\": \"\\u2640\",\n      \"ffilig\": \"\\uFB03\",\n      \"fflig\": \"\\uFB00\",\n      \"ffllig\": \"\\uFB04\",\n      \"Ffr\": \"\\uD835\\uDD09\",\n      \"ffr\": \"\\uD835\\uDD23\",\n      \"filig\": \"\\uFB01\",\n      \"FilledSmallSquare\": \"\\u25FC\",\n      \"FilledVerySmallSquare\": \"\\u25AA\",\n      \"fjlig\": \"fj\",\n      \"flat\": \"\\u266D\",\n      \"fllig\": \"\\uFB02\",\n      \"fltns\": \"\\u25B1\",\n      \"fnof\": \"\\u0192\",\n      \"Fopf\": \"\\uD835\\uDD3D\",\n      \"fopf\": \"\\uD835\\uDD57\",\n      \"ForAll\": \"\\u2200\",\n      \"forall\": \"\\u2200\",\n      \"fork\": \"\\u22D4\",\n      \"forkv\": \"\\u2AD9\",\n      \"Fouriertrf\": \"\\u2131\",\n      \"fpartint\": \"\\u2A0D\",\n      \"frac12\": \"\\xBD\",\n      \"frac13\": \"\\u2153\",\n      \"frac14\": \"\\xBC\",\n      \"frac15\": \"\\u2155\",\n      \"frac16\": \"\\u2159\",\n      \"frac18\": \"\\u215B\",\n      \"frac23\": \"\\u2154\",\n      \"frac25\": \"\\u2156\",\n      \"frac34\": \"\\xBE\",\n      \"frac35\": \"\\u2157\",\n      \"frac38\": \"\\u215C\",\n      \"frac45\": \"\\u2158\",\n      \"frac56\": \"\\u215A\",\n      \"frac58\": \"\\u215D\",\n      \"frac78\": \"\\u215E\",\n      \"frasl\": \"\\u2044\",\n      \"frown\": \"\\u2322\",\n      \"Fscr\": \"\\u2131\",\n      \"fscr\": \"\\uD835\\uDCBB\",\n      \"gacute\": \"\\u01F5\",\n      \"Gamma\": \"\\u0393\",\n      \"gamma\": \"\\u03B3\",\n      \"Gammad\": \"\\u03DC\",\n      \"gammad\": \"\\u03DD\",\n      \"gap\": \"\\u2A86\",\n      \"Gbreve\": \"\\u011E\",\n      \"gbreve\": \"\\u011F\",\n      \"Gcedil\": \"\\u0122\",\n      \"Gcirc\": \"\\u011C\",\n      \"gcirc\": \"\\u011D\",\n      \"Gcy\": \"\\u0413\",\n      \"gcy\": \"\\u0433\",\n      \"Gdot\": \"\\u0120\",\n      \"gdot\": \"\\u0121\",\n      \"gE\": \"\\u2267\",\n      \"ge\": \"\\u2265\",\n      \"gEl\": \"\\u2A8C\",\n      \"gel\": \"\\u22DB\",\n      \"geq\": \"\\u2265\",\n      \"geqq\": \"\\u2267\",\n      \"geqslant\": \"\\u2A7E\",\n      \"ges\": \"\\u2A7E\",\n      \"gescc\": \"\\u2AA9\",\n      \"gesdot\": \"\\u2A80\",\n      \"gesdoto\": \"\\u2A82\",\n      \"gesdotol\": \"\\u2A84\",\n      \"gesl\": \"\\u22DB\\uFE00\",\n      \"gesles\": \"\\u2A94\",\n      \"Gfr\": \"\\uD835\\uDD0A\",\n      \"gfr\": \"\\uD835\\uDD24\",\n      \"Gg\": \"\\u22D9\",\n      \"gg\": \"\\u226B\",\n      \"ggg\": \"\\u22D9\",\n      \"gimel\": \"\\u2137\",\n      \"GJcy\": \"\\u0403\",\n      \"gjcy\": \"\\u0453\",\n      \"gl\": \"\\u2277\",\n      \"gla\": \"\\u2AA5\",\n      \"glE\": \"\\u2A92\",\n      \"glj\": \"\\u2AA4\",\n      \"gnap\": \"\\u2A8A\",\n      \"gnapprox\": \"\\u2A8A\",\n      \"gnE\": \"\\u2269\",\n      \"gne\": \"\\u2A88\",\n      \"gneq\": \"\\u2A88\",\n      \"gneqq\": \"\\u2269\",\n      \"gnsim\": \"\\u22E7\",\n      \"Gopf\": \"\\uD835\\uDD3E\",\n      \"gopf\": \"\\uD835\\uDD58\",\n      \"grave\": \"`\",\n      \"GreaterEqual\": \"\\u2265\",\n      \"GreaterEqualLess\": \"\\u22DB\",\n      \"GreaterFullEqual\": \"\\u2267\",\n      \"GreaterGreater\": \"\\u2AA2\",\n      \"GreaterLess\": \"\\u2277\",\n      \"GreaterSlantEqual\": \"\\u2A7E\",\n      \"GreaterTilde\": \"\\u2273\",\n      \"Gscr\": \"\\uD835\\uDCA2\",\n      \"gscr\": \"\\u210A\",\n      \"gsim\": \"\\u2273\",\n      \"gsime\": \"\\u2A8E\",\n      \"gsiml\": \"\\u2A90\",\n      \"GT\": \">\",\n      \"Gt\": \"\\u226B\",\n      \"gt\": \">\",\n      \"gtcc\": \"\\u2AA7\",\n      \"gtcir\": \"\\u2A7A\",\n      \"gtdot\": \"\\u22D7\",\n      \"gtlPar\": \"\\u2995\",\n      \"gtquest\": \"\\u2A7C\",\n      \"gtrapprox\": \"\\u2A86\",\n      \"gtrarr\": \"\\u2978\",\n      \"gtrdot\": \"\\u22D7\",\n      \"gtreqless\": \"\\u22DB\",\n      \"gtreqqless\": \"\\u2A8C\",\n      \"gtrless\": \"\\u2277\",\n      \"gtrsim\": \"\\u2273\",\n      \"gvertneqq\": \"\\u2269\\uFE00\",\n      \"gvnE\": \"\\u2269\\uFE00\",\n      \"Hacek\": \"\\u02C7\",\n      \"hairsp\": \"\\u200A\",\n      \"half\": \"\\xBD\",\n      \"hamilt\": \"\\u210B\",\n      \"HARDcy\": \"\\u042A\",\n      \"hardcy\": \"\\u044A\",\n      \"hArr\": \"\\u21D4\",\n      \"harr\": \"\\u2194\",\n      \"harrcir\": \"\\u2948\",\n      \"harrw\": \"\\u21AD\",\n      \"Hat\": \"^\",\n      \"hbar\": \"\\u210F\",\n      \"Hcirc\": \"\\u0124\",\n      \"hcirc\": \"\\u0125\",\n      \"hearts\": \"\\u2665\",\n      \"heartsuit\": \"\\u2665\",\n      \"hellip\": \"\\u2026\",\n      \"hercon\": \"\\u22B9\",\n      \"Hfr\": \"\\u210C\",\n      \"hfr\": \"\\uD835\\uDD25\",\n      \"HilbertSpace\": \"\\u210B\",\n      \"hksearow\": \"\\u2925\",\n      \"hkswarow\": \"\\u2926\",\n      \"hoarr\": \"\\u21FF\",\n      \"homtht\": \"\\u223B\",\n      \"hookleftarrow\": \"\\u21A9\",\n      \"hookrightarrow\": \"\\u21AA\",\n      \"Hopf\": \"\\u210D\",\n      \"hopf\": \"\\uD835\\uDD59\",\n      \"horbar\": \"\\u2015\",\n      \"HorizontalLine\": \"\\u2500\",\n      \"Hscr\": \"\\u210B\",\n      \"hscr\": \"\\uD835\\uDCBD\",\n      \"hslash\": \"\\u210F\",\n      \"Hstrok\": \"\\u0126\",\n      \"hstrok\": \"\\u0127\",\n      \"HumpDownHump\": \"\\u224E\",\n      \"HumpEqual\": \"\\u224F\",\n      \"hybull\": \"\\u2043\",\n      \"hyphen\": \"\\u2010\",\n      \"Iacute\": \"\\xCD\",\n      \"iacute\": \"\\xED\",\n      \"ic\": \"\\u2063\",\n      \"Icirc\": \"\\xCE\",\n      \"icirc\": \"\\xEE\",\n      \"Icy\": \"\\u0418\",\n      \"icy\": \"\\u0438\",\n      \"Idot\": \"\\u0130\",\n      \"IEcy\": \"\\u0415\",\n      \"iecy\": \"\\u0435\",\n      \"iexcl\": \"\\xA1\",\n      \"iff\": \"\\u21D4\",\n      \"Ifr\": \"\\u2111\",\n      \"ifr\": \"\\uD835\\uDD26\",\n      \"Igrave\": \"\\xCC\",\n      \"igrave\": \"\\xEC\",\n      \"ii\": \"\\u2148\",\n      \"iiiint\": \"\\u2A0C\",\n      \"iiint\": \"\\u222D\",\n      \"iinfin\": \"\\u29DC\",\n      \"iiota\": \"\\u2129\",\n      \"IJlig\": \"\\u0132\",\n      \"ijlig\": \"\\u0133\",\n      \"Im\": \"\\u2111\",\n      \"Imacr\": \"\\u012A\",\n      \"imacr\": \"\\u012B\",\n      \"image\": \"\\u2111\",\n      \"ImaginaryI\": \"\\u2148\",\n      \"imagline\": \"\\u2110\",\n      \"imagpart\": \"\\u2111\",\n      \"imath\": \"\\u0131\",\n      \"imof\": \"\\u22B7\",\n      \"imped\": \"\\u01B5\",\n      \"Implies\": \"\\u21D2\",\n      \"in\": \"\\u2208\",\n      \"incare\": \"\\u2105\",\n      \"infin\": \"\\u221E\",\n      \"infintie\": \"\\u29DD\",\n      \"inodot\": \"\\u0131\",\n      \"Int\": \"\\u222C\",\n      \"int\": \"\\u222B\",\n      \"intcal\": \"\\u22BA\",\n      \"integers\": \"\\u2124\",\n      \"Integral\": \"\\u222B\",\n      \"intercal\": \"\\u22BA\",\n      \"Intersection\": \"\\u22C2\",\n      \"intlarhk\": \"\\u2A17\",\n      \"intprod\": \"\\u2A3C\",\n      \"InvisibleComma\": \"\\u2063\",\n      \"InvisibleTimes\": \"\\u2062\",\n      \"IOcy\": \"\\u0401\",\n      \"iocy\": \"\\u0451\",\n      \"Iogon\": \"\\u012E\",\n      \"iogon\": \"\\u012F\",\n      \"Iopf\": \"\\uD835\\uDD40\",\n      \"iopf\": \"\\uD835\\uDD5A\",\n      \"Iota\": \"\\u0399\",\n      \"iota\": \"\\u03B9\",\n      \"iprod\": \"\\u2A3C\",\n      \"iquest\": \"\\xBF\",\n      \"Iscr\": \"\\u2110\",\n      \"iscr\": \"\\uD835\\uDCBE\",\n      \"isin\": \"\\u2208\",\n      \"isindot\": \"\\u22F5\",\n      \"isinE\": \"\\u22F9\",\n      \"isins\": \"\\u22F4\",\n      \"isinsv\": \"\\u22F3\",\n      \"isinv\": \"\\u2208\",\n      \"it\": \"\\u2062\",\n      \"Itilde\": \"\\u0128\",\n      \"itilde\": \"\\u0129\",\n      \"Iukcy\": \"\\u0406\",\n      \"iukcy\": \"\\u0456\",\n      \"Iuml\": \"\\xCF\",\n      \"iuml\": \"\\xEF\",\n      \"Jcirc\": \"\\u0134\",\n      \"jcirc\": \"\\u0135\",\n      \"Jcy\": \"\\u0419\",\n      \"jcy\": \"\\u0439\",\n      \"Jfr\": \"\\uD835\\uDD0D\",\n      \"jfr\": \"\\uD835\\uDD27\",\n      \"jmath\": \"\\u0237\",\n      \"Jopf\": \"\\uD835\\uDD41\",\n      \"jopf\": \"\\uD835\\uDD5B\",\n      \"Jscr\": \"\\uD835\\uDCA5\",\n      \"jscr\": \"\\uD835\\uDCBF\",\n      \"Jsercy\": \"\\u0408\",\n      \"jsercy\": \"\\u0458\",\n      \"Jukcy\": \"\\u0404\",\n      \"jukcy\": \"\\u0454\",\n      \"Kappa\": \"\\u039A\",\n      \"kappa\": \"\\u03BA\",\n      \"kappav\": \"\\u03F0\",\n      \"Kcedil\": \"\\u0136\",\n      \"kcedil\": \"\\u0137\",\n      \"Kcy\": \"\\u041A\",\n      \"kcy\": \"\\u043A\",\n      \"Kfr\": \"\\uD835\\uDD0E\",\n      \"kfr\": \"\\uD835\\uDD28\",\n      \"kgreen\": \"\\u0138\",\n      \"KHcy\": \"\\u0425\",\n      \"khcy\": \"\\u0445\",\n      \"KJcy\": \"\\u040C\",\n      \"kjcy\": \"\\u045C\",\n      \"Kopf\": \"\\uD835\\uDD42\",\n      \"kopf\": \"\\uD835\\uDD5C\",\n      \"Kscr\": \"\\uD835\\uDCA6\",\n      \"kscr\": \"\\uD835\\uDCC0\",\n      \"lAarr\": \"\\u21DA\",\n      \"Lacute\": \"\\u0139\",\n      \"lacute\": \"\\u013A\",\n      \"laemptyv\": \"\\u29B4\",\n      \"lagran\": \"\\u2112\",\n      \"Lambda\": \"\\u039B\",\n      \"lambda\": \"\\u03BB\",\n      \"Lang\": \"\\u27EA\",\n      \"lang\": \"\\u27E8\",\n      \"langd\": \"\\u2991\",\n      \"langle\": \"\\u27E8\",\n      \"lap\": \"\\u2A85\",\n      \"Laplacetrf\": \"\\u2112\",\n      \"laquo\": \"\\xAB\",\n      \"Larr\": \"\\u219E\",\n      \"lArr\": \"\\u21D0\",\n      \"larr\": \"\\u2190\",\n      \"larrb\": \"\\u21E4\",\n      \"larrbfs\": \"\\u291F\",\n      \"larrfs\": \"\\u291D\",\n      \"larrhk\": \"\\u21A9\",\n      \"larrlp\": \"\\u21AB\",\n      \"larrpl\": \"\\u2939\",\n      \"larrsim\": \"\\u2973\",\n      \"larrtl\": \"\\u21A2\",\n      \"lat\": \"\\u2AAB\",\n      \"lAtail\": \"\\u291B\",\n      \"latail\": \"\\u2919\",\n      \"late\": \"\\u2AAD\",\n      \"lates\": \"\\u2AAD\\uFE00\",\n      \"lBarr\": \"\\u290E\",\n      \"lbarr\": \"\\u290C\",\n      \"lbbrk\": \"\\u2772\",\n      \"lbrace\": \"{\",\n      \"lbrack\": \"[\",\n      \"lbrke\": \"\\u298B\",\n      \"lbrksld\": \"\\u298F\",\n      \"lbrkslu\": \"\\u298D\",\n      \"Lcaron\": \"\\u013D\",\n      \"lcaron\": \"\\u013E\",\n      \"Lcedil\": \"\\u013B\",\n      \"lcedil\": \"\\u013C\",\n      \"lceil\": \"\\u2308\",\n      \"lcub\": \"{\",\n      \"Lcy\": \"\\u041B\",\n      \"lcy\": \"\\u043B\",\n      \"ldca\": \"\\u2936\",\n      \"ldquo\": \"\\u201C\",\n      \"ldquor\": \"\\u201E\",\n      \"ldrdhar\": \"\\u2967\",\n      \"ldrushar\": \"\\u294B\",\n      \"ldsh\": \"\\u21B2\",\n      \"lE\": \"\\u2266\",\n      \"le\": \"\\u2264\",\n      \"LeftAngleBracket\": \"\\u27E8\",\n      \"LeftArrow\": \"\\u2190\",\n      \"Leftarrow\": \"\\u21D0\",\n      \"leftarrow\": \"\\u2190\",\n      \"LeftArrowBar\": \"\\u21E4\",\n      \"LeftArrowRightArrow\": \"\\u21C6\",\n      \"leftarrowtail\": \"\\u21A2\",\n      \"LeftCeiling\": \"\\u2308\",\n      \"LeftDoubleBracket\": \"\\u27E6\",\n      \"LeftDownTeeVector\": \"\\u2961\",\n      \"LeftDownVector\": \"\\u21C3\",\n      \"LeftDownVectorBar\": \"\\u2959\",\n      \"LeftFloor\": \"\\u230A\",\n      \"leftharpoondown\": \"\\u21BD\",\n      \"leftharpoonup\": \"\\u21BC\",\n      \"leftleftarrows\": \"\\u21C7\",\n      \"LeftRightArrow\": \"\\u2194\",\n      \"Leftrightarrow\": \"\\u21D4\",\n      \"leftrightarrow\": \"\\u2194\",\n      \"leftrightarrows\": \"\\u21C6\",\n      \"leftrightharpoons\": \"\\u21CB\",\n      \"leftrightsquigarrow\": \"\\u21AD\",\n      \"LeftRightVector\": \"\\u294E\",\n      \"LeftTee\": \"\\u22A3\",\n      \"LeftTeeArrow\": \"\\u21A4\",\n      \"LeftTeeVector\": \"\\u295A\",\n      \"leftthreetimes\": \"\\u22CB\",\n      \"LeftTriangle\": \"\\u22B2\",\n      \"LeftTriangleBar\": \"\\u29CF\",\n      \"LeftTriangleEqual\": \"\\u22B4\",\n      \"LeftUpDownVector\": \"\\u2951\",\n      \"LeftUpTeeVector\": \"\\u2960\",\n      \"LeftUpVector\": \"\\u21BF\",\n      \"LeftUpVectorBar\": \"\\u2958\",\n      \"LeftVector\": \"\\u21BC\",\n      \"LeftVectorBar\": \"\\u2952\",\n      \"lEg\": \"\\u2A8B\",\n      \"leg\": \"\\u22DA\",\n      \"leq\": \"\\u2264\",\n      \"leqq\": \"\\u2266\",\n      \"leqslant\": \"\\u2A7D\",\n      \"les\": \"\\u2A7D\",\n      \"lescc\": \"\\u2AA8\",\n      \"lesdot\": \"\\u2A7F\",\n      \"lesdoto\": \"\\u2A81\",\n      \"lesdotor\": \"\\u2A83\",\n      \"lesg\": \"\\u22DA\\uFE00\",\n      \"lesges\": \"\\u2A93\",\n      \"lessapprox\": \"\\u2A85\",\n      \"lessdot\": \"\\u22D6\",\n      \"lesseqgtr\": \"\\u22DA\",\n      \"lesseqqgtr\": \"\\u2A8B\",\n      \"LessEqualGreater\": \"\\u22DA\",\n      \"LessFullEqual\": \"\\u2266\",\n      \"LessGreater\": \"\\u2276\",\n      \"lessgtr\": \"\\u2276\",\n      \"LessLess\": \"\\u2AA1\",\n      \"lesssim\": \"\\u2272\",\n      \"LessSlantEqual\": \"\\u2A7D\",\n      \"LessTilde\": \"\\u2272\",\n      \"lfisht\": \"\\u297C\",\n      \"lfloor\": \"\\u230A\",\n      \"Lfr\": \"\\uD835\\uDD0F\",\n      \"lfr\": \"\\uD835\\uDD29\",\n      \"lg\": \"\\u2276\",\n      \"lgE\": \"\\u2A91\",\n      \"lHar\": \"\\u2962\",\n      \"lhard\": \"\\u21BD\",\n      \"lharu\": \"\\u21BC\",\n      \"lharul\": \"\\u296A\",\n      \"lhblk\": \"\\u2584\",\n      \"LJcy\": \"\\u0409\",\n      \"ljcy\": \"\\u0459\",\n      \"Ll\": \"\\u22D8\",\n      \"ll\": \"\\u226A\",\n      \"llarr\": \"\\u21C7\",\n      \"llcorner\": \"\\u231E\",\n      \"Lleftarrow\": \"\\u21DA\",\n      \"llhard\": \"\\u296B\",\n      \"lltri\": \"\\u25FA\",\n      \"Lmidot\": \"\\u013F\",\n      \"lmidot\": \"\\u0140\",\n      \"lmoust\": \"\\u23B0\",\n      \"lmoustache\": \"\\u23B0\",\n      \"lnap\": \"\\u2A89\",\n      \"lnapprox\": \"\\u2A89\",\n      \"lnE\": \"\\u2268\",\n      \"lne\": \"\\u2A87\",\n      \"lneq\": \"\\u2A87\",\n      \"lneqq\": \"\\u2268\",\n      \"lnsim\": \"\\u22E6\",\n      \"loang\": \"\\u27EC\",\n      \"loarr\": \"\\u21FD\",\n      \"lobrk\": \"\\u27E6\",\n      \"LongLeftArrow\": \"\\u27F5\",\n      \"Longleftarrow\": \"\\u27F8\",\n      \"longleftarrow\": \"\\u27F5\",\n      \"LongLeftRightArrow\": \"\\u27F7\",\n      \"Longleftrightarrow\": \"\\u27FA\",\n      \"longleftrightarrow\": \"\\u27F7\",\n      \"longmapsto\": \"\\u27FC\",\n      \"LongRightArrow\": \"\\u27F6\",\n      \"Longrightarrow\": \"\\u27F9\",\n      \"longrightarrow\": \"\\u27F6\",\n      \"looparrowleft\": \"\\u21AB\",\n      \"looparrowright\": \"\\u21AC\",\n      \"lopar\": \"\\u2985\",\n      \"Lopf\": \"\\uD835\\uDD43\",\n      \"lopf\": \"\\uD835\\uDD5D\",\n      \"loplus\": \"\\u2A2D\",\n      \"lotimes\": \"\\u2A34\",\n      \"lowast\": \"\\u2217\",\n      \"lowbar\": \"_\",\n      \"LowerLeftArrow\": \"\\u2199\",\n      \"LowerRightArrow\": \"\\u2198\",\n      \"loz\": \"\\u25CA\",\n      \"lozenge\": \"\\u25CA\",\n      \"lozf\": \"\\u29EB\",\n      \"lpar\": \"(\",\n      \"lparlt\": \"\\u2993\",\n      \"lrarr\": \"\\u21C6\",\n      \"lrcorner\": \"\\u231F\",\n      \"lrhar\": \"\\u21CB\",\n      \"lrhard\": \"\\u296D\",\n      \"lrm\": \"\\u200E\",\n      \"lrtri\": \"\\u22BF\",\n      \"lsaquo\": \"\\u2039\",\n      \"Lscr\": \"\\u2112\",\n      \"lscr\": \"\\uD835\\uDCC1\",\n      \"Lsh\": \"\\u21B0\",\n      \"lsh\": \"\\u21B0\",\n      \"lsim\": \"\\u2272\",\n      \"lsime\": \"\\u2A8D\",\n      \"lsimg\": \"\\u2A8F\",\n      \"lsqb\": \"[\",\n      \"lsquo\": \"\\u2018\",\n      \"lsquor\": \"\\u201A\",\n      \"Lstrok\": \"\\u0141\",\n      \"lstrok\": \"\\u0142\",\n      \"LT\": \"<\",\n      \"Lt\": \"\\u226A\",\n      \"lt\": \"<\",\n      \"ltcc\": \"\\u2AA6\",\n      \"ltcir\": \"\\u2A79\",\n      \"ltdot\": \"\\u22D6\",\n      \"lthree\": \"\\u22CB\",\n      \"ltimes\": \"\\u22C9\",\n      \"ltlarr\": \"\\u2976\",\n      \"ltquest\": \"\\u2A7B\",\n      \"ltri\": \"\\u25C3\",\n      \"ltrie\": \"\\u22B4\",\n      \"ltrif\": \"\\u25C2\",\n      \"ltrPar\": \"\\u2996\",\n      \"lurdshar\": \"\\u294A\",\n      \"luruhar\": \"\\u2966\",\n      \"lvertneqq\": \"\\u2268\\uFE00\",\n      \"lvnE\": \"\\u2268\\uFE00\",\n      \"macr\": \"\\xAF\",\n      \"male\": \"\\u2642\",\n      \"malt\": \"\\u2720\",\n      \"maltese\": \"\\u2720\",\n      \"Map\": \"\\u2905\",\n      \"map\": \"\\u21A6\",\n      \"mapsto\": \"\\u21A6\",\n      \"mapstodown\": \"\\u21A7\",\n      \"mapstoleft\": \"\\u21A4\",\n      \"mapstoup\": \"\\u21A5\",\n      \"marker\": \"\\u25AE\",\n      \"mcomma\": \"\\u2A29\",\n      \"Mcy\": \"\\u041C\",\n      \"mcy\": \"\\u043C\",\n      \"mdash\": \"\\u2014\",\n      \"mDDot\": \"\\u223A\",\n      \"measuredangle\": \"\\u2221\",\n      \"MediumSpace\": \"\\u205F\",\n      \"Mellintrf\": \"\\u2133\",\n      \"Mfr\": \"\\uD835\\uDD10\",\n      \"mfr\": \"\\uD835\\uDD2A\",\n      \"mho\": \"\\u2127\",\n      \"micro\": \"\\xB5\",\n      \"mid\": \"\\u2223\",\n      \"midast\": \"*\",\n      \"midcir\": \"\\u2AF0\",\n      \"middot\": \"\\xB7\",\n      \"minus\": \"\\u2212\",\n      \"minusb\": \"\\u229F\",\n      \"minusd\": \"\\u2238\",\n      \"minusdu\": \"\\u2A2A\",\n      \"MinusPlus\": \"\\u2213\",\n      \"mlcp\": \"\\u2ADB\",\n      \"mldr\": \"\\u2026\",\n      \"mnplus\": \"\\u2213\",\n      \"models\": \"\\u22A7\",\n      \"Mopf\": \"\\uD835\\uDD44\",\n      \"mopf\": \"\\uD835\\uDD5E\",\n      \"mp\": \"\\u2213\",\n      \"Mscr\": \"\\u2133\",\n      \"mscr\": \"\\uD835\\uDCC2\",\n      \"mstpos\": \"\\u223E\",\n      \"Mu\": \"\\u039C\",\n      \"mu\": \"\\u03BC\",\n      \"multimap\": \"\\u22B8\",\n      \"mumap\": \"\\u22B8\",\n      \"nabla\": \"\\u2207\",\n      \"Nacute\": \"\\u0143\",\n      \"nacute\": \"\\u0144\",\n      \"nang\": \"\\u2220\\u20D2\",\n      \"nap\": \"\\u2249\",\n      \"napE\": \"\\u2A70\\u0338\",\n      \"napid\": \"\\u224B\\u0338\",\n      \"napos\": \"\\u0149\",\n      \"napprox\": \"\\u2249\",\n      \"natur\": \"\\u266E\",\n      \"natural\": \"\\u266E\",\n      \"naturals\": \"\\u2115\",\n      \"nbsp\": \"\\xA0\",\n      \"nbump\": \"\\u224E\\u0338\",\n      \"nbumpe\": \"\\u224F\\u0338\",\n      \"ncap\": \"\\u2A43\",\n      \"Ncaron\": \"\\u0147\",\n      \"ncaron\": \"\\u0148\",\n      \"Ncedil\": \"\\u0145\",\n      \"ncedil\": \"\\u0146\",\n      \"ncong\": \"\\u2247\",\n      \"ncongdot\": \"\\u2A6D\\u0338\",\n      \"ncup\": \"\\u2A42\",\n      \"Ncy\": \"\\u041D\",\n      \"ncy\": \"\\u043D\",\n      \"ndash\": \"\\u2013\",\n      \"ne\": \"\\u2260\",\n      \"nearhk\": \"\\u2924\",\n      \"neArr\": \"\\u21D7\",\n      \"nearr\": \"\\u2197\",\n      \"nearrow\": \"\\u2197\",\n      \"nedot\": \"\\u2250\\u0338\",\n      \"NegativeMediumSpace\": \"\\u200B\",\n      \"NegativeThickSpace\": \"\\u200B\",\n      \"NegativeThinSpace\": \"\\u200B\",\n      \"NegativeVeryThinSpace\": \"\\u200B\",\n      \"nequiv\": \"\\u2262\",\n      \"nesear\": \"\\u2928\",\n      \"nesim\": \"\\u2242\\u0338\",\n      \"NestedGreaterGreater\": \"\\u226B\",\n      \"NestedLessLess\": \"\\u226A\",\n      \"NewLine\": \"\\n\",\n      \"nexist\": \"\\u2204\",\n      \"nexists\": \"\\u2204\",\n      \"Nfr\": \"\\uD835\\uDD11\",\n      \"nfr\": \"\\uD835\\uDD2B\",\n      \"ngE\": \"\\u2267\\u0338\",\n      \"nge\": \"\\u2271\",\n      \"ngeq\": \"\\u2271\",\n      \"ngeqq\": \"\\u2267\\u0338\",\n      \"ngeqslant\": \"\\u2A7E\\u0338\",\n      \"nges\": \"\\u2A7E\\u0338\",\n      \"nGg\": \"\\u22D9\\u0338\",\n      \"ngsim\": \"\\u2275\",\n      \"nGt\": \"\\u226B\\u20D2\",\n      \"ngt\": \"\\u226F\",\n      \"ngtr\": \"\\u226F\",\n      \"nGtv\": \"\\u226B\\u0338\",\n      \"nhArr\": \"\\u21CE\",\n      \"nharr\": \"\\u21AE\",\n      \"nhpar\": \"\\u2AF2\",\n      \"ni\": \"\\u220B\",\n      \"nis\": \"\\u22FC\",\n      \"nisd\": \"\\u22FA\",\n      \"niv\": \"\\u220B\",\n      \"NJcy\": \"\\u040A\",\n      \"njcy\": \"\\u045A\",\n      \"nlArr\": \"\\u21CD\",\n      \"nlarr\": \"\\u219A\",\n      \"nldr\": \"\\u2025\",\n      \"nlE\": \"\\u2266\\u0338\",\n      \"nle\": \"\\u2270\",\n      \"nLeftarrow\": \"\\u21CD\",\n      \"nleftarrow\": \"\\u219A\",\n      \"nLeftrightarrow\": \"\\u21CE\",\n      \"nleftrightarrow\": \"\\u21AE\",\n      \"nleq\": \"\\u2270\",\n      \"nleqq\": \"\\u2266\\u0338\",\n      \"nleqslant\": \"\\u2A7D\\u0338\",\n      \"nles\": \"\\u2A7D\\u0338\",\n      \"nless\": \"\\u226E\",\n      \"nLl\": \"\\u22D8\\u0338\",\n      \"nlsim\": \"\\u2274\",\n      \"nLt\": \"\\u226A\\u20D2\",\n      \"nlt\": \"\\u226E\",\n      \"nltri\": \"\\u22EA\",\n      \"nltrie\": \"\\u22EC\",\n      \"nLtv\": \"\\u226A\\u0338\",\n      \"nmid\": \"\\u2224\",\n      \"NoBreak\": \"\\u2060\",\n      \"NonBreakingSpace\": \"\\xA0\",\n      \"Nopf\": \"\\u2115\",\n      \"nopf\": \"\\uD835\\uDD5F\",\n      \"Not\": \"\\u2AEC\",\n      \"not\": \"\\xAC\",\n      \"NotCongruent\": \"\\u2262\",\n      \"NotCupCap\": \"\\u226D\",\n      \"NotDoubleVerticalBar\": \"\\u2226\",\n      \"NotElement\": \"\\u2209\",\n      \"NotEqual\": \"\\u2260\",\n      \"NotEqualTilde\": \"\\u2242\\u0338\",\n      \"NotExists\": \"\\u2204\",\n      \"NotGreater\": \"\\u226F\",\n      \"NotGreaterEqual\": \"\\u2271\",\n      \"NotGreaterFullEqual\": \"\\u2267\\u0338\",\n      \"NotGreaterGreater\": \"\\u226B\\u0338\",\n      \"NotGreaterLess\": \"\\u2279\",\n      \"NotGreaterSlantEqual\": \"\\u2A7E\\u0338\",\n      \"NotGreaterTilde\": \"\\u2275\",\n      \"NotHumpDownHump\": \"\\u224E\\u0338\",\n      \"NotHumpEqual\": \"\\u224F\\u0338\",\n      \"notin\": \"\\u2209\",\n      \"notindot\": \"\\u22F5\\u0338\",\n      \"notinE\": \"\\u22F9\\u0338\",\n      \"notinva\": \"\\u2209\",\n      \"notinvb\": \"\\u22F7\",\n      \"notinvc\": \"\\u22F6\",\n      \"NotLeftTriangle\": \"\\u22EA\",\n      \"NotLeftTriangleBar\": \"\\u29CF\\u0338\",\n      \"NotLeftTriangleEqual\": \"\\u22EC\",\n      \"NotLess\": \"\\u226E\",\n      \"NotLessEqual\": \"\\u2270\",\n      \"NotLessGreater\": \"\\u2278\",\n      \"NotLessLess\": \"\\u226A\\u0338\",\n      \"NotLessSlantEqual\": \"\\u2A7D\\u0338\",\n      \"NotLessTilde\": \"\\u2274\",\n      \"NotNestedGreaterGreater\": \"\\u2AA2\\u0338\",\n      \"NotNestedLessLess\": \"\\u2AA1\\u0338\",\n      \"notni\": \"\\u220C\",\n      \"notniva\": \"\\u220C\",\n      \"notnivb\": \"\\u22FE\",\n      \"notnivc\": \"\\u22FD\",\n      \"NotPrecedes\": \"\\u2280\",\n      \"NotPrecedesEqual\": \"\\u2AAF\\u0338\",\n      \"NotPrecedesSlantEqual\": \"\\u22E0\",\n      \"NotReverseElement\": \"\\u220C\",\n      \"NotRightTriangle\": \"\\u22EB\",\n      \"NotRightTriangleBar\": \"\\u29D0\\u0338\",\n      \"NotRightTriangleEqual\": \"\\u22ED\",\n      \"NotSquareSubset\": \"\\u228F\\u0338\",\n      \"NotSquareSubsetEqual\": \"\\u22E2\",\n      \"NotSquareSuperset\": \"\\u2290\\u0338\",\n      \"NotSquareSupersetEqual\": \"\\u22E3\",\n      \"NotSubset\": \"\\u2282\\u20D2\",\n      \"NotSubsetEqual\": \"\\u2288\",\n      \"NotSucceeds\": \"\\u2281\",\n      \"NotSucceedsEqual\": \"\\u2AB0\\u0338\",\n      \"NotSucceedsSlantEqual\": \"\\u22E1\",\n      \"NotSucceedsTilde\": \"\\u227F\\u0338\",\n      \"NotSuperset\": \"\\u2283\\u20D2\",\n      \"NotSupersetEqual\": \"\\u2289\",\n      \"NotTilde\": \"\\u2241\",\n      \"NotTildeEqual\": \"\\u2244\",\n      \"NotTildeFullEqual\": \"\\u2247\",\n      \"NotTildeTilde\": \"\\u2249\",\n      \"NotVerticalBar\": \"\\u2224\",\n      \"npar\": \"\\u2226\",\n      \"nparallel\": \"\\u2226\",\n      \"nparsl\": \"\\u2AFD\\u20E5\",\n      \"npart\": \"\\u2202\\u0338\",\n      \"npolint\": \"\\u2A14\",\n      \"npr\": \"\\u2280\",\n      \"nprcue\": \"\\u22E0\",\n      \"npre\": \"\\u2AAF\\u0338\",\n      \"nprec\": \"\\u2280\",\n      \"npreceq\": \"\\u2AAF\\u0338\",\n      \"nrArr\": \"\\u21CF\",\n      \"nrarr\": \"\\u219B\",\n      \"nrarrc\": \"\\u2933\\u0338\",\n      \"nrarrw\": \"\\u219D\\u0338\",\n      \"nRightarrow\": \"\\u21CF\",\n      \"nrightarrow\": \"\\u219B\",\n      \"nrtri\": \"\\u22EB\",\n      \"nrtrie\": \"\\u22ED\",\n      \"nsc\": \"\\u2281\",\n      \"nsccue\": \"\\u22E1\",\n      \"nsce\": \"\\u2AB0\\u0338\",\n      \"Nscr\": \"\\uD835\\uDCA9\",\n      \"nscr\": \"\\uD835\\uDCC3\",\n      \"nshortmid\": \"\\u2224\",\n      \"nshortparallel\": \"\\u2226\",\n      \"nsim\": \"\\u2241\",\n      \"nsime\": \"\\u2244\",\n      \"nsimeq\": \"\\u2244\",\n      \"nsmid\": \"\\u2224\",\n      \"nspar\": \"\\u2226\",\n      \"nsqsube\": \"\\u22E2\",\n      \"nsqsupe\": \"\\u22E3\",\n      \"nsub\": \"\\u2284\",\n      \"nsubE\": \"\\u2AC5\\u0338\",\n      \"nsube\": \"\\u2288\",\n      \"nsubset\": \"\\u2282\\u20D2\",\n      \"nsubseteq\": \"\\u2288\",\n      \"nsubseteqq\": \"\\u2AC5\\u0338\",\n      \"nsucc\": \"\\u2281\",\n      \"nsucceq\": \"\\u2AB0\\u0338\",\n      \"nsup\": \"\\u2285\",\n      \"nsupE\": \"\\u2AC6\\u0338\",\n      \"nsupe\": \"\\u2289\",\n      \"nsupset\": \"\\u2283\\u20D2\",\n      \"nsupseteq\": \"\\u2289\",\n      \"nsupseteqq\": \"\\u2AC6\\u0338\",\n      \"ntgl\": \"\\u2279\",\n      \"Ntilde\": \"\\xD1\",\n      \"ntilde\": \"\\xF1\",\n      \"ntlg\": \"\\u2278\",\n      \"ntriangleleft\": \"\\u22EA\",\n      \"ntrianglelefteq\": \"\\u22EC\",\n      \"ntriangleright\": \"\\u22EB\",\n      \"ntrianglerighteq\": \"\\u22ED\",\n      \"Nu\": \"\\u039D\",\n      \"nu\": \"\\u03BD\",\n      \"num\": \"#\",\n      \"numero\": \"\\u2116\",\n      \"numsp\": \"\\u2007\",\n      \"nvap\": \"\\u224D\\u20D2\",\n      \"nVDash\": \"\\u22AF\",\n      \"nVdash\": \"\\u22AE\",\n      \"nvDash\": \"\\u22AD\",\n      \"nvdash\": \"\\u22AC\",\n      \"nvge\": \"\\u2265\\u20D2\",\n      \"nvgt\": \">\\u20D2\",\n      \"nvHarr\": \"\\u2904\",\n      \"nvinfin\": \"\\u29DE\",\n      \"nvlArr\": \"\\u2902\",\n      \"nvle\": \"\\u2264\\u20D2\",\n      \"nvlt\": \"<\\u20D2\",\n      \"nvltrie\": \"\\u22B4\\u20D2\",\n      \"nvrArr\": \"\\u2903\",\n      \"nvrtrie\": \"\\u22B5\\u20D2\",\n      \"nvsim\": \"\\u223C\\u20D2\",\n      \"nwarhk\": \"\\u2923\",\n      \"nwArr\": \"\\u21D6\",\n      \"nwarr\": \"\\u2196\",\n      \"nwarrow\": \"\\u2196\",\n      \"nwnear\": \"\\u2927\",\n      \"Oacute\": \"\\xD3\",\n      \"oacute\": \"\\xF3\",\n      \"oast\": \"\\u229B\",\n      \"ocir\": \"\\u229A\",\n      \"Ocirc\": \"\\xD4\",\n      \"ocirc\": \"\\xF4\",\n      \"Ocy\": \"\\u041E\",\n      \"ocy\": \"\\u043E\",\n      \"odash\": \"\\u229D\",\n      \"Odblac\": \"\\u0150\",\n      \"odblac\": \"\\u0151\",\n      \"odiv\": \"\\u2A38\",\n      \"odot\": \"\\u2299\",\n      \"odsold\": \"\\u29BC\",\n      \"OElig\": \"\\u0152\",\n      \"oelig\": \"\\u0153\",\n      \"ofcir\": \"\\u29BF\",\n      \"Ofr\": \"\\uD835\\uDD12\",\n      \"ofr\": \"\\uD835\\uDD2C\",\n      \"ogon\": \"\\u02DB\",\n      \"Ograve\": \"\\xD2\",\n      \"ograve\": \"\\xF2\",\n      \"ogt\": \"\\u29C1\",\n      \"ohbar\": \"\\u29B5\",\n      \"ohm\": \"\\u03A9\",\n      \"oint\": \"\\u222E\",\n      \"olarr\": \"\\u21BA\",\n      \"olcir\": \"\\u29BE\",\n      \"olcross\": \"\\u29BB\",\n      \"oline\": \"\\u203E\",\n      \"olt\": \"\\u29C0\",\n      \"Omacr\": \"\\u014C\",\n      \"omacr\": \"\\u014D\",\n      \"Omega\": \"\\u03A9\",\n      \"omega\": \"\\u03C9\",\n      \"Omicron\": \"\\u039F\",\n      \"omicron\": \"\\u03BF\",\n      \"omid\": \"\\u29B6\",\n      \"ominus\": \"\\u2296\",\n      \"Oopf\": \"\\uD835\\uDD46\",\n      \"oopf\": \"\\uD835\\uDD60\",\n      \"opar\": \"\\u29B7\",\n      \"OpenCurlyDoubleQuote\": \"\\u201C\",\n      \"OpenCurlyQuote\": \"\\u2018\",\n      \"operp\": \"\\u29B9\",\n      \"oplus\": \"\\u2295\",\n      \"Or\": \"\\u2A54\",\n      \"or\": \"\\u2228\",\n      \"orarr\": \"\\u21BB\",\n      \"ord\": \"\\u2A5D\",\n      \"order\": \"\\u2134\",\n      \"orderof\": \"\\u2134\",\n      \"ordf\": \"\\xAA\",\n      \"ordm\": \"\\xBA\",\n      \"origof\": \"\\u22B6\",\n      \"oror\": \"\\u2A56\",\n      \"orslope\": \"\\u2A57\",\n      \"orv\": \"\\u2A5B\",\n      \"oS\": \"\\u24C8\",\n      \"Oscr\": \"\\uD835\\uDCAA\",\n      \"oscr\": \"\\u2134\",\n      \"Oslash\": \"\\xD8\",\n      \"oslash\": \"\\xF8\",\n      \"osol\": \"\\u2298\",\n      \"Otilde\": \"\\xD5\",\n      \"otilde\": \"\\xF5\",\n      \"Otimes\": \"\\u2A37\",\n      \"otimes\": \"\\u2297\",\n      \"otimesas\": \"\\u2A36\",\n      \"Ouml\": \"\\xD6\",\n      \"ouml\": \"\\xF6\",\n      \"ovbar\": \"\\u233D\",\n      \"OverBar\": \"\\u203E\",\n      \"OverBrace\": \"\\u23DE\",\n      \"OverBracket\": \"\\u23B4\",\n      \"OverParenthesis\": \"\\u23DC\",\n      \"par\": \"\\u2225\",\n      \"para\": \"\\xB6\",\n      \"parallel\": \"\\u2225\",\n      \"parsim\": \"\\u2AF3\",\n      \"parsl\": \"\\u2AFD\",\n      \"part\": \"\\u2202\",\n      \"PartialD\": \"\\u2202\",\n      \"Pcy\": \"\\u041F\",\n      \"pcy\": \"\\u043F\",\n      \"percnt\": \"%\",\n      \"period\": \".\",\n      \"permil\": \"\\u2030\",\n      \"perp\": \"\\u22A5\",\n      \"pertenk\": \"\\u2031\",\n      \"Pfr\": \"\\uD835\\uDD13\",\n      \"pfr\": \"\\uD835\\uDD2D\",\n      \"Phi\": \"\\u03A6\",\n      \"phi\": \"\\u03C6\",\n      \"phiv\": \"\\u03D5\",\n      \"phmmat\": \"\\u2133\",\n      \"phone\": \"\\u260E\",\n      \"Pi\": \"\\u03A0\",\n      \"pi\": \"\\u03C0\",\n      \"pitchfork\": \"\\u22D4\",\n      \"piv\": \"\\u03D6\",\n      \"planck\": \"\\u210F\",\n      \"planckh\": \"\\u210E\",\n      \"plankv\": \"\\u210F\",\n      \"plus\": \"+\",\n      \"plusacir\": \"\\u2A23\",\n      \"plusb\": \"\\u229E\",\n      \"pluscir\": \"\\u2A22\",\n      \"plusdo\": \"\\u2214\",\n      \"plusdu\": \"\\u2A25\",\n      \"pluse\": \"\\u2A72\",\n      \"PlusMinus\": \"\\xB1\",\n      \"plusmn\": \"\\xB1\",\n      \"plussim\": \"\\u2A26\",\n      \"plustwo\": \"\\u2A27\",\n      \"pm\": \"\\xB1\",\n      \"Poincareplane\": \"\\u210C\",\n      \"pointint\": \"\\u2A15\",\n      \"Popf\": \"\\u2119\",\n      \"popf\": \"\\uD835\\uDD61\",\n      \"pound\": \"\\xA3\",\n      \"Pr\": \"\\u2ABB\",\n      \"pr\": \"\\u227A\",\n      \"prap\": \"\\u2AB7\",\n      \"prcue\": \"\\u227C\",\n      \"prE\": \"\\u2AB3\",\n      \"pre\": \"\\u2AAF\",\n      \"prec\": \"\\u227A\",\n      \"precapprox\": \"\\u2AB7\",\n      \"preccurlyeq\": \"\\u227C\",\n      \"Precedes\": \"\\u227A\",\n      \"PrecedesEqual\": \"\\u2AAF\",\n      \"PrecedesSlantEqual\": \"\\u227C\",\n      \"PrecedesTilde\": \"\\u227E\",\n      \"preceq\": \"\\u2AAF\",\n      \"precnapprox\": \"\\u2AB9\",\n      \"precneqq\": \"\\u2AB5\",\n      \"precnsim\": \"\\u22E8\",\n      \"precsim\": \"\\u227E\",\n      \"Prime\": \"\\u2033\",\n      \"prime\": \"\\u2032\",\n      \"primes\": \"\\u2119\",\n      \"prnap\": \"\\u2AB9\",\n      \"prnE\": \"\\u2AB5\",\n      \"prnsim\": \"\\u22E8\",\n      \"prod\": \"\\u220F\",\n      \"Product\": \"\\u220F\",\n      \"profalar\": \"\\u232E\",\n      \"profline\": \"\\u2312\",\n      \"profsurf\": \"\\u2313\",\n      \"prop\": \"\\u221D\",\n      \"Proportion\": \"\\u2237\",\n      \"Proportional\": \"\\u221D\",\n      \"propto\": \"\\u221D\",\n      \"prsim\": \"\\u227E\",\n      \"prurel\": \"\\u22B0\",\n      \"Pscr\": \"\\uD835\\uDCAB\",\n      \"pscr\": \"\\uD835\\uDCC5\",\n      \"Psi\": \"\\u03A8\",\n      \"psi\": \"\\u03C8\",\n      \"puncsp\": \"\\u2008\",\n      \"Qfr\": \"\\uD835\\uDD14\",\n      \"qfr\": \"\\uD835\\uDD2E\",\n      \"qint\": \"\\u2A0C\",\n      \"Qopf\": \"\\u211A\",\n      \"qopf\": \"\\uD835\\uDD62\",\n      \"qprime\": \"\\u2057\",\n      \"Qscr\": \"\\uD835\\uDCAC\",\n      \"qscr\": \"\\uD835\\uDCC6\",\n      \"quaternions\": \"\\u210D\",\n      \"quatint\": \"\\u2A16\",\n      \"quest\": \"?\",\n      \"questeq\": \"\\u225F\",\n      \"QUOT\": \"\\\"\",\n      \"quot\": \"\\\"\",\n      \"rAarr\": \"\\u21DB\",\n      \"race\": \"\\u223D\\u0331\",\n      \"Racute\": \"\\u0154\",\n      \"racute\": \"\\u0155\",\n      \"radic\": \"\\u221A\",\n      \"raemptyv\": \"\\u29B3\",\n      \"Rang\": \"\\u27EB\",\n      \"rang\": \"\\u27E9\",\n      \"rangd\": \"\\u2992\",\n      \"range\": \"\\u29A5\",\n      \"rangle\": \"\\u27E9\",\n      \"raquo\": \"\\xBB\",\n      \"Rarr\": \"\\u21A0\",\n      \"rArr\": \"\\u21D2\",\n      \"rarr\": \"\\u2192\",\n      \"rarrap\": \"\\u2975\",\n      \"rarrb\": \"\\u21E5\",\n      \"rarrbfs\": \"\\u2920\",\n      \"rarrc\": \"\\u2933\",\n      \"rarrfs\": \"\\u291E\",\n      \"rarrhk\": \"\\u21AA\",\n      \"rarrlp\": \"\\u21AC\",\n      \"rarrpl\": \"\\u2945\",\n      \"rarrsim\": \"\\u2974\",\n      \"Rarrtl\": \"\\u2916\",\n      \"rarrtl\": \"\\u21A3\",\n      \"rarrw\": \"\\u219D\",\n      \"rAtail\": \"\\u291C\",\n      \"ratail\": \"\\u291A\",\n      \"ratio\": \"\\u2236\",\n      \"rationals\": \"\\u211A\",\n      \"RBarr\": \"\\u2910\",\n      \"rBarr\": \"\\u290F\",\n      \"rbarr\": \"\\u290D\",\n      \"rbbrk\": \"\\u2773\",\n      \"rbrace\": \"}\",\n      \"rbrack\": \"]\",\n      \"rbrke\": \"\\u298C\",\n      \"rbrksld\": \"\\u298E\",\n      \"rbrkslu\": \"\\u2990\",\n      \"Rcaron\": \"\\u0158\",\n      \"rcaron\": \"\\u0159\",\n      \"Rcedil\": \"\\u0156\",\n      \"rcedil\": \"\\u0157\",\n      \"rceil\": \"\\u2309\",\n      \"rcub\": \"}\",\n      \"Rcy\": \"\\u0420\",\n      \"rcy\": \"\\u0440\",\n      \"rdca\": \"\\u2937\",\n      \"rdldhar\": \"\\u2969\",\n      \"rdquo\": \"\\u201D\",\n      \"rdquor\": \"\\u201D\",\n      \"rdsh\": \"\\u21B3\",\n      \"Re\": \"\\u211C\",\n      \"real\": \"\\u211C\",\n      \"realine\": \"\\u211B\",\n      \"realpart\": \"\\u211C\",\n      \"reals\": \"\\u211D\",\n      \"rect\": \"\\u25AD\",\n      \"REG\": \"\\xAE\",\n      \"reg\": \"\\xAE\",\n      \"ReverseElement\": \"\\u220B\",\n      \"ReverseEquilibrium\": \"\\u21CB\",\n      \"ReverseUpEquilibrium\": \"\\u296F\",\n      \"rfisht\": \"\\u297D\",\n      \"rfloor\": \"\\u230B\",\n      \"Rfr\": \"\\u211C\",\n      \"rfr\": \"\\uD835\\uDD2F\",\n      \"rHar\": \"\\u2964\",\n      \"rhard\": \"\\u21C1\",\n      \"rharu\": \"\\u21C0\",\n      \"rharul\": \"\\u296C\",\n      \"Rho\": \"\\u03A1\",\n      \"rho\": \"\\u03C1\",\n      \"rhov\": \"\\u03F1\",\n      \"RightAngleBracket\": \"\\u27E9\",\n      \"RightArrow\": \"\\u2192\",\n      \"Rightarrow\": \"\\u21D2\",\n      \"rightarrow\": \"\\u2192\",\n      \"RightArrowBar\": \"\\u21E5\",\n      \"RightArrowLeftArrow\": \"\\u21C4\",\n      \"rightarrowtail\": \"\\u21A3\",\n      \"RightCeiling\": \"\\u2309\",\n      \"RightDoubleBracket\": \"\\u27E7\",\n      \"RightDownTeeVector\": \"\\u295D\",\n      \"RightDownVector\": \"\\u21C2\",\n      \"RightDownVectorBar\": \"\\u2955\",\n      \"RightFloor\": \"\\u230B\",\n      \"rightharpoondown\": \"\\u21C1\",\n      \"rightharpoonup\": \"\\u21C0\",\n      \"rightleftarrows\": \"\\u21C4\",\n      \"rightleftharpoons\": \"\\u21CC\",\n      \"rightrightarrows\": \"\\u21C9\",\n      \"rightsquigarrow\": \"\\u219D\",\n      \"RightTee\": \"\\u22A2\",\n      \"RightTeeArrow\": \"\\u21A6\",\n      \"RightTeeVector\": \"\\u295B\",\n      \"rightthreetimes\": \"\\u22CC\",\n      \"RightTriangle\": \"\\u22B3\",\n      \"RightTriangleBar\": \"\\u29D0\",\n      \"RightTriangleEqual\": \"\\u22B5\",\n      \"RightUpDownVector\": \"\\u294F\",\n      \"RightUpTeeVector\": \"\\u295C\",\n      \"RightUpVector\": \"\\u21BE\",\n      \"RightUpVectorBar\": \"\\u2954\",\n      \"RightVector\": \"\\u21C0\",\n      \"RightVectorBar\": \"\\u2953\",\n      \"ring\": \"\\u02DA\",\n      \"risingdotseq\": \"\\u2253\",\n      \"rlarr\": \"\\u21C4\",\n      \"rlhar\": \"\\u21CC\",\n      \"rlm\": \"\\u200F\",\n      \"rmoust\": \"\\u23B1\",\n      \"rmoustache\": \"\\u23B1\",\n      \"rnmid\": \"\\u2AEE\",\n      \"roang\": \"\\u27ED\",\n      \"roarr\": \"\\u21FE\",\n      \"robrk\": \"\\u27E7\",\n      \"ropar\": \"\\u2986\",\n      \"Ropf\": \"\\u211D\",\n      \"ropf\": \"\\uD835\\uDD63\",\n      \"roplus\": \"\\u2A2E\",\n      \"rotimes\": \"\\u2A35\",\n      \"RoundImplies\": \"\\u2970\",\n      \"rpar\": \")\",\n      \"rpargt\": \"\\u2994\",\n      \"rppolint\": \"\\u2A12\",\n      \"rrarr\": \"\\u21C9\",\n      \"Rrightarrow\": \"\\u21DB\",\n      \"rsaquo\": \"\\u203A\",\n      \"Rscr\": \"\\u211B\",\n      \"rscr\": \"\\uD835\\uDCC7\",\n      \"Rsh\": \"\\u21B1\",\n      \"rsh\": \"\\u21B1\",\n      \"rsqb\": \"]\",\n      \"rsquo\": \"\\u2019\",\n      \"rsquor\": \"\\u2019\",\n      \"rthree\": \"\\u22CC\",\n      \"rtimes\": \"\\u22CA\",\n      \"rtri\": \"\\u25B9\",\n      \"rtrie\": \"\\u22B5\",\n      \"rtrif\": \"\\u25B8\",\n      \"rtriltri\": \"\\u29CE\",\n      \"RuleDelayed\": \"\\u29F4\",\n      \"ruluhar\": \"\\u2968\",\n      \"rx\": \"\\u211E\",\n      \"Sacute\": \"\\u015A\",\n      \"sacute\": \"\\u015B\",\n      \"sbquo\": \"\\u201A\",\n      \"Sc\": \"\\u2ABC\",\n      \"sc\": \"\\u227B\",\n      \"scap\": \"\\u2AB8\",\n      \"Scaron\": \"\\u0160\",\n      \"scaron\": \"\\u0161\",\n      \"sccue\": \"\\u227D\",\n      \"scE\": \"\\u2AB4\",\n      \"sce\": \"\\u2AB0\",\n      \"Scedil\": \"\\u015E\",\n      \"scedil\": \"\\u015F\",\n      \"Scirc\": \"\\u015C\",\n      \"scirc\": \"\\u015D\",\n      \"scnap\": \"\\u2ABA\",\n      \"scnE\": \"\\u2AB6\",\n      \"scnsim\": \"\\u22E9\",\n      \"scpolint\": \"\\u2A13\",\n      \"scsim\": \"\\u227F\",\n      \"Scy\": \"\\u0421\",\n      \"scy\": \"\\u0441\",\n      \"sdot\": \"\\u22C5\",\n      \"sdotb\": \"\\u22A1\",\n      \"sdote\": \"\\u2A66\",\n      \"searhk\": \"\\u2925\",\n      \"seArr\": \"\\u21D8\",\n      \"searr\": \"\\u2198\",\n      \"searrow\": \"\\u2198\",\n      \"sect\": \"\\xA7\",\n      \"semi\": \";\",\n      \"seswar\": \"\\u2929\",\n      \"setminus\": \"\\u2216\",\n      \"setmn\": \"\\u2216\",\n      \"sext\": \"\\u2736\",\n      \"Sfr\": \"\\uD835\\uDD16\",\n      \"sfr\": \"\\uD835\\uDD30\",\n      \"sfrown\": \"\\u2322\",\n      \"sharp\": \"\\u266F\",\n      \"SHCHcy\": \"\\u0429\",\n      \"shchcy\": \"\\u0449\",\n      \"SHcy\": \"\\u0428\",\n      \"shcy\": \"\\u0448\",\n      \"ShortDownArrow\": \"\\u2193\",\n      \"ShortLeftArrow\": \"\\u2190\",\n      \"shortmid\": \"\\u2223\",\n      \"shortparallel\": \"\\u2225\",\n      \"ShortRightArrow\": \"\\u2192\",\n      \"ShortUpArrow\": \"\\u2191\",\n      \"shy\": \"\\xAD\",\n      \"Sigma\": \"\\u03A3\",\n      \"sigma\": \"\\u03C3\",\n      \"sigmaf\": \"\\u03C2\",\n      \"sigmav\": \"\\u03C2\",\n      \"sim\": \"\\u223C\",\n      \"simdot\": \"\\u2A6A\",\n      \"sime\": \"\\u2243\",\n      \"simeq\": \"\\u2243\",\n      \"simg\": \"\\u2A9E\",\n      \"simgE\": \"\\u2AA0\",\n      \"siml\": \"\\u2A9D\",\n      \"simlE\": \"\\u2A9F\",\n      \"simne\": \"\\u2246\",\n      \"simplus\": \"\\u2A24\",\n      \"simrarr\": \"\\u2972\",\n      \"slarr\": \"\\u2190\",\n      \"SmallCircle\": \"\\u2218\",\n      \"smallsetminus\": \"\\u2216\",\n      \"smashp\": \"\\u2A33\",\n      \"smeparsl\": \"\\u29E4\",\n      \"smid\": \"\\u2223\",\n      \"smile\": \"\\u2323\",\n      \"smt\": \"\\u2AAA\",\n      \"smte\": \"\\u2AAC\",\n      \"smtes\": \"\\u2AAC\\uFE00\",\n      \"SOFTcy\": \"\\u042C\",\n      \"softcy\": \"\\u044C\",\n      \"sol\": \"/\",\n      \"solb\": \"\\u29C4\",\n      \"solbar\": \"\\u233F\",\n      \"Sopf\": \"\\uD835\\uDD4A\",\n      \"sopf\": \"\\uD835\\uDD64\",\n      \"spades\": \"\\u2660\",\n      \"spadesuit\": \"\\u2660\",\n      \"spar\": \"\\u2225\",\n      \"sqcap\": \"\\u2293\",\n      \"sqcaps\": \"\\u2293\\uFE00\",\n      \"sqcup\": \"\\u2294\",\n      \"sqcups\": \"\\u2294\\uFE00\",\n      \"Sqrt\": \"\\u221A\",\n      \"sqsub\": \"\\u228F\",\n      \"sqsube\": \"\\u2291\",\n      \"sqsubset\": \"\\u228F\",\n      \"sqsubseteq\": \"\\u2291\",\n      \"sqsup\": \"\\u2290\",\n      \"sqsupe\": \"\\u2292\",\n      \"sqsupset\": \"\\u2290\",\n      \"sqsupseteq\": \"\\u2292\",\n      \"squ\": \"\\u25A1\",\n      \"Square\": \"\\u25A1\",\n      \"square\": \"\\u25A1\",\n      \"SquareIntersection\": \"\\u2293\",\n      \"SquareSubset\": \"\\u228F\",\n      \"SquareSubsetEqual\": \"\\u2291\",\n      \"SquareSuperset\": \"\\u2290\",\n      \"SquareSupersetEqual\": \"\\u2292\",\n      \"SquareUnion\": \"\\u2294\",\n      \"squarf\": \"\\u25AA\",\n      \"squf\": \"\\u25AA\",\n      \"srarr\": \"\\u2192\",\n      \"Sscr\": \"\\uD835\\uDCAE\",\n      \"sscr\": \"\\uD835\\uDCC8\",\n      \"ssetmn\": \"\\u2216\",\n      \"ssmile\": \"\\u2323\",\n      \"sstarf\": \"\\u22C6\",\n      \"Star\": \"\\u22C6\",\n      \"star\": \"\\u2606\",\n      \"starf\": \"\\u2605\",\n      \"straightepsilon\": \"\\u03F5\",\n      \"straightphi\": \"\\u03D5\",\n      \"strns\": \"\\xAF\",\n      \"Sub\": \"\\u22D0\",\n      \"sub\": \"\\u2282\",\n      \"subdot\": \"\\u2ABD\",\n      \"subE\": \"\\u2AC5\",\n      \"sube\": \"\\u2286\",\n      \"subedot\": \"\\u2AC3\",\n      \"submult\": \"\\u2AC1\",\n      \"subnE\": \"\\u2ACB\",\n      \"subne\": \"\\u228A\",\n      \"subplus\": \"\\u2ABF\",\n      \"subrarr\": \"\\u2979\",\n      \"Subset\": \"\\u22D0\",\n      \"subset\": \"\\u2282\",\n      \"subseteq\": \"\\u2286\",\n      \"subseteqq\": \"\\u2AC5\",\n      \"SubsetEqual\": \"\\u2286\",\n      \"subsetneq\": \"\\u228A\",\n      \"subsetneqq\": \"\\u2ACB\",\n      \"subsim\": \"\\u2AC7\",\n      \"subsub\": \"\\u2AD5\",\n      \"subsup\": \"\\u2AD3\",\n      \"succ\": \"\\u227B\",\n      \"succapprox\": \"\\u2AB8\",\n      \"succcurlyeq\": \"\\u227D\",\n      \"Succeeds\": \"\\u227B\",\n      \"SucceedsEqual\": \"\\u2AB0\",\n      \"SucceedsSlantEqual\": \"\\u227D\",\n      \"SucceedsTilde\": \"\\u227F\",\n      \"succeq\": \"\\u2AB0\",\n      \"succnapprox\": \"\\u2ABA\",\n      \"succneqq\": \"\\u2AB6\",\n      \"succnsim\": \"\\u22E9\",\n      \"succsim\": \"\\u227F\",\n      \"SuchThat\": \"\\u220B\",\n      \"Sum\": \"\\u2211\",\n      \"sum\": \"\\u2211\",\n      \"sung\": \"\\u266A\",\n      \"Sup\": \"\\u22D1\",\n      \"sup\": \"\\u2283\",\n      \"sup1\": \"\\xB9\",\n      \"sup2\": \"\\xB2\",\n      \"sup3\": \"\\xB3\",\n      \"supdot\": \"\\u2ABE\",\n      \"supdsub\": \"\\u2AD8\",\n      \"supE\": \"\\u2AC6\",\n      \"supe\": \"\\u2287\",\n      \"supedot\": \"\\u2AC4\",\n      \"Superset\": \"\\u2283\",\n      \"SupersetEqual\": \"\\u2287\",\n      \"suphsol\": \"\\u27C9\",\n      \"suphsub\": \"\\u2AD7\",\n      \"suplarr\": \"\\u297B\",\n      \"supmult\": \"\\u2AC2\",\n      \"supnE\": \"\\u2ACC\",\n      \"supne\": \"\\u228B\",\n      \"supplus\": \"\\u2AC0\",\n      \"Supset\": \"\\u22D1\",\n      \"supset\": \"\\u2283\",\n      \"supseteq\": \"\\u2287\",\n      \"supseteqq\": \"\\u2AC6\",\n      \"supsetneq\": \"\\u228B\",\n      \"supsetneqq\": \"\\u2ACC\",\n      \"supsim\": \"\\u2AC8\",\n      \"supsub\": \"\\u2AD4\",\n      \"supsup\": \"\\u2AD6\",\n      \"swarhk\": \"\\u2926\",\n      \"swArr\": \"\\u21D9\",\n      \"swarr\": \"\\u2199\",\n      \"swarrow\": \"\\u2199\",\n      \"swnwar\": \"\\u292A\",\n      \"szlig\": \"\\xDF\",\n      \"Tab\": \"\\t\",\n      \"target\": \"\\u2316\",\n      \"Tau\": \"\\u03A4\",\n      \"tau\": \"\\u03C4\",\n      \"tbrk\": \"\\u23B4\",\n      \"Tcaron\": \"\\u0164\",\n      \"tcaron\": \"\\u0165\",\n      \"Tcedil\": \"\\u0162\",\n      \"tcedil\": \"\\u0163\",\n      \"Tcy\": \"\\u0422\",\n      \"tcy\": \"\\u0442\",\n      \"tdot\": \"\\u20DB\",\n      \"telrec\": \"\\u2315\",\n      \"Tfr\": \"\\uD835\\uDD17\",\n      \"tfr\": \"\\uD835\\uDD31\",\n      \"there4\": \"\\u2234\",\n      \"Therefore\": \"\\u2234\",\n      \"therefore\": \"\\u2234\",\n      \"Theta\": \"\\u0398\",\n      \"theta\": \"\\u03B8\",\n      \"thetasym\": \"\\u03D1\",\n      \"thetav\": \"\\u03D1\",\n      \"thickapprox\": \"\\u2248\",\n      \"thicksim\": \"\\u223C\",\n      \"ThickSpace\": \"\\u205F\\u200A\",\n      \"thinsp\": \"\\u2009\",\n      \"ThinSpace\": \"\\u2009\",\n      \"thkap\": \"\\u2248\",\n      \"thksim\": \"\\u223C\",\n      \"THORN\": \"\\xDE\",\n      \"thorn\": \"\\xFE\",\n      \"Tilde\": \"\\u223C\",\n      \"tilde\": \"\\u02DC\",\n      \"TildeEqual\": \"\\u2243\",\n      \"TildeFullEqual\": \"\\u2245\",\n      \"TildeTilde\": \"\\u2248\",\n      \"times\": \"\\xD7\",\n      \"timesb\": \"\\u22A0\",\n      \"timesbar\": \"\\u2A31\",\n      \"timesd\": \"\\u2A30\",\n      \"tint\": \"\\u222D\",\n      \"toea\": \"\\u2928\",\n      \"top\": \"\\u22A4\",\n      \"topbot\": \"\\u2336\",\n      \"topcir\": \"\\u2AF1\",\n      \"Topf\": \"\\uD835\\uDD4B\",\n      \"topf\": \"\\uD835\\uDD65\",\n      \"topfork\": \"\\u2ADA\",\n      \"tosa\": \"\\u2929\",\n      \"tprime\": \"\\u2034\",\n      \"TRADE\": \"\\u2122\",\n      \"trade\": \"\\u2122\",\n      \"triangle\": \"\\u25B5\",\n      \"triangledown\": \"\\u25BF\",\n      \"triangleleft\": \"\\u25C3\",\n      \"trianglelefteq\": \"\\u22B4\",\n      \"triangleq\": \"\\u225C\",\n      \"triangleright\": \"\\u25B9\",\n      \"trianglerighteq\": \"\\u22B5\",\n      \"tridot\": \"\\u25EC\",\n      \"trie\": \"\\u225C\",\n      \"triminus\": \"\\u2A3A\",\n      \"TripleDot\": \"\\u20DB\",\n      \"triplus\": \"\\u2A39\",\n      \"trisb\": \"\\u29CD\",\n      \"tritime\": \"\\u2A3B\",\n      \"trpezium\": \"\\u23E2\",\n      \"Tscr\": \"\\uD835\\uDCAF\",\n      \"tscr\": \"\\uD835\\uDCC9\",\n      \"TScy\": \"\\u0426\",\n      \"tscy\": \"\\u0446\",\n      \"TSHcy\": \"\\u040B\",\n      \"tshcy\": \"\\u045B\",\n      \"Tstrok\": \"\\u0166\",\n      \"tstrok\": \"\\u0167\",\n      \"twixt\": \"\\u226C\",\n      \"twoheadleftarrow\": \"\\u219E\",\n      \"twoheadrightarrow\": \"\\u21A0\",\n      \"Uacute\": \"\\xDA\",\n      \"uacute\": \"\\xFA\",\n      \"Uarr\": \"\\u219F\",\n      \"uArr\": \"\\u21D1\",\n      \"uarr\": \"\\u2191\",\n      \"Uarrocir\": \"\\u2949\",\n      \"Ubrcy\": \"\\u040E\",\n      \"ubrcy\": \"\\u045E\",\n      \"Ubreve\": \"\\u016C\",\n      \"ubreve\": \"\\u016D\",\n      \"Ucirc\": \"\\xDB\",\n      \"ucirc\": \"\\xFB\",\n      \"Ucy\": \"\\u0423\",\n      \"ucy\": \"\\u0443\",\n      \"udarr\": \"\\u21C5\",\n      \"Udblac\": \"\\u0170\",\n      \"udblac\": \"\\u0171\",\n      \"udhar\": \"\\u296E\",\n      \"ufisht\": \"\\u297E\",\n      \"Ufr\": \"\\uD835\\uDD18\",\n      \"ufr\": \"\\uD835\\uDD32\",\n      \"Ugrave\": \"\\xD9\",\n      \"ugrave\": \"\\xF9\",\n      \"uHar\": \"\\u2963\",\n      \"uharl\": \"\\u21BF\",\n      \"uharr\": \"\\u21BE\",\n      \"uhblk\": \"\\u2580\",\n      \"ulcorn\": \"\\u231C\",\n      \"ulcorner\": \"\\u231C\",\n      \"ulcrop\": \"\\u230F\",\n      \"ultri\": \"\\u25F8\",\n      \"Umacr\": \"\\u016A\",\n      \"umacr\": \"\\u016B\",\n      \"uml\": \"\\xA8\",\n      \"UnderBar\": \"_\",\n      \"UnderBrace\": \"\\u23DF\",\n      \"UnderBracket\": \"\\u23B5\",\n      \"UnderParenthesis\": \"\\u23DD\",\n      \"Union\": \"\\u22C3\",\n      \"UnionPlus\": \"\\u228E\",\n      \"Uogon\": \"\\u0172\",\n      \"uogon\": \"\\u0173\",\n      \"Uopf\": \"\\uD835\\uDD4C\",\n      \"uopf\": \"\\uD835\\uDD66\",\n      \"UpArrow\": \"\\u2191\",\n      \"Uparrow\": \"\\u21D1\",\n      \"uparrow\": \"\\u2191\",\n      \"UpArrowBar\": \"\\u2912\",\n      \"UpArrowDownArrow\": \"\\u21C5\",\n      \"UpDownArrow\": \"\\u2195\",\n      \"Updownarrow\": \"\\u21D5\",\n      \"updownarrow\": \"\\u2195\",\n      \"UpEquilibrium\": \"\\u296E\",\n      \"upharpoonleft\": \"\\u21BF\",\n      \"upharpoonright\": \"\\u21BE\",\n      \"uplus\": \"\\u228E\",\n      \"UpperLeftArrow\": \"\\u2196\",\n      \"UpperRightArrow\": \"\\u2197\",\n      \"Upsi\": \"\\u03D2\",\n      \"upsi\": \"\\u03C5\",\n      \"upsih\": \"\\u03D2\",\n      \"Upsilon\": \"\\u03A5\",\n      \"upsilon\": \"\\u03C5\",\n      \"UpTee\": \"\\u22A5\",\n      \"UpTeeArrow\": \"\\u21A5\",\n      \"upuparrows\": \"\\u21C8\",\n      \"urcorn\": \"\\u231D\",\n      \"urcorner\": \"\\u231D\",\n      \"urcrop\": \"\\u230E\",\n      \"Uring\": \"\\u016E\",\n      \"uring\": \"\\u016F\",\n      \"urtri\": \"\\u25F9\",\n      \"Uscr\": \"\\uD835\\uDCB0\",\n      \"uscr\": \"\\uD835\\uDCCA\",\n      \"utdot\": \"\\u22F0\",\n      \"Utilde\": \"\\u0168\",\n      \"utilde\": \"\\u0169\",\n      \"utri\": \"\\u25B5\",\n      \"utrif\": \"\\u25B4\",\n      \"uuarr\": \"\\u21C8\",\n      \"Uuml\": \"\\xDC\",\n      \"uuml\": \"\\xFC\",\n      \"uwangle\": \"\\u29A7\",\n      \"vangrt\": \"\\u299C\",\n      \"varepsilon\": \"\\u03F5\",\n      \"varkappa\": \"\\u03F0\",\n      \"varnothing\": \"\\u2205\",\n      \"varphi\": \"\\u03D5\",\n      \"varpi\": \"\\u03D6\",\n      \"varpropto\": \"\\u221D\",\n      \"vArr\": \"\\u21D5\",\n      \"varr\": \"\\u2195\",\n      \"varrho\": \"\\u03F1\",\n      \"varsigma\": \"\\u03C2\",\n      \"varsubsetneq\": \"\\u228A\\uFE00\",\n      \"varsubsetneqq\": \"\\u2ACB\\uFE00\",\n      \"varsupsetneq\": \"\\u228B\\uFE00\",\n      \"varsupsetneqq\": \"\\u2ACC\\uFE00\",\n      \"vartheta\": \"\\u03D1\",\n      \"vartriangleleft\": \"\\u22B2\",\n      \"vartriangleright\": \"\\u22B3\",\n      \"Vbar\": \"\\u2AEB\",\n      \"vBar\": \"\\u2AE8\",\n      \"vBarv\": \"\\u2AE9\",\n      \"Vcy\": \"\\u0412\",\n      \"vcy\": \"\\u0432\",\n      \"VDash\": \"\\u22AB\",\n      \"Vdash\": \"\\u22A9\",\n      \"vDash\": \"\\u22A8\",\n      \"vdash\": \"\\u22A2\",\n      \"Vdashl\": \"\\u2AE6\",\n      \"Vee\": \"\\u22C1\",\n      \"vee\": \"\\u2228\",\n      \"veebar\": \"\\u22BB\",\n      \"veeeq\": \"\\u225A\",\n      \"vellip\": \"\\u22EE\",\n      \"Verbar\": \"\\u2016\",\n      \"verbar\": \"|\",\n      \"Vert\": \"\\u2016\",\n      \"vert\": \"|\",\n      \"VerticalBar\": \"\\u2223\",\n      \"VerticalLine\": \"|\",\n      \"VerticalSeparator\": \"\\u2758\",\n      \"VerticalTilde\": \"\\u2240\",\n      \"VeryThinSpace\": \"\\u200A\",\n      \"Vfr\": \"\\uD835\\uDD19\",\n      \"vfr\": \"\\uD835\\uDD33\",\n      \"vltri\": \"\\u22B2\",\n      \"vnsub\": \"\\u2282\\u20D2\",\n      \"vnsup\": \"\\u2283\\u20D2\",\n      \"Vopf\": \"\\uD835\\uDD4D\",\n      \"vopf\": \"\\uD835\\uDD67\",\n      \"vprop\": \"\\u221D\",\n      \"vrtri\": \"\\u22B3\",\n      \"Vscr\": \"\\uD835\\uDCB1\",\n      \"vscr\": \"\\uD835\\uDCCB\",\n      \"vsubnE\": \"\\u2ACB\\uFE00\",\n      \"vsubne\": \"\\u228A\\uFE00\",\n      \"vsupnE\": \"\\u2ACC\\uFE00\",\n      \"vsupne\": \"\\u228B\\uFE00\",\n      \"Vvdash\": \"\\u22AA\",\n      \"vzigzag\": \"\\u299A\",\n      \"Wcirc\": \"\\u0174\",\n      \"wcirc\": \"\\u0175\",\n      \"wedbar\": \"\\u2A5F\",\n      \"Wedge\": \"\\u22C0\",\n      \"wedge\": \"\\u2227\",\n      \"wedgeq\": \"\\u2259\",\n      \"weierp\": \"\\u2118\",\n      \"Wfr\": \"\\uD835\\uDD1A\",\n      \"wfr\": \"\\uD835\\uDD34\",\n      \"Wopf\": \"\\uD835\\uDD4E\",\n      \"wopf\": \"\\uD835\\uDD68\",\n      \"wp\": \"\\u2118\",\n      \"wr\": \"\\u2240\",\n      \"wreath\": \"\\u2240\",\n      \"Wscr\": \"\\uD835\\uDCB2\",\n      \"wscr\": \"\\uD835\\uDCCC\",\n      \"xcap\": \"\\u22C2\",\n      \"xcirc\": \"\\u25EF\",\n      \"xcup\": \"\\u22C3\",\n      \"xdtri\": \"\\u25BD\",\n      \"Xfr\": \"\\uD835\\uDD1B\",\n      \"xfr\": \"\\uD835\\uDD35\",\n      \"xhArr\": \"\\u27FA\",\n      \"xharr\": \"\\u27F7\",\n      \"Xi\": \"\\u039E\",\n      \"xi\": \"\\u03BE\",\n      \"xlArr\": \"\\u27F8\",\n      \"xlarr\": \"\\u27F5\",\n      \"xmap\": \"\\u27FC\",\n      \"xnis\": \"\\u22FB\",\n      \"xodot\": \"\\u2A00\",\n      \"Xopf\": \"\\uD835\\uDD4F\",\n      \"xopf\": \"\\uD835\\uDD69\",\n      \"xoplus\": \"\\u2A01\",\n      \"xotime\": \"\\u2A02\",\n      \"xrArr\": \"\\u27F9\",\n      \"xrarr\": \"\\u27F6\",\n      \"Xscr\": \"\\uD835\\uDCB3\",\n      \"xscr\": \"\\uD835\\uDCCD\",\n      \"xsqcup\": \"\\u2A06\",\n      \"xuplus\": \"\\u2A04\",\n      \"xutri\": \"\\u25B3\",\n      \"xvee\": \"\\u22C1\",\n      \"xwedge\": \"\\u22C0\",\n      \"Yacute\": \"\\xDD\",\n      \"yacute\": \"\\xFD\",\n      \"YAcy\": \"\\u042F\",\n      \"yacy\": \"\\u044F\",\n      \"Ycirc\": \"\\u0176\",\n      \"ycirc\": \"\\u0177\",\n      \"Ycy\": \"\\u042B\",\n      \"ycy\": \"\\u044B\",\n      \"yen\": \"\\xA5\",\n      \"Yfr\": \"\\uD835\\uDD1C\",\n      \"yfr\": \"\\uD835\\uDD36\",\n      \"YIcy\": \"\\u0407\",\n      \"yicy\": \"\\u0457\",\n      \"Yopf\": \"\\uD835\\uDD50\",\n      \"yopf\": \"\\uD835\\uDD6A\",\n      \"Yscr\": \"\\uD835\\uDCB4\",\n      \"yscr\": \"\\uD835\\uDCCE\",\n      \"YUcy\": \"\\u042E\",\n      \"yucy\": \"\\u044E\",\n      \"Yuml\": \"\\u0178\",\n      \"yuml\": \"\\xFF\",\n      \"Zacute\": \"\\u0179\",\n      \"zacute\": \"\\u017A\",\n      \"Zcaron\": \"\\u017D\",\n      \"zcaron\": \"\\u017E\",\n      \"Zcy\": \"\\u0417\",\n      \"zcy\": \"\\u0437\",\n      \"Zdot\": \"\\u017B\",\n      \"zdot\": \"\\u017C\",\n      \"zeetrf\": \"\\u2128\",\n      \"ZeroWidthSpace\": \"\\u200B\",\n      \"Zeta\": \"\\u0396\",\n      \"zeta\": \"\\u03B6\",\n      \"Zfr\": \"\\u2128\",\n      \"zfr\": \"\\uD835\\uDD37\",\n      \"ZHcy\": \"\\u0416\",\n      \"zhcy\": \"\\u0436\",\n      \"zigrarr\": \"\\u21DD\",\n      \"Zopf\": \"\\u2124\",\n      \"zopf\": \"\\uD835\\uDD6B\",\n      \"Zscr\": \"\\uD835\\uDCB5\",\n      \"zscr\": \"\\uD835\\uDCCF\",\n      \"zwj\": \"\\u200D\",\n      \"zwnj\": \"\\u200C\"\n    };\n  }, {}], 10: [function (require, module, exports) {\n    // List of valid html blocks names, accorting to commonmark spec\n    // http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n    'use strict';\n\n    var html_blocks = {};\n\n    ['article', 'aside', 'button', 'blockquote', 'body', 'canvas', 'caption', 'col', 'colgroup', 'dd', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'iframe', 'li', 'map', 'object', 'ol', 'output', 'p', 'pre', 'progress', 'script', 'section', 'style', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'tr', 'thead', 'ul', 'video'].forEach(function (name) {\n      html_blocks[name] = true;\n    });\n\n    module.exports = html_blocks;\n  }, {}], 11: [function (require, module, exports) {\n    // Regexps to match html elements\n\n    'use strict';\n\n    function replace(regex, options) {\n      regex = regex.source;\n      options = options || '';\n\n      return function self(name, val) {\n        if (!name) {\n          return new RegExp(regex, options);\n        }\n        val = val.source || val;\n        regex = regex.replace(name, val);\n        return self;\n      };\n    }\n\n    var attr_name = /[a-zA-Z_:][a-zA-Z0-9:._-]*/;\n\n    var unquoted = /[^\"'=<>`\\x00-\\x20]+/;\n    var single_quoted = /'[^']*'/;\n    var double_quoted = /\"[^\"]*\"/;\n\n    /*eslint no-spaced-func:0*/\n    var attr_value = replace(/(?:unquoted|single_quoted|double_quoted)/)('unquoted', unquoted)('single_quoted', single_quoted)('double_quoted', double_quoted)();\n\n    var attribute = replace(/(?:\\s+attr_name(?:\\s*=\\s*attr_value)?)/)('attr_name', attr_name)('attr_value', attr_value)();\n\n    var open_tag = replace(/<[A-Za-z][A-Za-z0-9]*attribute*\\s*\\/?>/)('attribute', attribute)();\n\n    var close_tag = /<\\/[A-Za-z][A-Za-z0-9]*\\s*>/;\n    var comment = /<!--([^-]+|[-][^-]+)*-->/;\n    var processing = /<[?].*?[?]>/;\n    var declaration = /<![A-Z]+\\s+[^>]*>/;\n    var cdata = /<!\\[CDATA\\[([^\\]]+|\\][^\\]]|\\]\\][^>])*\\]\\]>/;\n\n    var HTML_TAG_RE = replace(/^(?:open_tag|close_tag|comment|processing|declaration|cdata)/)('open_tag', open_tag)('close_tag', close_tag)('comment', comment)('processing', processing)('declaration', declaration)('cdata', cdata)();\n\n    module.exports.HTML_TAG_RE = HTML_TAG_RE;\n  }, {}], 12: [function (require, module, exports) {\n    // List of valid url schemas, accorting to commonmark spec\n    // http://jgm.github.io/CommonMark/spec.html#autolinks\n\n    'use strict';\n\n    module.exports = ['coap', 'doi', 'javascript', 'aaa', 'aaas', 'about', 'acap', 'cap', 'cid', 'crid', 'data', 'dav', 'dict', 'dns', 'file', 'ftp', 'geo', 'go', 'gopher', 'h323', 'http', 'https', 'iax', 'icap', 'im', 'imap', 'info', 'ipp', 'iris', 'iris.beep', 'iris.xpc', 'iris.xpcs', 'iris.lwz', 'ldap', 'mailto', 'mid', 'msrp', 'msrps', 'mtqp', 'mupdate', 'news', 'nfs', 'ni', 'nih', 'nntp', 'opaquelocktoken', 'pop', 'pres', 'rtsp', 'service', 'session', 'shttp', 'sieve', 'sip', 'sips', 'sms', 'snmp', 'soap.beep', 'soap.beeps', 'tag', 'tel', 'telnet', 'tftp', 'thismessage', 'tn3270', 'tip', 'tv', 'urn', 'vemmi', 'ws', 'wss', 'xcon', 'xcon-userid', 'xmlrpc.beep', 'xmlrpc.beeps', 'xmpp', 'z39.50r', 'z39.50s', 'adiumxtra', 'afp', 'afs', 'aim', 'apt', 'attachment', 'aw', 'beshare', 'bitcoin', 'bolo', 'callto', 'chrome', 'chrome-extension', 'com-eventbrite-attendee', 'content', 'cvs', 'dlna-playsingle', 'dlna-playcontainer', 'dtn', 'dvb', 'ed2k', 'facetime', 'feed', 'finger', 'fish', 'gg', 'git', 'gizmoproject', 'gtalk', 'hcp', 'icon', 'ipn', 'irc', 'irc6', 'ircs', 'itms', 'jar', 'jms', 'keyparc', 'lastfm', 'ldaps', 'magnet', 'maps', 'market', 'message', 'mms', 'ms-help', 'msnim', 'mumble', 'mvn', 'notes', 'oid', 'palm', 'paparazzi', 'platform', 'proxy', 'psyc', 'query', 'res', 'resource', 'rmi', 'rsync', 'rtmp', 'secondlife', 'sftp', 'sgn', 'skype', 'smb', 'soldat', 'spotify', 'ssh', 'steam', 'svn', 'teamspeak', 'things', 'udp', 'unreal', 'ut2004', 'ventrilo', 'view-source', 'webcal', 'wtai', 'wyciwyg', 'xfire', 'xri', 'ymsgr'];\n  }, {}], 13: [function (require, module, exports) {\n    'use strict';\n\n    /**\n     * Utility functions\n     */\n\n    function typeOf(obj) {\n      return Object.prototype.toString.call(obj);\n    }\n\n    function isString(obj) {\n      return typeOf(obj) === '[object String]';\n    }\n\n    var hasOwn = Object.prototype.hasOwnProperty;\n\n    function has(object, key) {\n      return object ? hasOwn.call(object, key) : false;\n    }\n\n    // Extend objects\n    //\n    function assign(obj /*from1, from2, from3, ...*/) {\n      var sources = [].slice.call(arguments, 1);\n\n      sources.forEach(function (source) {\n        if (!source) {\n          return;\n        }\n\n        if ((typeof source === \"undefined\" ? \"undefined\" : _typeof(source)) !== 'object') {\n          throw new TypeError(source + 'must be object');\n        }\n\n        Object.keys(source).forEach(function (key) {\n          obj[key] = source[key];\n        });\n      });\n\n      return obj;\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////\n\n    var UNESCAPE_MD_RE = /\\\\([\\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n    function unescapeMd(str) {\n      if (str.indexOf('\\\\') < 0) {\n        return str;\n      }\n      return str.replace(UNESCAPE_MD_RE, '$1');\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////\n\n    function isValidEntityCode(c) {\n      /*eslint no-bitwise:0*/\n      // broken sequence\n      if (c >= 0xD800 && c <= 0xDFFF) {\n        return false;\n      }\n      // never used\n      if (c >= 0xFDD0 && c <= 0xFDEF) {\n        return false;\n      }\n      if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n        return false;\n      }\n      // control codes\n      if (c >= 0x00 && c <= 0x08) {\n        return false;\n      }\n      if (c === 0x0B) {\n        return false;\n      }\n      if (c >= 0x0E && c <= 0x1F) {\n        return false;\n      }\n      if (c >= 0x7F && c <= 0x9F) {\n        return false;\n      }\n      // out of range\n      if (c > 0x10FFFF) {\n        return false;\n      }\n      return true;\n    }\n\n    function fromCodePoint(c) {\n      /*eslint no-bitwise:0*/\n      if (c > 0xffff) {\n        c -= 0x10000;\n        var surrogate1 = 0xd800 + (c >> 10),\n            surrogate2 = 0xdc00 + (c & 0x3ff);\n\n        return String.fromCharCode(surrogate1, surrogate2);\n      }\n      return String.fromCharCode(c);\n    }\n\n    var NAMED_ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\n    var DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n    var entities = require('./entities');\n\n    function replaceEntityPattern(match, name) {\n      var code = 0;\n\n      if (has(entities, name)) {\n        return entities[name];\n      } else if (name.charCodeAt(0) === 0x23 /* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n        code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n        if (isValidEntityCode(code)) {\n          return fromCodePoint(code);\n        }\n      }\n      return match;\n    }\n\n    function replaceEntities(str) {\n      if (str.indexOf('&') < 0) {\n        return str;\n      }\n\n      return str.replace(NAMED_ENTITY_RE, replaceEntityPattern);\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////\n\n    var HTML_ESCAPE_TEST_RE = /[&<>\"]/;\n    var HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\n    var HTML_REPLACEMENTS = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;'\n    };\n\n    function replaceUnsafeChar(ch) {\n      return HTML_REPLACEMENTS[ch];\n    }\n\n    function escapeHtml(str) {\n      if (HTML_ESCAPE_TEST_RE.test(str)) {\n        return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n      }\n      return str;\n    }\n\n    ////////////////////////////////////////////////////////////////////////////////\n\n    exports.assign = assign;\n    exports.isString = isString;\n    exports.has = has;\n    exports.unescapeMd = unescapeMd;\n    exports.isValidEntityCode = isValidEntityCode;\n    exports.fromCodePoint = fromCodePoint;\n    exports.replaceEntities = replaceEntities;\n    exports.escapeHtml = escapeHtml;\n  }, { \"./entities\": 9 }], 14: [function (require, module, exports) {\n    // Commonmark default options\n\n    'use strict';\n\n    module.exports = {\n      options: {\n        html: true, // Enable HTML tags in source\n        xhtmlOut: true, // Use '/' to close single tags (<br />)\n        breaks: false, // Convert '\\n' in paragraphs into <br>\n        langPrefix: 'language-', // CSS language prefix for fenced blocks\n        linkify: false, // autoconvert URL-like texts to links\n        linkTarget: '', // set target to open link in\n\n        // Enable some language-neutral replacements + quotes beautification\n        typographer: false,\n\n        // Double + single quotes replacement pairs, when typographer enabled,\n        // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n        quotes: '“”‘’',\n\n        // Highlighter function. Should return escaped HTML,\n        // or '' if input not changed\n        //\n        // function (/*str, lang*/) { return ''; }\n        //\n        highlight: null,\n\n        maxNesting: 20 // Internal protection, recursion limit\n      },\n\n      components: {\n\n        core: {\n          rules: ['block', 'inline', 'references', 'abbr2']\n        },\n\n        block: {\n          rules: ['blockquote', 'code', 'fences', 'heading', 'hr', 'htmlblock', 'lheading', 'list', 'paragraph']\n        },\n\n        inline: {\n          rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'htmltag', 'links', 'newline', 'text']\n        }\n      }\n    };\n  }, {}], 15: [function (require, module, exports) {\n    // Remarkable default options\n\n    'use strict';\n\n    module.exports = {\n      options: {\n        html: false, // Enable HTML tags in source\n        xhtmlOut: false, // Use '/' to close single tags (<br />)\n        breaks: false, // Convert '\\n' in paragraphs into <br>\n        langPrefix: 'language-', // CSS language prefix for fenced blocks\n        linkify: false, // autoconvert URL-like texts to links\n        linkTarget: '', // set target to open link in\n\n        // Enable some language-neutral replacements + quotes beautification\n        typographer: false,\n\n        // Double + single quotes replacement pairs, when typographer enabled,\n        // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n        quotes: '“”‘’',\n\n        // Highlighter function. Should return escaped HTML,\n        // or '' if input not changed\n        //\n        // function (/*str, lang*/) { return ''; }\n        //\n        highlight: null,\n\n        maxNesting: 20 // Internal protection, recursion limit\n      },\n\n      components: {\n\n        core: {\n          rules: ['block', 'inline', 'references', 'replacements', 'linkify', 'smartquotes', 'references', 'abbr2', 'footnote_tail']\n        },\n\n        block: {\n          rules: ['blockquote', 'code', 'fences', 'footnote', 'heading', 'hr', 'htmlblock', 'lheading', 'list', 'paragraph', 'table']\n        },\n\n        inline: {\n          rules: ['autolink', 'backticks', 'del', 'emphasis', 'entity', 'escape', 'footnote_ref', 'htmltag', 'links', 'newline', 'text']\n        }\n      }\n    };\n  }, {}], 16: [function (require, module, exports) {\n    // Remarkable default options\n\n    'use strict';\n\n    module.exports = {\n      options: {\n        html: false, // Enable HTML tags in source\n        xhtmlOut: false, // Use '/' to close single tags (<br />)\n        breaks: false, // Convert '\\n' in paragraphs into <br>\n        langPrefix: 'language-', // CSS language prefix for fenced blocks\n        linkify: false, // autoconvert URL-like texts to links\n        linkTarget: '', // set target to open link in\n\n        // Enable some language-neutral replacements + quotes beautification\n        typographer: false,\n\n        // Double + single quotes replacement pairs, when typographer enabled,\n        // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n        quotes: '“”‘’',\n\n        // Highlighter function. Should return escaped HTML,\n        // or '' if input not changed\n        //\n        // function (/*str, lang*/) { return ''; }\n        //\n        highlight: null,\n\n        maxNesting: 20 // Internal protection, recursion limit\n      },\n\n      components: {\n        // Don't restrict core/block/inline rules\n        core: {},\n        block: {},\n        inline: {}\n      }\n    };\n  }, {}], 17: [function (require, module, exports) {\n    'use strict';\n\n    var replaceEntities = require('../common/utils').replaceEntities;\n\n    module.exports = function normalizeLink(url) {\n      var normalized = replaceEntities(url);\n      // We shouldn't care about the result of malformed URIs,\n      // and should not throw an exception.\n      try {\n        normalized = decodeURI(normalized);\n      } catch (err) {}\n      return encodeURI(normalized);\n    };\n  }, { \"../common/utils\": 13 }], 18: [function (require, module, exports) {\n    'use strict';\n\n    module.exports = function normalizeReference(str) {\n      // use .toUpperCase() instead of .toLowerCase()\n      // here to avoid a conflict with Object.prototype\n      // members (most notably, `__proto__`)\n      return str.trim().replace(/\\s+/g, ' ').toUpperCase();\n    };\n  }, {}], 19: [function (require, module, exports) {\n    'use strict';\n\n    var normalizeLink = require('./normalize_link');\n    var unescapeMd = require('../common/utils').unescapeMd;\n\n    /**\n     * Parse link destination\n     *\n     *   - on success it returns a string and updates state.pos;\n     *   - on failure it returns null\n     *\n     * @param  {Object} state\n     * @param  {Number} pos\n     * @api private\n     */\n\n    module.exports = function parseLinkDestination(state, pos) {\n      var code,\n          level,\n          link,\n          start = pos,\n          max = state.posMax;\n\n      if (state.src.charCodeAt(pos) === 0x3C /* < */) {\n          pos++;\n          while (pos < max) {\n            code = state.src.charCodeAt(pos);\n            if (code === 0x0A /* \\n */) {\n                return false;\n              }\n            if (code === 0x3E /* > */) {\n                link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));\n                if (!state.parser.validateLink(link)) {\n                  return false;\n                }\n                state.pos = pos + 1;\n                state.linkContent = link;\n                return true;\n              }\n            if (code === 0x5C /* \\ */ && pos + 1 < max) {\n              pos += 2;\n              continue;\n            }\n\n            pos++;\n          }\n\n          // no closing '>'\n          return false;\n        }\n\n      // this should be ... } else { ... branch\n\n      level = 0;\n      while (pos < max) {\n        code = state.src.charCodeAt(pos);\n\n        if (code === 0x20) {\n          break;\n        }\n\n        if (code > 0x08 && code < 0x0e) {\n          break;\n        }\n\n        if (code === 0x5C /* \\ */ && pos + 1 < max) {\n          pos += 2;\n          continue;\n        }\n\n        if (code === 0x28 /* ( */) {\n            level++;\n            if (level > 1) {\n              break;\n            }\n          }\n\n        if (code === 0x29 /* ) */) {\n            level--;\n            if (level < 0) {\n              break;\n            }\n          }\n\n        pos++;\n      }\n\n      if (start === pos) {\n        return false;\n      }\n\n      link = unescapeMd(state.src.slice(start, pos));\n      if (!state.parser.validateLink(link)) {\n        return false;\n      }\n\n      state.linkContent = link;\n      state.pos = pos;\n      return true;\n    };\n  }, { \"../common/utils\": 13, \"./normalize_link\": 17 }], 20: [function (require, module, exports) {\n    'use strict';\n\n    /**\n     * Parse link labels\n     *\n     * This function assumes that first character (`[`) already matches;\n     * returns the end of the label.\n     *\n     * @param  {Object} state\n     * @param  {Number} start\n     * @api private\n     */\n\n    module.exports = function parseLinkLabel(state, start) {\n      var level,\n          found,\n          marker,\n          labelEnd = -1,\n          max = state.posMax,\n          oldPos = state.pos,\n          oldFlag = state.isInLabel;\n\n      if (state.isInLabel) {\n        return -1;\n      }\n\n      if (state.labelUnmatchedScopes) {\n        state.labelUnmatchedScopes--;\n        return -1;\n      }\n\n      state.pos = start + 1;\n      state.isInLabel = true;\n      level = 1;\n\n      while (state.pos < max) {\n        marker = state.src.charCodeAt(state.pos);\n        if (marker === 0x5B /* [ */) {\n            level++;\n          } else if (marker === 0x5D /* ] */) {\n            level--;\n            if (level === 0) {\n              found = true;\n              break;\n            }\n          }\n\n        state.parser.skipToken(state);\n      }\n\n      if (found) {\n        labelEnd = state.pos;\n        state.labelUnmatchedScopes = 0;\n      } else {\n        state.labelUnmatchedScopes = level - 1;\n      }\n\n      // restore old state\n      state.pos = oldPos;\n      state.isInLabel = oldFlag;\n\n      return labelEnd;\n    };\n  }, {}], 21: [function (require, module, exports) {\n    'use strict';\n\n    var unescapeMd = require('../common/utils').unescapeMd;\n\n    /**\n     * Parse link title\n     *\n     *   - on success it returns a string and updates state.pos;\n     *   - on failure it returns null\n     *\n     * @param  {Object} state\n     * @param  {Number} pos\n     * @api private\n     */\n\n    module.exports = function parseLinkTitle(state, pos) {\n      var code,\n          start = pos,\n          max = state.posMax,\n          marker = state.src.charCodeAt(pos);\n\n      if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) {\n          return false;\n        }\n\n      pos++;\n\n      // if opening marker is \"(\", switch it to closing marker \")\"\n      if (marker === 0x28) {\n        marker = 0x29;\n      }\n\n      while (pos < max) {\n        code = state.src.charCodeAt(pos);\n        if (code === marker) {\n          state.pos = pos + 1;\n          state.linkContent = unescapeMd(state.src.slice(start + 1, pos));\n          return true;\n        }\n        if (code === 0x5C /* \\ */ && pos + 1 < max) {\n          pos += 2;\n          continue;\n        }\n\n        pos++;\n      }\n\n      return false;\n    };\n  }, { \"../common/utils\": 13 }], 22: [function (require, module, exports) {\n    'use strict';\n\n    /**\n     * Local dependencies\n     */\n\n    var assign = require('./common/utils').assign;\n    var Renderer = require('./renderer');\n    var ParserCore = require('./parser_core');\n    var ParserBlock = require('./parser_block');\n    var ParserInline = require('./parser_inline');\n    var Ruler = require('./ruler');\n\n    /**\n     * Preset configs\n     */\n\n    var config = {\n      'default': require('./configs/default'),\n      'full': require('./configs/full'),\n      'commonmark': require('./configs/commonmark')\n    };\n\n    /**\n     * The `StateCore` class manages state.\n     *\n     * @param {Object} `instance` Remarkable instance\n     * @param {String} `str` Markdown string\n     * @param {Object} `env`\n     */\n\n    function StateCore(instance, str, env) {\n      this.src = str;\n      this.env = env;\n      this.options = instance.options;\n      this.tokens = [];\n      this.inlineMode = false;\n\n      this.inline = instance.inline;\n      this.block = instance.block;\n      this.renderer = instance.renderer;\n      this.typographer = instance.typographer;\n    }\n\n    /**\n     * The main `Remarkable` class. Create an instance of\n     * `Remarkable` with a `preset` and/or `options`.\n     *\n     * @param {String} `preset` If no preset is given, `default` is used.\n     * @param {Object} `options`\n     */\n\n    function Remarkable(preset, options) {\n      if (typeof preset !== 'string') {\n        options = preset;\n        preset = 'default';\n      }\n\n      this.inline = new ParserInline();\n      this.block = new ParserBlock();\n      this.core = new ParserCore();\n      this.renderer = new Renderer();\n      this.ruler = new Ruler();\n\n      this.options = {};\n      this.configure(config[preset]);\n      this.set(options || {});\n    }\n\n    /**\n     * Set options as an alternative to passing them\n     * to the constructor.\n     *\n     * ```js\n     * md.set({typographer: true});\n     * ```\n     * @param {Object} `options`\n     * @api public\n     */\n\n    Remarkable.prototype.set = function (options) {\n      assign(this.options, options);\n    };\n\n    /**\n     * Batch loader for components rules states, and options\n     *\n     * @param  {Object} `presets`\n     */\n\n    Remarkable.prototype.configure = function (presets) {\n      var self = this;\n\n      if (!presets) {\n        throw new Error('Wrong `remarkable` preset, check name/content');\n      }\n      if (presets.options) {\n        self.set(presets.options);\n      }\n      if (presets.components) {\n        Object.keys(presets.components).forEach(function (name) {\n          if (presets.components[name].rules) {\n            self[name].ruler.enable(presets.components[name].rules, true);\n          }\n        });\n      }\n    };\n\n    /**\n     * Use a plugin.\n     *\n     * ```js\n     * var md = new Remarkable();\n     *\n     * md.use(plugin1)\n     *   .use(plugin2, opts)\n     *   .use(plugin3);\n     * ```\n     *\n     * @param  {Function} `plugin`\n     * @param  {Object} `options`\n     * @return {Object} `Remarkable` for chaining\n     */\n\n    Remarkable.prototype.use = function (plugin, options) {\n      plugin(this, options);\n      return this;\n    };\n\n    /**\n     * Parse the input `string` and return a tokens array.\n     * Modifies `env` with definitions data.\n     *\n     * @param  {String} `string`\n     * @param  {Object} `env`\n     * @return {Array} Array of tokens\n     */\n\n    Remarkable.prototype.parse = function (str, env) {\n      var state = new StateCore(this, str, env);\n      this.core.process(state);\n      return state.tokens;\n    };\n\n    /**\n     * The main `.render()` method that does all the magic :)\n     *\n     * @param  {String} `string`\n     * @param  {Object} `env`\n     * @return {String} Rendered HTML.\n     */\n\n    Remarkable.prototype.render = function (str, env) {\n      env = env || {};\n      return this.renderer.render(this.parse(str, env), this.options, env);\n    };\n\n    /**\n     * Parse the given content `string` as a single string.\n     *\n     * @param  {String} `string`\n     * @param  {Object} `env`\n     * @return {Array} Array of tokens\n     */\n\n    Remarkable.prototype.parseInline = function (str, env) {\n      var state = new StateCore(this, str, env);\n      state.inlineMode = true;\n      this.core.process(state);\n      return state.tokens;\n    };\n\n    /**\n     * Render a single content `string`, without wrapping it\n     * to paragraphs\n     *\n     * @param  {String} `str`\n     * @param  {Object} `env`\n     * @return {String}\n     */\n\n    Remarkable.prototype.renderInline = function (str, env) {\n      env = env || {};\n      return this.renderer.render(this.parseInline(str, env), this.options, env);\n    };\n\n    /**\n     * Expose `Remarkable`\n     */\n\n    module.exports = Remarkable;\n\n    /**\n     * Expose `utils`, Useful helper functions for custom\n     * rendering.\n     */\n\n    module.exports.utils = require('./common/utils');\n  }, { \"./common/utils\": 13, \"./configs/commonmark\": 14, \"./configs/default\": 15, \"./configs/full\": 16, \"./parser_block\": 23, \"./parser_core\": 24, \"./parser_inline\": 25, \"./renderer\": 26, \"./ruler\": 27 }], 23: [function (require, module, exports) {\n    'use strict';\n\n    /**\n     * Local dependencies\n     */\n\n    var Ruler = require('./ruler');\n    var StateBlock = require('./rules_block/state_block');\n\n    /**\n     * Parser rules\n     */\n\n    var _rules = [['code', require('./rules_block/code')], ['fences', require('./rules_block/fences'), ['paragraph', 'blockquote', 'list']], ['blockquote', require('./rules_block/blockquote'), ['paragraph', 'blockquote', 'list']], ['hr', require('./rules_block/hr'), ['paragraph', 'blockquote', 'list']], ['list', require('./rules_block/list'), ['paragraph', 'blockquote']], ['footnote', require('./rules_block/footnote'), ['paragraph']], ['heading', require('./rules_block/heading'), ['paragraph', 'blockquote']], ['lheading', require('./rules_block/lheading')], ['htmlblock', require('./rules_block/htmlblock'), ['paragraph', 'blockquote']], ['table', require('./rules_block/table'), ['paragraph']], ['deflist', require('./rules_block/deflist'), ['paragraph']], ['paragraph', require('./rules_block/paragraph')]];\n\n    /**\n     * Block Parser class\n     *\n     * @api private\n     */\n\n    function ParserBlock() {\n      this.ruler = new Ruler();\n      for (var i = 0; i < _rules.length; i++) {\n        this.ruler.push(_rules[i][0], _rules[i][1], {\n          alt: (_rules[i][2] || []).slice()\n        });\n      }\n    }\n\n    /**\n     * Generate tokens for the given input range.\n     *\n     * @param  {Object} `state` Has properties like `src`, `parser`, `options` etc\n     * @param  {Number} `startLine`\n     * @param  {Number} `endLine`\n     * @api private\n     */\n\n    ParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n      var rules = this.ruler.getRules('');\n      var len = rules.length;\n      var line = startLine;\n      var hasEmptyLines = false;\n      var ok, i;\n\n      while (line < endLine) {\n        state.line = line = state.skipEmptyLines(line);\n        if (line >= endLine) {\n          break;\n        }\n\n        // Termination condition for nested calls.\n        // Nested calls currently used for blockquotes & lists\n        if (state.tShift[line] < state.blkIndent) {\n          break;\n        }\n\n        // Try all possible rules.\n        // On success, rule should:\n        //\n        // - update `state.line`\n        // - update `state.tokens`\n        // - return true\n\n        for (i = 0; i < len; i++) {\n          ok = rules[i](state, line, endLine, false);\n          if (ok) {\n            break;\n          }\n        }\n\n        // set state.tight iff we had an empty line before current tag\n        // i.e. latest empty line should not count\n        state.tight = !hasEmptyLines;\n\n        // paragraph might \"eat\" one newline after it in nested lists\n        if (state.isEmpty(state.line - 1)) {\n          hasEmptyLines = true;\n        }\n\n        line = state.line;\n\n        if (line < endLine && state.isEmpty(line)) {\n          hasEmptyLines = true;\n          line++;\n\n          // two empty lines should stop the parser in list mode\n          if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) {\n            break;\n          }\n          state.line = line;\n        }\n      }\n    };\n\n    var TABS_SCAN_RE = /[\\n\\t]/g;\n    var NEWLINES_RE = /\\r[\\n\\u0085]|[\\u2424\\u2028\\u0085]/g;\n    var SPACES_RE = /\\u00a0/g;\n\n    /**\n     * Tokenize the given `str`.\n     *\n     * @param  {String} `str` Source string\n     * @param  {Object} `options`\n     * @param  {Object} `env`\n     * @param  {Array} `outTokens`\n     * @api private\n     */\n\n    ParserBlock.prototype.parse = function (str, options, env, outTokens) {\n      var state,\n          lineStart = 0,\n          lastTabPos = 0;\n      if (!str) {\n        return [];\n      }\n\n      // Normalize spaces\n      str = str.replace(SPACES_RE, ' ');\n\n      // Normalize newlines\n      str = str.replace(NEWLINES_RE, '\\n');\n\n      // Replace tabs with proper number of spaces (1..4)\n      if (str.indexOf('\\t') >= 0) {\n        str = str.replace(TABS_SCAN_RE, function (match, offset) {\n          var result;\n          if (str.charCodeAt(offset) === 0x0A) {\n            lineStart = offset + 1;\n            lastTabPos = 0;\n            return match;\n          }\n          result = '    '.slice((offset - lineStart - lastTabPos) % 4);\n          lastTabPos = offset - lineStart + 1;\n          return result;\n        });\n      }\n\n      state = new StateBlock(str, this, options, env, outTokens);\n      this.tokenize(state, state.line, state.lineMax);\n    };\n\n    /**\n     * Expose `ParserBlock`\n     */\n\n    module.exports = ParserBlock;\n  }, { \"./ruler\": 27, \"./rules_block/blockquote\": 29, \"./rules_block/code\": 30, \"./rules_block/deflist\": 31, \"./rules_block/fences\": 32, \"./rules_block/footnote\": 33, \"./rules_block/heading\": 34, \"./rules_block/hr\": 35, \"./rules_block/htmlblock\": 36, \"./rules_block/lheading\": 37, \"./rules_block/list\": 38, \"./rules_block/paragraph\": 39, \"./rules_block/state_block\": 40, \"./rules_block/table\": 41 }], 24: [function (require, module, exports) {\n    'use strict';\n\n    /**\n     * Local dependencies\n     */\n\n    var Ruler = require('./ruler');\n\n    /**\n     * Core parser `rules`\n     */\n\n    var _rules = [['block', require('./rules_core/block')], ['abbr', require('./rules_core/abbr')], ['references', require('./rules_core/references')], ['inline', require('./rules_core/inline')], ['footnote_tail', require('./rules_core/footnote_tail')], ['abbr2', require('./rules_core/abbr2')], ['replacements', require('./rules_core/replacements')], ['smartquotes', require('./rules_core/smartquotes')], ['linkify', require('./rules_core/linkify')]];\n\n    /**\n     * Class for top level (`core`) parser rules\n     *\n     * @api private\n     */\n\n    function Core() {\n      this.options = {};\n      this.ruler = new Ruler();\n      for (var i = 0; i < _rules.length; i++) {\n        this.ruler.push(_rules[i][0], _rules[i][1]);\n      }\n    }\n\n    /**\n     * Process rules with the given `state`\n     *\n     * @param  {Object} `state`\n     * @api private\n     */\n\n    Core.prototype.process = function (state) {\n      var i, l, rules;\n      rules = this.ruler.getRules('');\n      for (i = 0, l = rules.length; i < l; i++) {\n        rules[i](state);\n      }\n    };\n\n    /**\n     * Expose `Core`\n     */\n\n    module.exports = Core;\n  }, { \"./ruler\": 27, \"./rules_core/abbr\": 42, \"./rules_core/abbr2\": 43, \"./rules_core/block\": 44, \"./rules_core/footnote_tail\": 45, \"./rules_core/inline\": 46, \"./rules_core/linkify\": 47, \"./rules_core/references\": 48, \"./rules_core/replacements\": 49, \"./rules_core/smartquotes\": 50 }], 25: [function (require, module, exports) {\n    'use strict';\n\n    /**\n     * Local dependencies\n     */\n\n    var Ruler = require('./ruler');\n    var StateInline = require('./rules_inline/state_inline');\n    var utils = require('./common/utils');\n\n    /**\n     * Inline Parser `rules`\n     */\n\n    var _rules = [['text', require('./rules_inline/text')], ['newline', require('./rules_inline/newline')], ['escape', require('./rules_inline/escape')], ['backticks', require('./rules_inline/backticks')], ['del', require('./rules_inline/del')], ['ins', require('./rules_inline/ins')], ['mark', require('./rules_inline/mark')], ['emphasis', require('./rules_inline/emphasis')], ['sub', require('./rules_inline/sub')], ['sup', require('./rules_inline/sup')], ['links', require('./rules_inline/links')], ['footnote_inline', require('./rules_inline/footnote_inline')], ['footnote_ref', require('./rules_inline/footnote_ref')], ['autolink', require('./rules_inline/autolink')], ['htmltag', require('./rules_inline/htmltag')], ['entity', require('./rules_inline/entity')]];\n\n    /**\n     * Inline Parser class. Note that link validation is stricter\n     * in Remarkable than what is specified by CommonMark. If you\n     * want to change this you can use a custom validator.\n     *\n     * @api private\n     */\n\n    function ParserInline() {\n      this.ruler = new Ruler();\n      for (var i = 0; i < _rules.length; i++) {\n        this.ruler.push(_rules[i][0], _rules[i][1]);\n      }\n\n      // Can be overridden with a custom validator\n      this.validateLink = validateLink;\n    }\n\n    /**\n     * Skip a single token by running all rules in validation mode.\n     * Returns `true` if any rule reports success.\n     *\n     * @param  {Object} `state`\n     * @api privage\n     */\n\n    ParserInline.prototype.skipToken = function (state) {\n      var rules = this.ruler.getRules('');\n      var len = rules.length;\n      var pos = state.pos;\n      var i, cached_pos;\n\n      if ((cached_pos = state.cacheGet(pos)) > 0) {\n        state.pos = cached_pos;\n        return;\n      }\n\n      for (i = 0; i < len; i++) {\n        if (rules[i](state, true)) {\n          state.cacheSet(pos, state.pos);\n          return;\n        }\n      }\n\n      state.pos++;\n      state.cacheSet(pos, state.pos);\n    };\n\n    /**\n     * Generate tokens for the given input range.\n     *\n     * @param  {Object} `state`\n     * @api private\n     */\n\n    ParserInline.prototype.tokenize = function (state) {\n      var rules = this.ruler.getRules('');\n      var len = rules.length;\n      var end = state.posMax;\n      var ok, i;\n\n      while (state.pos < end) {\n\n        // Try all possible rules.\n        // On success, the rule should:\n        //\n        // - update `state.pos`\n        // - update `state.tokens`\n        // - return true\n        for (i = 0; i < len; i++) {\n          ok = rules[i](state, false);\n\n          if (ok) {\n            break;\n          }\n        }\n\n        if (ok) {\n          if (state.pos >= end) {\n            break;\n          }\n          continue;\n        }\n\n        state.pending += state.src[state.pos++];\n      }\n\n      if (state.pending) {\n        state.pushPending();\n      }\n    };\n\n    /**\n     * Parse the given input string.\n     *\n     * @param  {String} `str`\n     * @param  {Object} `options`\n     * @param  {Object} `env`\n     * @param  {Array} `outTokens`\n     * @api private\n     */\n\n    ParserInline.prototype.parse = function (str, options, env, outTokens) {\n      var state = new StateInline(str, this, options, env, outTokens);\n      this.tokenize(state);\n    };\n\n    /**\n     * Validate the given `url` by checking for bad protocols.\n     *\n     * @param  {String} `url`\n     * @return {Boolean}\n     */\n\n    function validateLink(url) {\n      var BAD_PROTOCOLS = ['vbscript', 'javascript', 'file', 'data'];\n      var str = url.trim().toLowerCase();\n      // Care about digital entities \"javascript&#x3A;alert(1)\"\n      str = utils.replaceEntities(str);\n      if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {\n        return false;\n      }\n      return true;\n    }\n\n    /**\n     * Expose `ParserInline`\n     */\n\n    module.exports = ParserInline;\n  }, { \"./common/utils\": 13, \"./ruler\": 27, \"./rules_inline/autolink\": 51, \"./rules_inline/backticks\": 52, \"./rules_inline/del\": 53, \"./rules_inline/emphasis\": 54, \"./rules_inline/entity\": 55, \"./rules_inline/escape\": 56, \"./rules_inline/footnote_inline\": 57, \"./rules_inline/footnote_ref\": 58, \"./rules_inline/htmltag\": 59, \"./rules_inline/ins\": 60, \"./rules_inline/links\": 61, \"./rules_inline/mark\": 62, \"./rules_inline/newline\": 63, \"./rules_inline/state_inline\": 64, \"./rules_inline/sub\": 65, \"./rules_inline/sup\": 66, \"./rules_inline/text\": 67 }], 26: [function (require, module, exports) {\n    'use strict';\n\n    /**\n     * Local dependencies\n     */\n\n    var utils = require('./common/utils');\n    var rules = require('./rules');\n\n    /**\n     * Expose `Renderer`\n     */\n\n    module.exports = Renderer;\n\n    /**\n     * Renderer class. Renders HTML and exposes `rules` to allow\n     * local modifications.\n     */\n\n    function Renderer() {\n      this.rules = utils.assign({}, rules);\n\n      // exported helper, for custom rules only\n      this.getBreak = rules.getBreak;\n    }\n\n    /**\n     * Render a string of inline HTML with the given `tokens` and\n     * `options`.\n     *\n     * @param  {Array} `tokens`\n     * @param  {Object} `options`\n     * @param  {Object} `env`\n     * @return {String}\n     * @api public\n     */\n\n    Renderer.prototype.renderInline = function (tokens, options, env) {\n      var _rules = this.rules;\n      var len = tokens.length,\n          i = 0;\n      var result = '';\n\n      while (len--) {\n        result += _rules[tokens[i].type](tokens, i++, options, env, this);\n      }\n\n      return result;\n    };\n\n    /**\n     * Render a string of HTML with the given `tokens` and\n     * `options`.\n     *\n     * @param  {Array} `tokens`\n     * @param  {Object} `options`\n     * @param  {Object} `env`\n     * @return {String}\n     * @api public\n     */\n\n    Renderer.prototype.render = function (tokens, options, env) {\n      var _rules = this.rules;\n      var len = tokens.length,\n          i = -1;\n      var result = '';\n\n      while (++i < len) {\n        if (tokens[i].type === 'inline') {\n          result += this.renderInline(tokens[i].children, options, env);\n        } else {\n          result += _rules[tokens[i].type](tokens, i, options, env, this);\n        }\n      }\n      return result;\n    };\n  }, { \"./common/utils\": 13, \"./rules\": 28 }], 27: [function (require, module, exports) {\n    'use strict';\n\n    /**\n     * Ruler is a helper class for building responsibility chains from\n     * parse rules. It allows:\n     *\n     *   - easy stack rules chains\n     *   - getting main chain and named chains content (as arrays of functions)\n     *\n     * Helper methods, should not be used directly.\n     * @api private\n     */\n\n    function Ruler() {\n      // List of added rules. Each element is:\n      //\n      // { name: XXX,\n      //   enabled: Boolean,\n      //   fn: Function(),\n      //   alt: [ name2, name3 ] }\n      //\n      this.__rules__ = [];\n\n      // Cached rule chains.\n      //\n      // First level - chain name, '' for default.\n      // Second level - digital anchor for fast filtering by charcodes.\n      //\n      this.__cache__ = null;\n    }\n\n    /**\n     * Find the index of a rule by `name`.\n     *\n     * @param  {String} `name`\n     * @return {Number} Index of the given `name`\n     * @api private\n     */\n\n    Ruler.prototype.__find__ = function (name) {\n      var len = this.__rules__.length;\n      var i = -1;\n\n      while (len--) {\n        if (this.__rules__[++i].name === name) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n    /**\n     * Build the rules lookup cache\n     *\n     * @api private\n     */\n\n    Ruler.prototype.__compile__ = function () {\n      var self = this;\n      var chains = [''];\n\n      // collect unique names\n      self.__rules__.forEach(function (rule) {\n        if (!rule.enabled) {\n          return;\n        }\n\n        rule.alt.forEach(function (altName) {\n          if (chains.indexOf(altName) < 0) {\n            chains.push(altName);\n          }\n        });\n      });\n\n      self.__cache__ = {};\n\n      chains.forEach(function (chain) {\n        self.__cache__[chain] = [];\n        self.__rules__.forEach(function (rule) {\n          if (!rule.enabled) {\n            return;\n          }\n\n          if (chain && rule.alt.indexOf(chain) < 0) {\n            return;\n          }\n          self.__cache__[chain].push(rule.fn);\n        });\n      });\n    };\n\n    /**\n     * Ruler public methods\n     * ------------------------------------------------\n     */\n\n    /**\n     * Replace rule function\n     *\n     * @param  {String} `name` Rule name\n     * @param  {Function `fn`\n     * @param  {Object} `options`\n     * @api private\n     */\n\n    Ruler.prototype.at = function (name, fn, options) {\n      var idx = this.__find__(name);\n      var opt = options || {};\n\n      if (idx === -1) {\n        throw new Error('Parser rule not found: ' + name);\n      }\n\n      this.__rules__[idx].fn = fn;\n      this.__rules__[idx].alt = opt.alt || [];\n      this.__cache__ = null;\n    };\n\n    /**\n     * Add a rule to the chain before given the `ruleName`.\n     *\n     * @param  {String}   `beforeName`\n     * @param  {String}   `ruleName`\n     * @param  {Function} `fn`\n     * @param  {Object}   `options`\n     * @api private\n     */\n\n    Ruler.prototype.before = function (beforeName, ruleName, fn, options) {\n      var idx = this.__find__(beforeName);\n      var opt = options || {};\n\n      if (idx === -1) {\n        throw new Error('Parser rule not found: ' + beforeName);\n      }\n\n      this.__rules__.splice(idx, 0, {\n        name: ruleName,\n        enabled: true,\n        fn: fn,\n        alt: opt.alt || []\n      });\n\n      this.__cache__ = null;\n    };\n\n    /**\n     * Add a rule to the chain after the given `ruleName`.\n     *\n     * @param  {String}   `afterName`\n     * @param  {String}   `ruleName`\n     * @param  {Function} `fn`\n     * @param  {Object}   `options`\n     * @api private\n     */\n\n    Ruler.prototype.after = function (afterName, ruleName, fn, options) {\n      var idx = this.__find__(afterName);\n      var opt = options || {};\n\n      if (idx === -1) {\n        throw new Error('Parser rule not found: ' + afterName);\n      }\n\n      this.__rules__.splice(idx + 1, 0, {\n        name: ruleName,\n        enabled: true,\n        fn: fn,\n        alt: opt.alt || []\n      });\n\n      this.__cache__ = null;\n    };\n\n    /**\n     * Add a rule to the end of chain.\n     *\n     * @param  {String}   `ruleName`\n     * @param  {Function} `fn`\n     * @param  {Object}   `options`\n     * @return {String}\n     */\n\n    Ruler.prototype.push = function (ruleName, fn, options) {\n      var opt = options || {};\n\n      this.__rules__.push({\n        name: ruleName,\n        enabled: true,\n        fn: fn,\n        alt: opt.alt || []\n      });\n\n      this.__cache__ = null;\n    };\n\n    /**\n     * Enable a rule or list of rules.\n     *\n     * @param  {String|Array} `list` Name or array of rule names to enable\n     * @param  {Boolean} `strict` If `true`, all non listed rules will be disabled.\n     * @api private\n     */\n\n    Ruler.prototype.enable = function (list, strict) {\n      list = !Array.isArray(list) ? [list] : list;\n\n      // In strict mode disable all existing rules first\n      if (strict) {\n        this.__rules__.forEach(function (rule) {\n          rule.enabled = false;\n        });\n      }\n\n      // Search by name and enable\n      list.forEach(function (name) {\n        var idx = this.__find__(name);\n        if (idx < 0) {\n          throw new Error('Rules manager: invalid rule name ' + name);\n        }\n        this.__rules__[idx].enabled = true;\n      }, this);\n\n      this.__cache__ = null;\n    };\n\n    /**\n     * Disable a rule or list of rules.\n     *\n     * @param  {String|Array} `list` Name or array of rule names to disable\n     * @api private\n     */\n\n    Ruler.prototype.disable = function (list) {\n      list = !Array.isArray(list) ? [list] : list;\n\n      // Search by name and disable\n      list.forEach(function (name) {\n        var idx = this.__find__(name);\n        if (idx < 0) {\n          throw new Error('Rules manager: invalid rule name ' + name);\n        }\n        this.__rules__[idx].enabled = false;\n      }, this);\n\n      this.__cache__ = null;\n    };\n\n    /**\n     * Get a rules list as an array of functions.\n     *\n     * @param  {String} `chainName`\n     * @return {Object}\n     * @api private\n     */\n\n    Ruler.prototype.getRules = function (chainName) {\n      if (this.__cache__ === null) {\n        this.__compile__();\n      }\n      return this.__cache__[chainName] || [];\n    };\n\n    /**\n     * Expose `Ruler`\n     */\n\n    module.exports = Ruler;\n  }, {}], 28: [function (require, module, exports) {\n    'use strict';\n\n    /**\n     * Local dependencies\n     */\n\n    var has = require('./common/utils').has;\n    var unescapeMd = require('./common/utils').unescapeMd;\n    var replaceEntities = require('./common/utils').replaceEntities;\n    var escapeHtml = require('./common/utils').escapeHtml;\n\n    /**\n     * Renderer rules cache\n     */\n\n    var rules = {};\n\n    /**\n     * Blockquotes\n     */\n\n    rules.blockquote_open = function () /* tokens, idx, options, env */{\n      return '<blockquote>\\n';\n    };\n\n    rules.blockquote_close = function (tokens, idx /*, options, env */) {\n      return '</blockquote>' + getBreak(tokens, idx);\n    };\n\n    /**\n     * Code\n     */\n\n    rules.code = function (tokens, idx /*, options, env */) {\n      if (tokens[idx].block) {\n        return '<pre><code>' + escapeHtml(tokens[idx].content) + '</code></pre>' + getBreak(tokens, idx);\n      }\n      return '<code>' + escapeHtml(tokens[idx].content) + '</code>';\n    };\n\n    /**\n     * Fenced code blocks\n     */\n\n    rules.fence = function (tokens, idx, options, env, instance) {\n      var token = tokens[idx];\n      var langClass = '';\n      var langPrefix = options.langPrefix;\n      var langName = '',\n          fences,\n          fenceName;\n      var highlighted;\n\n      if (token.params) {\n\n        //\n        // ```foo bar\n        //\n        // Try custom renderer \"foo\" first. That will simplify overwrite\n        // for diagrams, latex, and any other fenced block with custom look\n        //\n\n        fences = token.params.split(/\\s+/g);\n        fenceName = fences.join(' ');\n\n        if (has(instance.rules.fence_custom, fences[0])) {\n          return instance.rules.fence_custom[fences[0]](tokens, idx, options, env, instance);\n        }\n\n        langName = escapeHtml(replaceEntities(unescapeMd(fenceName)));\n        langClass = ' class=\"' + langPrefix + langName + '\"';\n      }\n\n      if (options.highlight) {\n        highlighted = options.highlight.apply(options.highlight, [token.content].concat(fences)) || escapeHtml(token.content);\n      } else {\n        highlighted = escapeHtml(token.content);\n      }\n\n      return '<pre><code' + langClass + '>' + highlighted + '</code></pre>' + getBreak(tokens, idx);\n    };\n\n    rules.fence_custom = {};\n\n    /**\n     * Headings\n     */\n\n    rules.heading_open = function (tokens, idx /*, options, env */) {\n      return '<h' + tokens[idx].hLevel + '>';\n    };\n    rules.heading_close = function (tokens, idx /*, options, env */) {\n      return '</h' + tokens[idx].hLevel + '>\\n';\n    };\n\n    /**\n     * Horizontal rules\n     */\n\n    rules.hr = function (tokens, idx, options /*, env */) {\n      return (options.xhtmlOut ? '<hr />' : '<hr>') + getBreak(tokens, idx);\n    };\n\n    /**\n     * Bullets\n     */\n\n    rules.bullet_list_open = function () /* tokens, idx, options, env */{\n      return '<ul>\\n';\n    };\n    rules.bullet_list_close = function (tokens, idx /*, options, env */) {\n      return '</ul>' + getBreak(tokens, idx);\n    };\n\n    /**\n     * List items\n     */\n\n    rules.list_item_open = function () /* tokens, idx, options, env */{\n      return '<li>';\n    };\n    rules.list_item_close = function () /* tokens, idx, options, env */{\n      return '</li>\\n';\n    };\n\n    /**\n     * Ordered list items\n     */\n\n    rules.ordered_list_open = function (tokens, idx /*, options, env */) {\n      var token = tokens[idx];\n      var order = token.order > 1 ? ' start=\"' + token.order + '\"' : '';\n      return '<ol' + order + '>\\n';\n    };\n    rules.ordered_list_close = function (tokens, idx /*, options, env */) {\n      return '</ol>' + getBreak(tokens, idx);\n    };\n\n    /**\n     * Paragraphs\n     */\n\n    rules.paragraph_open = function (tokens, idx /*, options, env */) {\n      return tokens[idx].tight ? '' : '<p>';\n    };\n    rules.paragraph_close = function (tokens, idx /*, options, env */) {\n      var addBreak = !(tokens[idx].tight && idx && tokens[idx - 1].type === 'inline' && !tokens[idx - 1].content);\n      return (tokens[idx].tight ? '' : '</p>') + (addBreak ? getBreak(tokens, idx) : '');\n    };\n\n    /**\n     * Links\n     */\n\n    rules.link_open = function (tokens, idx, options /* env */) {\n      var title = tokens[idx].title ? ' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"' : '';\n      var target = options.linkTarget ? ' target=\"' + options.linkTarget + '\"' : '';\n      return '<a href=\"' + escapeHtml(tokens[idx].href) + '\"' + title + target + '>';\n    };\n    rules.link_close = function () /* tokens, idx, options, env */{\n      return '</a>';\n    };\n\n    /**\n     * Images\n     */\n\n    rules.image = function (tokens, idx, options /*, env */) {\n      var src = ' src=\"' + escapeHtml(tokens[idx].src) + '\"';\n      var title = tokens[idx].title ? ' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"' : '';\n      var alt = ' alt=\"' + (tokens[idx].alt ? escapeHtml(replaceEntities(unescapeMd(tokens[idx].alt))) : '') + '\"';\n      var suffix = options.xhtmlOut ? ' /' : '';\n      return '<img' + src + alt + title + suffix + '>';\n    };\n\n    /**\n     * Tables\n     */\n\n    rules.table_open = function () /* tokens, idx, options, env */{\n      return '<table>\\n';\n    };\n    rules.table_close = function () /* tokens, idx, options, env */{\n      return '</table>\\n';\n    };\n    rules.thead_open = function () /* tokens, idx, options, env */{\n      return '<thead>\\n';\n    };\n    rules.thead_close = function () /* tokens, idx, options, env */{\n      return '</thead>\\n';\n    };\n    rules.tbody_open = function () /* tokens, idx, options, env */{\n      return '<tbody>\\n';\n    };\n    rules.tbody_close = function () /* tokens, idx, options, env */{\n      return '</tbody>\\n';\n    };\n    rules.tr_open = function () /* tokens, idx, options, env */{\n      return '<tr>';\n    };\n    rules.tr_close = function () /* tokens, idx, options, env */{\n      return '</tr>\\n';\n    };\n    rules.th_open = function (tokens, idx /*, options, env */) {\n      var token = tokens[idx];\n      return '<th' + (token.align ? ' style=\"text-align:' + token.align + '\"' : '') + '>';\n    };\n    rules.th_close = function () /* tokens, idx, options, env */{\n      return '</th>';\n    };\n    rules.td_open = function (tokens, idx /*, options, env */) {\n      var token = tokens[idx];\n      return '<td' + (token.align ? ' style=\"text-align:' + token.align + '\"' : '') + '>';\n    };\n    rules.td_close = function () /* tokens, idx, options, env */{\n      return '</td>';\n    };\n\n    /**\n     * Bold\n     */\n\n    rules.strong_open = function () /* tokens, idx, options, env */{\n      return '<strong>';\n    };\n    rules.strong_close = function () /* tokens, idx, options, env */{\n      return '</strong>';\n    };\n\n    /**\n     * Italicize\n     */\n\n    rules.em_open = function () /* tokens, idx, options, env */{\n      return '<em>';\n    };\n    rules.em_close = function () /* tokens, idx, options, env */{\n      return '</em>';\n    };\n\n    /**\n     * Strikethrough\n     */\n\n    rules.del_open = function () /* tokens, idx, options, env */{\n      return '<del>';\n    };\n    rules.del_close = function () /* tokens, idx, options, env */{\n      return '</del>';\n    };\n\n    /**\n     * Insert\n     */\n\n    rules.ins_open = function () /* tokens, idx, options, env */{\n      return '<ins>';\n    };\n    rules.ins_close = function () /* tokens, idx, options, env */{\n      return '</ins>';\n    };\n\n    /**\n     * Highlight\n     */\n\n    rules.mark_open = function () /* tokens, idx, options, env */{\n      return '<mark>';\n    };\n    rules.mark_close = function () /* tokens, idx, options, env */{\n      return '</mark>';\n    };\n\n    /**\n     * Super- and sub-script\n     */\n\n    rules.sub = function (tokens, idx /*, options, env */) {\n      return '<sub>' + escapeHtml(tokens[idx].content) + '</sub>';\n    };\n    rules.sup = function (tokens, idx /*, options, env */) {\n      return '<sup>' + escapeHtml(tokens[idx].content) + '</sup>';\n    };\n\n    /**\n     * Breaks\n     */\n\n    rules.hardbreak = function (tokens, idx, options /*, env */) {\n      return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n    };\n    rules.softbreak = function (tokens, idx, options /*, env */) {\n      return options.breaks ? options.xhtmlOut ? '<br />\\n' : '<br>\\n' : '\\n';\n    };\n\n    /**\n     * Text\n     */\n\n    rules.text = function (tokens, idx /*, options, env */) {\n      return escapeHtml(tokens[idx].content);\n    };\n\n    /**\n     * Content\n     */\n\n    rules.htmlblock = function (tokens, idx /*, options, env */) {\n      return tokens[idx].content;\n    };\n    rules.htmltag = function (tokens, idx /*, options, env */) {\n      return tokens[idx].content;\n    };\n\n    /**\n     * Abbreviations, initialism\n     */\n\n    rules.abbr_open = function (tokens, idx /*, options, env */) {\n      return '<abbr title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\">';\n    };\n    rules.abbr_close = function () /* tokens, idx, options, env */{\n      return '</abbr>';\n    };\n\n    /**\n     * Footnotes\n     */\n\n    rules.footnote_ref = function (tokens, idx) {\n      var n = Number(tokens[idx].id + 1).toString();\n      var id = 'fnref' + n;\n      if (tokens[idx].subId > 0) {\n        id += ':' + tokens[idx].subId;\n      }\n      return '<sup class=\"footnote-ref\"><a href=\"#fn' + n + '\" id=\"' + id + '\">[' + n + ']</a></sup>';\n    };\n    rules.footnote_block_open = function (tokens, idx, options) {\n      var hr = options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n';\n      return hr + '<section class=\"footnotes\">\\n<ol class=\"footnotes-list\">\\n';\n    };\n    rules.footnote_block_close = function () {\n      return '</ol>\\n</section>\\n';\n    };\n    rules.footnote_open = function (tokens, idx) {\n      var id = Number(tokens[idx].id + 1).toString();\n      return '<li id=\"fn' + id + '\"  class=\"footnote-item\">';\n    };\n    rules.footnote_close = function () {\n      return '</li>\\n';\n    };\n    rules.footnote_anchor = function (tokens, idx) {\n      var n = Number(tokens[idx].id + 1).toString();\n      var id = 'fnref' + n;\n      if (tokens[idx].subId > 0) {\n        id += ':' + tokens[idx].subId;\n      }\n      return ' <a href=\"#' + id + '\" class=\"footnote-backref\">↩</a>';\n    };\n\n    /**\n     * Definition lists\n     */\n\n    rules.dl_open = function () {\n      return '<dl>\\n';\n    };\n    rules.dt_open = function () {\n      return '<dt>';\n    };\n    rules.dd_open = function () {\n      return '<dd>';\n    };\n    rules.dl_close = function () {\n      return '</dl>\\n';\n    };\n    rules.dt_close = function () {\n      return '</dt>\\n';\n    };\n    rules.dd_close = function () {\n      return '</dd>\\n';\n    };\n\n    /**\n     * Helper functions\n     */\n\n    function nextToken(tokens, idx) {\n      if (++idx >= tokens.length - 2) {\n        return idx;\n      }\n      if (tokens[idx].type === 'paragraph_open' && tokens[idx].tight && tokens[idx + 1].type === 'inline' && tokens[idx + 1].content.length === 0 && tokens[idx + 2].type === 'paragraph_close' && tokens[idx + 2].tight) {\n        return nextToken(tokens, idx + 2);\n      }\n      return idx;\n    }\n\n    /**\n     * Check to see if `\\n` is needed before the next token.\n     *\n     * @param  {Array} `tokens`\n     * @param  {Number} `idx`\n     * @return {String} Empty string or newline\n     * @api private\n     */\n\n    var getBreak = rules.getBreak = function getBreak(tokens, idx) {\n      idx = nextToken(tokens, idx);\n      if (idx < tokens.length && tokens[idx].type === 'list_item_close') {\n        return '';\n      }\n      return '\\n';\n    };\n\n    /**\n     * Expose `rules`\n     */\n\n    module.exports = rules;\n  }, { \"./common/utils\": 13 }], 29: [function (require, module, exports) {\n    // Block quotes\n\n    'use strict';\n\n    module.exports = function blockquote(state, startLine, endLine, silent) {\n      var nextLine,\n          lastLineEmpty,\n          oldTShift,\n          oldBMarks,\n          oldIndent,\n          oldParentType,\n          lines,\n          terminatorRules,\n          i,\n          l,\n          terminate,\n          pos = state.bMarks[startLine] + state.tShift[startLine],\n          max = state.eMarks[startLine];\n\n      if (pos > max) {\n        return false;\n      }\n\n      // check the block quote marker\n      if (state.src.charCodeAt(pos++) !== 0x3E /* > */) {\n          return false;\n        }\n\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      // we know that it's going to be a valid blockquote,\n      // so no point trying to find the end of it in silent mode\n      if (silent) {\n        return true;\n      }\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20) {\n        pos++;\n      }\n\n      oldIndent = state.blkIndent;\n      state.blkIndent = 0;\n\n      oldBMarks = [state.bMarks[startLine]];\n      state.bMarks[startLine] = pos;\n\n      // check if we have an empty blockquote\n      pos = pos < max ? state.skipSpaces(pos) : pos;\n      lastLineEmpty = pos >= max;\n\n      oldTShift = [state.tShift[startLine]];\n      state.tShift[startLine] = pos - state.bMarks[startLine];\n\n      terminatorRules = state.parser.ruler.getRules('blockquote');\n\n      // Search the end of the block\n      //\n      // Block ends with either:\n      //  1. an empty line outside:\n      //     ```\n      //     > test\n      //\n      //     ```\n      //  2. an empty line inside:\n      //     ```\n      //     >\n      //     test\n      //     ```\n      //  3. another tag\n      //     ```\n      //     > test\n      //      - - -\n      //     ```\n      for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n        pos = state.bMarks[nextLine] + state.tShift[nextLine];\n        max = state.eMarks[nextLine];\n\n        if (pos >= max) {\n          // Case 1: line is not inside the blockquote, and this line is empty.\n          break;\n        }\n\n        if (state.src.charCodeAt(pos++) === 0x3E /* > */) {\n            // This line is inside the blockquote.\n\n            // skip one optional space after '>'\n            if (state.src.charCodeAt(pos) === 0x20) {\n              pos++;\n            }\n\n            oldBMarks.push(state.bMarks[nextLine]);\n            state.bMarks[nextLine] = pos;\n\n            pos = pos < max ? state.skipSpaces(pos) : pos;\n            lastLineEmpty = pos >= max;\n\n            oldTShift.push(state.tShift[nextLine]);\n            state.tShift[nextLine] = pos - state.bMarks[nextLine];\n            continue;\n          }\n\n        // Case 2: line is not inside the blockquote, and the last line was empty.\n        if (lastLineEmpty) {\n          break;\n        }\n\n        // Case 3: another tag found.\n        terminate = false;\n        for (i = 0, l = terminatorRules.length; i < l; i++) {\n          if (terminatorRules[i](state, nextLine, endLine, true)) {\n            terminate = true;\n            break;\n          }\n        }\n        if (terminate) {\n          break;\n        }\n\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n\n        // A negative number means that this is a paragraph continuation;\n        //\n        // Any negative number will do the job here, but it's better for it\n        // to be large enough to make any bugs obvious.\n        state.tShift[nextLine] = -1337;\n      }\n\n      oldParentType = state.parentType;\n      state.parentType = 'blockquote';\n      state.tokens.push({\n        type: 'blockquote_open',\n        lines: lines = [startLine, 0],\n        level: state.level++\n      });\n      state.parser.tokenize(state, startLine, nextLine);\n      state.tokens.push({\n        type: 'blockquote_close',\n        level: --state.level\n      });\n      state.parentType = oldParentType;\n      lines[1] = state.line;\n\n      // Restore original tShift; this might not be necessary since the parser\n      // has already been here, but just to make sure we can do that.\n      for (i = 0; i < oldTShift.length; i++) {\n        state.bMarks[i + startLine] = oldBMarks[i];\n        state.tShift[i + startLine] = oldTShift[i];\n      }\n      state.blkIndent = oldIndent;\n\n      return true;\n    };\n  }, {}], 30: [function (require, module, exports) {\n    // Code block (4 spaces padded)\n\n    'use strict';\n\n    module.exports = function code(state, startLine, endLine /*, silent*/) {\n      var nextLine, last;\n\n      if (state.tShift[startLine] - state.blkIndent < 4) {\n        return false;\n      }\n\n      last = nextLine = startLine + 1;\n\n      while (nextLine < endLine) {\n        if (state.isEmpty(nextLine)) {\n          nextLine++;\n          continue;\n        }\n        if (state.tShift[nextLine] - state.blkIndent >= 4) {\n          nextLine++;\n          last = nextLine;\n          continue;\n        }\n        break;\n      }\n\n      state.line = nextLine;\n      state.tokens.push({\n        type: 'code',\n        content: state.getLines(startLine, last, 4 + state.blkIndent, true),\n        block: true,\n        lines: [startLine, state.line],\n        level: state.level\n      });\n\n      return true;\n    };\n  }, {}], 31: [function (require, module, exports) {\n    // Definition lists\n\n    'use strict';\n\n    // Search `[:~][\\n ]`, returns next pos after marker on success\n    // or -1 on fail.\n\n    function skipMarker(state, line) {\n      var pos,\n          marker,\n          start = state.bMarks[line] + state.tShift[line],\n          max = state.eMarks[line];\n\n      if (start >= max) {\n        return -1;\n      }\n\n      // Check bullet\n      marker = state.src.charCodeAt(start++);\n      if (marker !== 0x7E /* ~ */ && marker !== 0x3A /* : */) {\n          return -1;\n        }\n\n      pos = state.skipSpaces(start);\n\n      // require space after \":\"\n      if (start === pos) {\n        return -1;\n      }\n\n      // no empty definitions, e.g. \"  : \"\n      if (pos >= max) {\n        return -1;\n      }\n\n      return pos;\n    }\n\n    function markTightParagraphs(state, idx) {\n      var i,\n          l,\n          level = state.level + 2;\n\n      for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n        if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n          state.tokens[i + 2].tight = true;\n          state.tokens[i].tight = true;\n          i += 2;\n        }\n      }\n    }\n\n    module.exports = function deflist(state, startLine, endLine, silent) {\n      var contentStart, ddLine, dtLine, itemLines, listLines, listTokIdx, nextLine, oldIndent, oldDDIndent, oldParentType, oldTShift, oldTight, prevEmptyEnd, tight;\n\n      if (silent) {\n        // quirk: validation mode validates a dd block only, not a whole deflist\n        if (state.ddIndent < 0) {\n          return false;\n        }\n        return skipMarker(state, startLine) >= 0;\n      }\n\n      nextLine = startLine + 1;\n      if (state.isEmpty(nextLine)) {\n        if (++nextLine > endLine) {\n          return false;\n        }\n      }\n\n      if (state.tShift[nextLine] < state.blkIndent) {\n        return false;\n      }\n      contentStart = skipMarker(state, nextLine);\n      if (contentStart < 0) {\n        return false;\n      }\n\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      // Start list\n      listTokIdx = state.tokens.length;\n\n      state.tokens.push({\n        type: 'dl_open',\n        lines: listLines = [startLine, 0],\n        level: state.level++\n      });\n\n      //\n      // Iterate list items\n      //\n\n      dtLine = startLine;\n      ddLine = nextLine;\n\n      // One definition list can contain multiple DTs,\n      // and one DT can be followed by multiple DDs.\n      //\n      // Thus, there is two loops here, and label is\n      // needed to break out of the second one\n      //\n      /*eslint no-labels:0,block-scoped-var:0*/\n      OUTER: for (;;) {\n        tight = true;\n        prevEmptyEnd = false;\n\n        state.tokens.push({\n          type: 'dt_open',\n          lines: [dtLine, dtLine],\n          level: state.level++\n        });\n        state.tokens.push({\n          type: 'inline',\n          content: state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim(),\n          level: state.level + 1,\n          lines: [dtLine, dtLine],\n          children: []\n        });\n        state.tokens.push({\n          type: 'dt_close',\n          level: --state.level\n        });\n\n        for (;;) {\n          state.tokens.push({\n            type: 'dd_open',\n            lines: itemLines = [nextLine, 0],\n            level: state.level++\n          });\n\n          oldTight = state.tight;\n          oldDDIndent = state.ddIndent;\n          oldIndent = state.blkIndent;\n          oldTShift = state.tShift[ddLine];\n          oldParentType = state.parentType;\n          state.blkIndent = state.ddIndent = state.tShift[ddLine] + 2;\n          state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n          state.tight = true;\n          state.parentType = 'deflist';\n\n          state.parser.tokenize(state, ddLine, endLine, true);\n\n          // If any of list item is tight, mark list as tight\n          if (!state.tight || prevEmptyEnd) {\n            tight = false;\n          }\n          // Item become loose if finish with empty line,\n          // but we should filter last element, because it means list finish\n          prevEmptyEnd = state.line - ddLine > 1 && state.isEmpty(state.line - 1);\n\n          state.tShift[ddLine] = oldTShift;\n          state.tight = oldTight;\n          state.parentType = oldParentType;\n          state.blkIndent = oldIndent;\n          state.ddIndent = oldDDIndent;\n\n          state.tokens.push({\n            type: 'dd_close',\n            level: --state.level\n          });\n\n          itemLines[1] = nextLine = state.line;\n\n          if (nextLine >= endLine) {\n            break OUTER;\n          }\n\n          if (state.tShift[nextLine] < state.blkIndent) {\n            break OUTER;\n          }\n          contentStart = skipMarker(state, nextLine);\n          if (contentStart < 0) {\n            break;\n          }\n\n          ddLine = nextLine;\n\n          // go to the next loop iteration:\n          // insert DD tag and repeat checking\n        }\n\n        if (nextLine >= endLine) {\n          break;\n        }\n        dtLine = nextLine;\n\n        if (state.isEmpty(dtLine)) {\n          break;\n        }\n        if (state.tShift[dtLine] < state.blkIndent) {\n          break;\n        }\n\n        ddLine = dtLine + 1;\n        if (ddLine >= endLine) {\n          break;\n        }\n        if (state.isEmpty(ddLine)) {\n          ddLine++;\n        }\n        if (ddLine >= endLine) {\n          break;\n        }\n\n        if (state.tShift[ddLine] < state.blkIndent) {\n          break;\n        }\n        contentStart = skipMarker(state, ddLine);\n        if (contentStart < 0) {\n          break;\n        }\n\n        // go to the next loop iteration:\n        // insert DT and DD tags and repeat checking\n      }\n\n      // Finilize list\n      state.tokens.push({\n        type: 'dl_close',\n        level: --state.level\n      });\n      listLines[1] = nextLine;\n\n      state.line = nextLine;\n\n      // mark paragraphs tight if needed\n      if (tight) {\n        markTightParagraphs(state, listTokIdx);\n      }\n\n      return true;\n    };\n  }, {}], 32: [function (require, module, exports) {\n    // fences (``` lang, ~~~ lang)\n\n    'use strict';\n\n    module.exports = function fences(state, startLine, endLine, silent) {\n      var marker,\n          len,\n          params,\n          nextLine,\n          mem,\n          haveEndMarker = false,\n          pos = state.bMarks[startLine] + state.tShift[startLine],\n          max = state.eMarks[startLine];\n\n      if (pos + 3 > max) {\n        return false;\n      }\n\n      marker = state.src.charCodeAt(pos);\n\n      if (marker !== 0x7E /* ~ */ && marker !== 0x60 /* ` */) {\n          return false;\n        }\n\n      // scan marker length\n      mem = pos;\n      pos = state.skipChars(pos, marker);\n\n      len = pos - mem;\n\n      if (len < 3) {\n        return false;\n      }\n\n      params = state.src.slice(pos, max).trim();\n\n      if (params.indexOf('`') >= 0) {\n        return false;\n      }\n\n      // Since start is found, we can report success here in validation mode\n      if (silent) {\n        return true;\n      }\n\n      // search end of block\n      nextLine = startLine;\n\n      for (;;) {\n        nextLine++;\n        if (nextLine >= endLine) {\n          // unclosed block should be autoclosed by end of document.\n          // also block seems to be autoclosed by end of parent\n          break;\n        }\n\n        pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n        max = state.eMarks[nextLine];\n\n        if (pos < max && state.tShift[nextLine] < state.blkIndent) {\n          // non-empty line with negative indent should stop the list:\n          // - ```\n          //  test\n          break;\n        }\n\n        if (state.src.charCodeAt(pos) !== marker) {\n          continue;\n        }\n\n        if (state.tShift[nextLine] - state.blkIndent >= 4) {\n          // closing fence should be indented less than 4 spaces\n          continue;\n        }\n\n        pos = state.skipChars(pos, marker);\n\n        // closing code fence must be at least as long as the opening one\n        if (pos - mem < len) {\n          continue;\n        }\n\n        // make sure tail has spaces only\n        pos = state.skipSpaces(pos);\n\n        if (pos < max) {\n          continue;\n        }\n\n        haveEndMarker = true;\n        // found!\n        break;\n      }\n\n      // If a fence has heading spaces, they should be removed from its inner block\n      len = state.tShift[startLine];\n\n      state.line = nextLine + (haveEndMarker ? 1 : 0);\n      state.tokens.push({\n        type: 'fence',\n        params: params,\n        content: state.getLines(startLine + 1, nextLine, len, true),\n        lines: [startLine, state.line],\n        level: state.level\n      });\n\n      return true;\n    };\n  }, {}], 33: [function (require, module, exports) {\n    // Process footnote reference list\n\n    'use strict';\n\n    module.exports = function footnote(state, startLine, endLine, silent) {\n      var oldBMark,\n          oldTShift,\n          oldParentType,\n          pos,\n          label,\n          start = state.bMarks[startLine] + state.tShift[startLine],\n          max = state.eMarks[startLine];\n\n      // line should be at least 5 chars - \"[^x]:\"\n      if (start + 4 > max) {\n        return false;\n      }\n\n      if (state.src.charCodeAt(start) !== 0x5B /* [ */) {\n          return false;\n        }\n      if (state.src.charCodeAt(start + 1) !== 0x5E /* ^ */) {\n          return false;\n        }\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      for (pos = start + 2; pos < max; pos++) {\n        if (state.src.charCodeAt(pos) === 0x20) {\n          return false;\n        }\n        if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n            break;\n          }\n      }\n\n      if (pos === start + 2) {\n        return false;\n      } // no empty footnote labels\n      if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) {\n          return false;\n        }\n      if (silent) {\n        return true;\n      }\n      pos++;\n\n      if (!state.env.footnotes) {\n        state.env.footnotes = {};\n      }\n      if (!state.env.footnotes.refs) {\n        state.env.footnotes.refs = {};\n      }\n      label = state.src.slice(start + 2, pos - 2);\n      state.env.footnotes.refs[':' + label] = -1;\n\n      state.tokens.push({\n        type: 'footnote_reference_open',\n        label: label,\n        level: state.level++\n      });\n\n      oldBMark = state.bMarks[startLine];\n      oldTShift = state.tShift[startLine];\n      oldParentType = state.parentType;\n      state.tShift[startLine] = state.skipSpaces(pos) - pos;\n      state.bMarks[startLine] = pos;\n      state.blkIndent += 4;\n      state.parentType = 'footnote';\n\n      if (state.tShift[startLine] < state.blkIndent) {\n        state.tShift[startLine] += state.blkIndent;\n        state.bMarks[startLine] -= state.blkIndent;\n      }\n\n      state.parser.tokenize(state, startLine, endLine, true);\n\n      state.parentType = oldParentType;\n      state.blkIndent -= 4;\n      state.tShift[startLine] = oldTShift;\n      state.bMarks[startLine] = oldBMark;\n\n      state.tokens.push({\n        type: 'footnote_reference_close',\n        level: --state.level\n      });\n\n      return true;\n    };\n  }, {}], 34: [function (require, module, exports) {\n    // heading (#, ##, ...)\n\n    'use strict';\n\n    module.exports = function heading(state, startLine, endLine, silent) {\n      var ch,\n          level,\n          tmp,\n          pos = state.bMarks[startLine] + state.tShift[startLine],\n          max = state.eMarks[startLine];\n\n      if (pos >= max) {\n        return false;\n      }\n\n      ch = state.src.charCodeAt(pos);\n\n      if (ch !== 0x23 /* # */ || pos >= max) {\n        return false;\n      }\n\n      // count heading level\n      level = 1;\n      ch = state.src.charCodeAt(++pos);\n      while (ch === 0x23 /* # */ && pos < max && level <= 6) {\n        level++;\n        ch = state.src.charCodeAt(++pos);\n      }\n\n      if (level > 6 || pos < max && ch !== 0x20 /* space */) {\n        return false;\n      }\n\n      if (silent) {\n        return true;\n      }\n\n      // Let's cut tails like '    ###  ' from the end of string\n\n      max = state.skipCharsBack(max, 0x20, pos); // space\n      tmp = state.skipCharsBack(max, 0x23, pos); // #\n      if (tmp > pos && state.src.charCodeAt(tmp - 1) === 0x20 /* space */) {\n          max = tmp;\n        }\n\n      state.line = startLine + 1;\n\n      state.tokens.push({ type: 'heading_open',\n        hLevel: level,\n        lines: [startLine, state.line],\n        level: state.level\n      });\n\n      // only if header is not empty\n      if (pos < max) {\n        state.tokens.push({\n          type: 'inline',\n          content: state.src.slice(pos, max).trim(),\n          level: state.level + 1,\n          lines: [startLine, state.line],\n          children: []\n        });\n      }\n      state.tokens.push({ type: 'heading_close', hLevel: level, level: state.level });\n\n      return true;\n    };\n  }, {}], 35: [function (require, module, exports) {\n    // Horizontal rule\n\n    'use strict';\n\n    module.exports = function hr(state, startLine, endLine, silent) {\n      var marker,\n          cnt,\n          ch,\n          pos = state.bMarks[startLine],\n          max = state.eMarks[startLine];\n\n      pos += state.tShift[startLine];\n\n      if (pos > max) {\n        return false;\n      }\n\n      marker = state.src.charCodeAt(pos++);\n\n      // Check hr marker\n      if (marker !== 0x2A /* * */ && marker !== 0x2D /* - */ && marker !== 0x5F /* _ */) {\n          return false;\n        }\n\n      // markers can be mixed with spaces, but there should be at least 3 one\n\n      cnt = 1;\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos++);\n        if (ch !== marker && ch !== 0x20 /* space */) {\n            return false;\n          }\n        if (ch === marker) {\n          cnt++;\n        }\n      }\n\n      if (cnt < 3) {\n        return false;\n      }\n\n      if (silent) {\n        return true;\n      }\n\n      state.line = startLine + 1;\n      state.tokens.push({\n        type: 'hr',\n        lines: [startLine, state.line],\n        level: state.level\n      });\n\n      return true;\n    };\n  }, {}], 36: [function (require, module, exports) {\n    // HTML block\n\n    'use strict';\n\n    var block_names = require('../common/html_blocks');\n\n    var HTML_TAG_OPEN_RE = /^<([a-zA-Z]{1,15})[\\s\\/>]/;\n    var HTML_TAG_CLOSE_RE = /^<\\/([a-zA-Z]{1,15})[\\s>]/;\n\n    function isLetter(ch) {\n      /*eslint no-bitwise:0*/\n      var lc = ch | 0x20; // to lower case\n      return lc >= 0x61 /* a */ && lc <= 0x7a /* z */;\n    }\n\n    module.exports = function htmlblock(state, startLine, endLine, silent) {\n      var ch,\n          match,\n          nextLine,\n          pos = state.bMarks[startLine],\n          max = state.eMarks[startLine],\n          shift = state.tShift[startLine];\n\n      pos += shift;\n\n      if (!state.options.html) {\n        return false;\n      }\n\n      if (shift > 3 || pos + 2 >= max) {\n        return false;\n      }\n\n      if (state.src.charCodeAt(pos) !== 0x3C /* < */) {\n          return false;\n        }\n\n      ch = state.src.charCodeAt(pos + 1);\n\n      if (ch === 0x21 /* ! */ || ch === 0x3F /* ? */) {\n          // Directive start / comment start / processing instruction start\n          if (silent) {\n            return true;\n          }\n        } else if (ch === 0x2F /* / */ || isLetter(ch)) {\n\n        // Probably start or end of tag\n        if (ch === 0x2F /* \\ */) {\n            // closing tag\n            match = state.src.slice(pos, max).match(HTML_TAG_CLOSE_RE);\n            if (!match) {\n              return false;\n            }\n          } else {\n          // opening tag\n          match = state.src.slice(pos, max).match(HTML_TAG_OPEN_RE);\n          if (!match) {\n            return false;\n          }\n        }\n        // Make sure tag name is valid\n        if (block_names[match[1].toLowerCase()] !== true) {\n          return false;\n        }\n        if (silent) {\n          return true;\n        }\n      } else {\n        return false;\n      }\n\n      // If we are here - we detected HTML block.\n      // Let's roll down till empty line (block end).\n      nextLine = startLine + 1;\n      while (nextLine < state.lineMax && !state.isEmpty(nextLine)) {\n        nextLine++;\n      }\n\n      state.line = nextLine;\n      state.tokens.push({\n        type: 'htmlblock',\n        level: state.level,\n        lines: [startLine, state.line],\n        content: state.getLines(startLine, nextLine, 0, true)\n      });\n\n      return true;\n    };\n  }, { \"../common/html_blocks\": 10 }], 37: [function (require, module, exports) {\n    // lheading (---, ===)\n\n    'use strict';\n\n    module.exports = function lheading(state, startLine, endLine /*, silent*/) {\n      var marker,\n          pos,\n          max,\n          next = startLine + 1;\n\n      if (next >= endLine) {\n        return false;\n      }\n      if (state.tShift[next] < state.blkIndent) {\n        return false;\n      }\n\n      // Scan next line\n\n      if (state.tShift[next] - state.blkIndent > 3) {\n        return false;\n      }\n\n      pos = state.bMarks[next] + state.tShift[next];\n      max = state.eMarks[next];\n\n      if (pos >= max) {\n        return false;\n      }\n\n      marker = state.src.charCodeAt(pos);\n\n      if (marker !== 0x2D /* - */ && marker !== 0x3D /* = */) {\n          return false;\n        }\n\n      pos = state.skipChars(pos, marker);\n\n      pos = state.skipSpaces(pos);\n\n      if (pos < max) {\n        return false;\n      }\n\n      pos = state.bMarks[startLine] + state.tShift[startLine];\n\n      state.line = next + 1;\n      state.tokens.push({\n        type: 'heading_open',\n        hLevel: marker === 0x3D /* = */ ? 1 : 2,\n        lines: [startLine, state.line],\n        level: state.level\n      });\n      state.tokens.push({\n        type: 'inline',\n        content: state.src.slice(pos, state.eMarks[startLine]).trim(),\n        level: state.level + 1,\n        lines: [startLine, state.line - 1],\n        children: []\n      });\n      state.tokens.push({\n        type: 'heading_close',\n        hLevel: marker === 0x3D /* = */ ? 1 : 2,\n        level: state.level\n      });\n\n      return true;\n    };\n  }, {}], 38: [function (require, module, exports) {\n    // Lists\n\n    'use strict';\n\n    // Search `[-+*][\\n ]`, returns next pos arter marker on success\n    // or -1 on fail.\n\n    function skipBulletListMarker(state, startLine) {\n      var marker, pos, max;\n\n      pos = state.bMarks[startLine] + state.tShift[startLine];\n      max = state.eMarks[startLine];\n\n      if (pos >= max) {\n        return -1;\n      }\n\n      marker = state.src.charCodeAt(pos++);\n      // Check bullet\n      if (marker !== 0x2A /* * */ && marker !== 0x2D /* - */ && marker !== 0x2B /* + */) {\n          return -1;\n        }\n\n      if (pos < max && state.src.charCodeAt(pos) !== 0x20) {\n        // \" 1.test \" - is not a list item\n        return -1;\n      }\n\n      return pos;\n    }\n\n    // Search `\\d+[.)][\\n ]`, returns next pos arter marker on success\n    // or -1 on fail.\n    function skipOrderedListMarker(state, startLine) {\n      var ch,\n          pos = state.bMarks[startLine] + state.tShift[startLine],\n          max = state.eMarks[startLine];\n\n      if (pos + 1 >= max) {\n        return -1;\n      }\n\n      ch = state.src.charCodeAt(pos++);\n\n      if (ch < 0x30 /* 0 */ || ch > 0x39 /* 9 */) {\n          return -1;\n        }\n\n      for (;;) {\n        // EOL -> fail\n        if (pos >= max) {\n          return -1;\n        }\n\n        ch = state.src.charCodeAt(pos++);\n\n        if (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) {\n            continue;\n          }\n\n        // found valid marker\n        if (ch === 0x29 /* ) */ || ch === 0x2e /* . */) {\n            break;\n          }\n\n        return -1;\n      }\n\n      if (pos < max && state.src.charCodeAt(pos) !== 0x20 /* space */) {\n          // \" 1.test \" - is not a list item\n          return -1;\n        }\n      return pos;\n    }\n\n    function markTightParagraphs(state, idx) {\n      var i,\n          l,\n          level = state.level + 2;\n\n      for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n        if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n          state.tokens[i + 2].tight = true;\n          state.tokens[i].tight = true;\n          i += 2;\n        }\n      }\n    }\n\n    module.exports = function list(state, startLine, endLine, silent) {\n      var nextLine,\n          indent,\n          oldTShift,\n          oldIndent,\n          oldTight,\n          oldParentType,\n          start,\n          posAfterMarker,\n          max,\n          indentAfterMarker,\n          markerValue,\n          markerCharCode,\n          isOrdered,\n          contentStart,\n          listTokIdx,\n          prevEmptyEnd,\n          listLines,\n          itemLines,\n          tight = true,\n          terminatorRules,\n          i,\n          l,\n          terminate;\n\n      // Detect list type and position after marker\n      if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n        isOrdered = true;\n      } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n        isOrdered = false;\n      } else {\n        return false;\n      }\n\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      // We should terminate list on style change. Remember first one to compare.\n      markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n      // For validation mode we can terminate immediately\n      if (silent) {\n        return true;\n      }\n\n      // Start list\n      listTokIdx = state.tokens.length;\n\n      if (isOrdered) {\n        start = state.bMarks[startLine] + state.tShift[startLine];\n        markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n        state.tokens.push({\n          type: 'ordered_list_open',\n          order: markerValue,\n          lines: listLines = [startLine, 0],\n          level: state.level++\n        });\n      } else {\n        state.tokens.push({\n          type: 'bullet_list_open',\n          lines: listLines = [startLine, 0],\n          level: state.level++\n        });\n      }\n\n      //\n      // Iterate list items\n      //\n\n      nextLine = startLine;\n      prevEmptyEnd = false;\n      terminatorRules = state.parser.ruler.getRules('list');\n\n      while (nextLine < endLine) {\n        contentStart = state.skipSpaces(posAfterMarker);\n        max = state.eMarks[nextLine];\n\n        if (contentStart >= max) {\n          // trimming space in \"-    \\n  3\" case, indent is 1 here\n          indentAfterMarker = 1;\n        } else {\n          indentAfterMarker = contentStart - posAfterMarker;\n        }\n\n        // If we have more than 4 spaces, the indent is 1\n        // (the rest is just indented code block)\n        if (indentAfterMarker > 4) {\n          indentAfterMarker = 1;\n        }\n\n        // If indent is less than 1, assume that it's one, example:\n        //  \"-\\n  test\"\n        if (indentAfterMarker < 1) {\n          indentAfterMarker = 1;\n        }\n\n        // \"  -  test\"\n        //  ^^^^^ - calculating total length of this thing\n        indent = posAfterMarker - state.bMarks[nextLine] + indentAfterMarker;\n\n        // Run subparser & write tokens\n        state.tokens.push({\n          type: 'list_item_open',\n          lines: itemLines = [startLine, 0],\n          level: state.level++\n        });\n\n        oldIndent = state.blkIndent;\n        oldTight = state.tight;\n        oldTShift = state.tShift[startLine];\n        oldParentType = state.parentType;\n        state.tShift[startLine] = contentStart - state.bMarks[startLine];\n        state.blkIndent = indent;\n        state.tight = true;\n        state.parentType = 'list';\n\n        state.parser.tokenize(state, startLine, endLine, true);\n\n        // If any of list item is tight, mark list as tight\n        if (!state.tight || prevEmptyEnd) {\n          tight = false;\n        }\n        // Item become loose if finish with empty line,\n        // but we should filter last element, because it means list finish\n        prevEmptyEnd = state.line - startLine > 1 && state.isEmpty(state.line - 1);\n\n        state.blkIndent = oldIndent;\n        state.tShift[startLine] = oldTShift;\n        state.tight = oldTight;\n        state.parentType = oldParentType;\n\n        state.tokens.push({\n          type: 'list_item_close',\n          level: --state.level\n        });\n\n        nextLine = startLine = state.line;\n        itemLines[1] = nextLine;\n        contentStart = state.bMarks[startLine];\n\n        if (nextLine >= endLine) {\n          break;\n        }\n\n        if (state.isEmpty(nextLine)) {\n          break;\n        }\n\n        //\n        // Try to check if list is terminated or continued.\n        //\n        if (state.tShift[nextLine] < state.blkIndent) {\n          break;\n        }\n\n        // fail if terminating block found\n        terminate = false;\n        for (i = 0, l = terminatorRules.length; i < l; i++) {\n          if (terminatorRules[i](state, nextLine, endLine, true)) {\n            terminate = true;\n            break;\n          }\n        }\n        if (terminate) {\n          break;\n        }\n\n        // fail if list has another type\n        if (isOrdered) {\n          posAfterMarker = skipOrderedListMarker(state, nextLine);\n          if (posAfterMarker < 0) {\n            break;\n          }\n        } else {\n          posAfterMarker = skipBulletListMarker(state, nextLine);\n          if (posAfterMarker < 0) {\n            break;\n          }\n        }\n\n        if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {\n          break;\n        }\n      }\n\n      // Finilize list\n      state.tokens.push({\n        type: isOrdered ? 'ordered_list_close' : 'bullet_list_close',\n        level: --state.level\n      });\n      listLines[1] = nextLine;\n\n      state.line = nextLine;\n\n      // mark paragraphs tight if needed\n      if (tight) {\n        markTightParagraphs(state, listTokIdx);\n      }\n\n      return true;\n    };\n  }, {}], 39: [function (require, module, exports) {\n    // Paragraph\n\n    'use strict';\n\n    module.exports = function paragraph(state, startLine /*, endLine*/) {\n      var endLine,\n          content,\n          terminate,\n          i,\n          l,\n          nextLine = startLine + 1,\n          terminatorRules;\n\n      endLine = state.lineMax;\n\n      // jump line-by-line until empty one or EOF\n      if (nextLine < endLine && !state.isEmpty(nextLine)) {\n        terminatorRules = state.parser.ruler.getRules('paragraph');\n\n        for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n          // this would be a code block normally, but after paragraph\n          // it's considered a lazy continuation regardless of what's there\n          if (state.tShift[nextLine] - state.blkIndent > 3) {\n            continue;\n          }\n\n          // Some tags can terminate paragraph without empty line.\n          terminate = false;\n          for (i = 0, l = terminatorRules.length; i < l; i++) {\n            if (terminatorRules[i](state, nextLine, endLine, true)) {\n              terminate = true;\n              break;\n            }\n          }\n          if (terminate) {\n            break;\n          }\n        }\n      }\n\n      content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n      state.line = nextLine;\n      if (content.length) {\n        state.tokens.push({\n          type: 'paragraph_open',\n          tight: false,\n          lines: [startLine, state.line],\n          level: state.level\n        });\n        state.tokens.push({\n          type: 'inline',\n          content: content,\n          level: state.level + 1,\n          lines: [startLine, state.line],\n          children: []\n        });\n        state.tokens.push({\n          type: 'paragraph_close',\n          tight: false,\n          level: state.level\n        });\n      }\n\n      return true;\n    };\n  }, {}], 40: [function (require, module, exports) {\n    // Parser state class\n\n    'use strict';\n\n    function StateBlock(src, parser, options, env, tokens) {\n      var ch, s, start, pos, len, indent, indent_found;\n\n      this.src = src;\n\n      // Shortcuts to simplify nested calls\n      this.parser = parser;\n\n      this.options = options;\n\n      this.env = env;\n\n      //\n      // Internal state vartiables\n      //\n\n      this.tokens = tokens;\n\n      this.bMarks = []; // line begin offsets for fast jumps\n      this.eMarks = []; // line end offsets for fast jumps\n      this.tShift = []; // indent for each line\n\n      // block parser variables\n      this.blkIndent = 0; // required block content indent\n      // (for example, if we are in list)\n      this.line = 0; // line index in src\n      this.lineMax = 0; // lines count\n      this.tight = false; // loose/tight mode for lists\n      this.parentType = 'root'; // if `list`, block parser stops on two newlines\n      this.ddIndent = -1; // indent of the current dd block (-1 if there isn't any)\n\n      this.level = 0;\n\n      // renderer\n      this.result = '';\n\n      // Create caches\n      // Generate markers.\n      s = this.src;\n      indent = 0;\n      indent_found = false;\n\n      for (start = pos = indent = 0, len = s.length; pos < len; pos++) {\n        ch = s.charCodeAt(pos);\n\n        if (!indent_found) {\n          if (ch === 0x20 /* space */) {\n              indent++;\n              continue;\n            } else {\n            indent_found = true;\n          }\n        }\n\n        if (ch === 0x0A || pos === len - 1) {\n          if (ch !== 0x0A) {\n            pos++;\n          }\n          this.bMarks.push(start);\n          this.eMarks.push(pos);\n          this.tShift.push(indent);\n\n          indent_found = false;\n          indent = 0;\n          start = pos + 1;\n        }\n      }\n\n      // Push fake entry to simplify cache bounds checks\n      this.bMarks.push(s.length);\n      this.eMarks.push(s.length);\n      this.tShift.push(0);\n\n      this.lineMax = this.bMarks.length - 1; // don't count last fake line\n    }\n\n    StateBlock.prototype.isEmpty = function isEmpty(line) {\n      return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n    };\n\n    StateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n      for (var max = this.lineMax; from < max; from++) {\n        if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n          break;\n        }\n      }\n      return from;\n    };\n\n    // Skip spaces from given position.\n    StateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n      for (var max = this.src.length; pos < max; pos++) {\n        if (this.src.charCodeAt(pos) !== 0x20 /* space */) {\n            break;\n          }\n      }\n      return pos;\n    };\n\n    // Skip char codes from given position\n    StateBlock.prototype.skipChars = function skipChars(pos, code) {\n      for (var max = this.src.length; pos < max; pos++) {\n        if (this.src.charCodeAt(pos) !== code) {\n          break;\n        }\n      }\n      return pos;\n    };\n\n    // Skip char codes reverse from given position - 1\n    StateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n      if (pos <= min) {\n        return pos;\n      }\n\n      while (pos > min) {\n        if (code !== this.src.charCodeAt(--pos)) {\n          return pos + 1;\n        }\n      }\n      return pos;\n    };\n\n    // cut lines range from source.\n    StateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n      var i,\n          first,\n          last,\n          queue,\n          shift,\n          line = begin;\n\n      if (begin >= end) {\n        return '';\n      }\n\n      // Opt: don't use push queue for single line;\n      if (line + 1 === end) {\n        first = this.bMarks[line] + Math.min(this.tShift[line], indent);\n        last = keepLastLF ? this.eMarks[line] + 1 : this.eMarks[line];\n        return this.src.slice(first, last);\n      }\n\n      queue = new Array(end - begin);\n\n      for (i = 0; line < end; line++, i++) {\n        shift = this.tShift[line];\n        if (shift > indent) {\n          shift = indent;\n        }\n        if (shift < 0) {\n          shift = 0;\n        }\n\n        first = this.bMarks[line] + shift;\n\n        if (line + 1 < end || keepLastLF) {\n          // No need for bounds check because we have fake entry on tail.\n          last = this.eMarks[line] + 1;\n        } else {\n          last = this.eMarks[line];\n        }\n\n        queue[i] = this.src.slice(first, last);\n      }\n\n      return queue.join('');\n    };\n\n    module.exports = StateBlock;\n  }, {}], 41: [function (require, module, exports) {\n    // GFM table, non-standard\n\n    'use strict';\n\n    function getLine(state, line) {\n      var pos = state.bMarks[line] + state.blkIndent,\n          max = state.eMarks[line];\n\n      return state.src.substr(pos, max - pos);\n    }\n\n    module.exports = function table(state, startLine, endLine, silent) {\n      var ch, lineText, pos, i, nextLine, rows, cell, aligns, t, tableLines, tbodyLines;\n\n      // should have at least three lines\n      if (startLine + 2 > endLine) {\n        return false;\n      }\n\n      nextLine = startLine + 1;\n\n      if (state.tShift[nextLine] < state.blkIndent) {\n        return false;\n      }\n\n      // first character of the second line should be '|' or '-'\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      if (pos >= state.eMarks[nextLine]) {\n        return false;\n      }\n\n      ch = state.src.charCodeAt(pos);\n      if (ch !== 0x7C /* | */ && ch !== 0x2D /* - */ && ch !== 0x3A /* : */) {\n          return false;\n        }\n\n      lineText = getLine(state, startLine + 1);\n      if (!/^[-:| ]+$/.test(lineText)) {\n        return false;\n      }\n\n      rows = lineText.split('|');\n      if (rows <= 2) {\n        return false;\n      }\n      aligns = [];\n      for (i = 0; i < rows.length; i++) {\n        t = rows[i].trim();\n        if (!t) {\n          // allow empty columns before and after table, but not in between columns;\n          // e.g. allow ` |---| `, disallow ` ---||--- `\n          if (i === 0 || i === rows.length - 1) {\n            continue;\n          } else {\n            return false;\n          }\n        }\n\n        if (!/^:?-+:?$/.test(t)) {\n          return false;\n        }\n        if (t.charCodeAt(t.length - 1) === 0x3A /* : */) {\n            aligns.push(t.charCodeAt(0) === 0x3A /* : */ ? 'center' : 'right');\n          } else if (t.charCodeAt(0) === 0x3A /* : */) {\n            aligns.push('left');\n          } else {\n          aligns.push('');\n        }\n      }\n\n      lineText = getLine(state, startLine).trim();\n      if (lineText.indexOf('|') === -1) {\n        return false;\n      }\n      rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n      if (aligns.length !== rows.length) {\n        return false;\n      }\n      if (silent) {\n        return true;\n      }\n\n      state.tokens.push({\n        type: 'table_open',\n        lines: tableLines = [startLine, 0],\n        level: state.level++\n      });\n      state.tokens.push({\n        type: 'thead_open',\n        lines: [startLine, startLine + 1],\n        level: state.level++\n      });\n\n      state.tokens.push({\n        type: 'tr_open',\n        lines: [startLine, startLine + 1],\n        level: state.level++\n      });\n      for (i = 0; i < rows.length; i++) {\n        state.tokens.push({\n          type: 'th_open',\n          align: aligns[i],\n          lines: [startLine, startLine + 1],\n          level: state.level++\n        });\n        state.tokens.push({\n          type: 'inline',\n          content: rows[i].trim(),\n          lines: [startLine, startLine + 1],\n          level: state.level,\n          children: []\n        });\n        state.tokens.push({ type: 'th_close', level: --state.level });\n      }\n      state.tokens.push({ type: 'tr_close', level: --state.level });\n      state.tokens.push({ type: 'thead_close', level: --state.level });\n\n      state.tokens.push({\n        type: 'tbody_open',\n        lines: tbodyLines = [startLine + 2, 0],\n        level: state.level++\n      });\n\n      for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n        if (state.tShift[nextLine] < state.blkIndent) {\n          break;\n        }\n\n        lineText = getLine(state, nextLine).trim();\n        if (lineText.indexOf('|') === -1) {\n          break;\n        }\n        rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n\n        state.tokens.push({ type: 'tr_open', level: state.level++ });\n        for (i = 0; i < rows.length; i++) {\n          state.tokens.push({ type: 'td_open', align: aligns[i], level: state.level++ });\n          // 0x7c === '|'\n          cell = rows[i].substring(rows[i].charCodeAt(0) === 0x7c ? 1 : 0, rows[i].charCodeAt(rows[i].length - 1) === 0x7c ? rows[i].length - 1 : rows[i].length).trim();\n          state.tokens.push({\n            type: 'inline',\n            content: cell,\n            level: state.level,\n            children: []\n          });\n          state.tokens.push({ type: 'td_close', level: --state.level });\n        }\n        state.tokens.push({ type: 'tr_close', level: --state.level });\n      }\n      state.tokens.push({ type: 'tbody_close', level: --state.level });\n      state.tokens.push({ type: 'table_close', level: --state.level });\n\n      tableLines[1] = tbodyLines[1] = nextLine;\n      state.line = nextLine;\n      return true;\n    };\n  }, {}], 42: [function (require, module, exports) {\n    // Parse abbreviation definitions, i.e. `*[abbr]: description`\n    //\n\n    'use strict';\n\n    var StateInline = require('../rules_inline/state_inline');\n    var parseLinkLabel = require('../helpers/parse_link_label');\n\n    function parseAbbr(str, parserInline, options, env) {\n      var state, labelEnd, pos, max, label, title;\n\n      if (str.charCodeAt(0) !== 0x2A /* * */) {\n          return -1;\n        }\n      if (str.charCodeAt(1) !== 0x5B /* [ */) {\n          return -1;\n        }\n\n      if (str.indexOf(']:') === -1) {\n        return -1;\n      }\n\n      state = new StateInline(str, parserInline, options, env, []);\n      labelEnd = parseLinkLabel(state, 1);\n\n      if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A /* : */) {\n          return -1;\n        }\n\n      max = state.posMax;\n\n      // abbr title is always one line, so looking for ending \"\\n\" here\n      for (pos = labelEnd + 2; pos < max; pos++) {\n        if (state.src.charCodeAt(pos) === 0x0A) {\n          break;\n        }\n      }\n\n      label = str.slice(2, labelEnd);\n      title = str.slice(labelEnd + 2, pos).trim();\n      if (title.length === 0) {\n        return -1;\n      }\n      if (!env.abbreviations) {\n        env.abbreviations = {};\n      }\n      // prepend ':' to avoid conflict with Object.prototype members\n      if (typeof env.abbreviations[':' + label] === 'undefined') {\n        env.abbreviations[':' + label] = title;\n      }\n\n      return pos;\n    }\n\n    module.exports = function abbr(state) {\n      var tokens = state.tokens,\n          i,\n          l,\n          content,\n          pos;\n\n      if (state.inlineMode) {\n        return;\n      }\n\n      // Parse inlines\n      for (i = 1, l = tokens.length - 1; i < l; i++) {\n        if (tokens[i - 1].type === 'paragraph_open' && tokens[i].type === 'inline' && tokens[i + 1].type === 'paragraph_close') {\n\n          content = tokens[i].content;\n          while (content.length) {\n            pos = parseAbbr(content, state.inline, state.options, state.env);\n            if (pos < 0) {\n              break;\n            }\n            content = content.slice(pos).trim();\n          }\n\n          tokens[i].content = content;\n          if (!content.length) {\n            tokens[i - 1].tight = true;\n            tokens[i + 1].tight = true;\n          }\n        }\n      }\n    };\n  }, { \"../helpers/parse_link_label\": 20, \"../rules_inline/state_inline\": 64 }], 43: [function (require, module, exports) {\n    // Enclose abbreviations in <abbr> tags\n    //\n    'use strict';\n\n    var PUNCT_CHARS = ' \\n()[]\\'\".,!?-';\n\n    // from Google closure library\n    // http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021\n    function regEscape(s) {\n      return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\n    }\n\n    module.exports = function abbr2(state) {\n      var i,\n          j,\n          l,\n          tokens,\n          token,\n          text,\n          nodes,\n          pos,\n          level,\n          reg,\n          m,\n          regText,\n          blockTokens = state.tokens;\n\n      if (!state.env.abbreviations) {\n        return;\n      }\n      if (!state.env.abbrRegExp) {\n        regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])' + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n          return x.substr(1);\n        }).sort(function (a, b) {\n          return b.length - a.length;\n        }).map(regEscape).join('|') + ')' + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';\n        state.env.abbrRegExp = new RegExp(regText, 'g');\n      }\n      reg = state.env.abbrRegExp;\n\n      for (j = 0, l = blockTokens.length; j < l; j++) {\n        if (blockTokens[j].type !== 'inline') {\n          continue;\n        }\n        tokens = blockTokens[j].children;\n\n        // We scan from the end, to keep position when new tags added.\n        for (i = tokens.length - 1; i >= 0; i--) {\n          token = tokens[i];\n          if (token.type !== 'text') {\n            continue;\n          }\n\n          pos = 0;\n          text = token.content;\n          reg.lastIndex = 0;\n          level = token.level;\n          nodes = [];\n\n          while (m = reg.exec(text)) {\n            if (reg.lastIndex > pos) {\n              nodes.push({\n                type: 'text',\n                content: text.slice(pos, m.index + m[1].length),\n                level: level\n              });\n            }\n\n            nodes.push({\n              type: 'abbr_open',\n              title: state.env.abbreviations[':' + m[2]],\n              level: level++\n            });\n            nodes.push({\n              type: 'text',\n              content: m[2],\n              level: level\n            });\n            nodes.push({\n              type: 'abbr_close',\n              level: --level\n            });\n            pos = reg.lastIndex - m[3].length;\n          }\n\n          if (!nodes.length) {\n            continue;\n          }\n\n          if (pos < text.length) {\n            nodes.push({\n              type: 'text',\n              content: text.slice(pos),\n              level: level\n            });\n          }\n\n          // replace current node\n          blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n        }\n      }\n    };\n  }, {}], 44: [function (require, module, exports) {\n    'use strict';\n\n    module.exports = function block(state) {\n\n      if (state.inlineMode) {\n        state.tokens.push({\n          type: 'inline',\n          content: state.src.replace(/\\n/g, ' ').trim(),\n          level: 0,\n          lines: [0, 1],\n          children: []\n        });\n      } else {\n        state.block.parse(state.src, state.options, state.env, state.tokens);\n      }\n    };\n  }, {}], 45: [function (require, module, exports) {\n    'use strict';\n\n    module.exports = function footnote_block(state) {\n      var i,\n          l,\n          j,\n          t,\n          lastParagraph,\n          list,\n          tokens,\n          current,\n          currentLabel,\n          level = 0,\n          insideRef = false,\n          refTokens = {};\n\n      if (!state.env.footnotes) {\n        return;\n      }\n\n      state.tokens = state.tokens.filter(function (tok) {\n        if (tok.type === 'footnote_reference_open') {\n          insideRef = true;\n          current = [];\n          currentLabel = tok.label;\n          return false;\n        }\n        if (tok.type === 'footnote_reference_close') {\n          insideRef = false;\n          // prepend ':' to avoid conflict with Object.prototype members\n          refTokens[':' + currentLabel] = current;\n          return false;\n        }\n        if (insideRef) {\n          current.push(tok);\n        }\n        return !insideRef;\n      });\n\n      if (!state.env.footnotes.list) {\n        return;\n      }\n      list = state.env.footnotes.list;\n\n      state.tokens.push({\n        type: 'footnote_block_open',\n        level: level++\n      });\n      for (i = 0, l = list.length; i < l; i++) {\n        state.tokens.push({\n          type: 'footnote_open',\n          id: i,\n          level: level++\n        });\n\n        if (list[i].tokens) {\n          tokens = [];\n          tokens.push({\n            type: 'paragraph_open',\n            tight: false,\n            level: level++\n          });\n          tokens.push({\n            type: 'inline',\n            content: '',\n            level: level,\n            children: list[i].tokens\n          });\n          tokens.push({\n            type: 'paragraph_close',\n            tight: false,\n            level: --level\n          });\n        } else if (list[i].label) {\n          tokens = refTokens[':' + list[i].label];\n        }\n\n        state.tokens = state.tokens.concat(tokens);\n        if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n          lastParagraph = state.tokens.pop();\n        } else {\n          lastParagraph = null;\n        }\n\n        t = list[i].count > 0 ? list[i].count : 1;\n        for (j = 0; j < t; j++) {\n          state.tokens.push({\n            type: 'footnote_anchor',\n            id: i,\n            subId: j,\n            level: level\n          });\n        }\n\n        if (lastParagraph) {\n          state.tokens.push(lastParagraph);\n        }\n\n        state.tokens.push({\n          type: 'footnote_close',\n          level: --level\n        });\n      }\n      state.tokens.push({\n        type: 'footnote_block_close',\n        level: --level\n      });\n    };\n  }, {}], 46: [function (require, module, exports) {\n    'use strict';\n\n    module.exports = function inline(state) {\n      var tokens = state.tokens,\n          tok,\n          i,\n          l;\n\n      // Parse inlines\n      for (i = 0, l = tokens.length; i < l; i++) {\n        tok = tokens[i];\n        if (tok.type === 'inline') {\n          state.inline.parse(tok.content, state.options, state.env, tok.children);\n        }\n      }\n    };\n  }, {}], 47: [function (require, module, exports) {\n    // Replace link-like texts with link nodes.\n    //\n    // Currently restricted by `inline.validateLink()` to http/https/ftp\n    //\n    'use strict';\n\n    var Autolinker = require('autolinker');\n\n    var LINK_SCAN_RE = /www|@|\\:\\/\\//;\n\n    function isLinkOpen(str) {\n      return (/^<a[>\\s]/i.test(str)\n      );\n    }\n    function isLinkClose(str) {\n      return (/^<\\/a\\s*>/i.test(str)\n      );\n    }\n\n    // Stupid fabric to avoid singletons, for thread safety.\n    // Required for engines like Nashorn.\n    //\n    function createLinkifier() {\n      var links = [];\n      var autolinker = new Autolinker({\n        stripPrefix: false,\n        url: true,\n        email: true,\n        twitter: false,\n        replaceFn: function replaceFn(linker, match) {\n          // Only collect matched strings but don't change anything.\n          switch (match.getType()) {\n            /*eslint default-case:0*/\n            case 'url':\n              links.push({\n                text: match.matchedText,\n                url: match.getUrl()\n              });\n              break;\n            case 'email':\n              links.push({\n                text: match.matchedText,\n                // normalize email protocol\n                url: 'mailto:' + match.getEmail().replace(/^mailto:/i, '')\n              });\n              break;\n          }\n          return false;\n        }\n      });\n\n      return {\n        links: links,\n        autolinker: autolinker\n      };\n    }\n\n    module.exports = function linkify(state) {\n      var i,\n          j,\n          l,\n          tokens,\n          token,\n          text,\n          nodes,\n          ln,\n          pos,\n          level,\n          htmlLinkLevel,\n          blockTokens = state.tokens,\n          linkifier = null,\n          links,\n          autolinker;\n\n      if (!state.options.linkify) {\n        return;\n      }\n\n      for (j = 0, l = blockTokens.length; j < l; j++) {\n        if (blockTokens[j].type !== 'inline') {\n          continue;\n        }\n        tokens = blockTokens[j].children;\n\n        htmlLinkLevel = 0;\n\n        // We scan from the end, to keep position when new tags added.\n        // Use reversed logic in links start/end match\n        for (i = tokens.length - 1; i >= 0; i--) {\n          token = tokens[i];\n\n          // Skip content of markdown links\n          if (token.type === 'link_close') {\n            i--;\n            while (tokens[i].level !== token.level && tokens[i].type !== 'link_open') {\n              i--;\n            }\n            continue;\n          }\n\n          // Skip content of html tag links\n          if (token.type === 'htmltag') {\n            if (isLinkOpen(token.content) && htmlLinkLevel > 0) {\n              htmlLinkLevel--;\n            }\n            if (isLinkClose(token.content)) {\n              htmlLinkLevel++;\n            }\n          }\n          if (htmlLinkLevel > 0) {\n            continue;\n          }\n\n          if (token.type === 'text' && LINK_SCAN_RE.test(token.content)) {\n\n            // Init linkifier in lazy manner, only if required.\n            if (!linkifier) {\n              linkifier = createLinkifier();\n              links = linkifier.links;\n              autolinker = linkifier.autolinker;\n            }\n\n            text = token.content;\n            links.length = 0;\n            autolinker.link(text);\n\n            if (!links.length) {\n              continue;\n            }\n\n            // Now split string to nodes\n            nodes = [];\n            level = token.level;\n\n            for (ln = 0; ln < links.length; ln++) {\n\n              if (!state.inline.validateLink(links[ln].url)) {\n                continue;\n              }\n\n              pos = text.indexOf(links[ln].text);\n\n              if (pos) {\n                level = level;\n                nodes.push({\n                  type: 'text',\n                  content: text.slice(0, pos),\n                  level: level\n                });\n              }\n              nodes.push({\n                type: 'link_open',\n                href: links[ln].url,\n                title: '',\n                level: level++\n              });\n              nodes.push({\n                type: 'text',\n                content: links[ln].text,\n                level: level\n              });\n              nodes.push({\n                type: 'link_close',\n                level: --level\n              });\n              text = text.slice(pos + links[ln].text.length);\n            }\n            if (text.length) {\n              nodes.push({\n                type: 'text',\n                content: text,\n                level: level\n              });\n            }\n\n            // replace current node\n            blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n          }\n        }\n      }\n    };\n  }, { \"autolinker\": 2 }], 48: [function (require, module, exports) {\n    'use strict';\n\n    var StateInline = require('../rules_inline/state_inline');\n    var parseLinkLabel = require('../helpers/parse_link_label');\n    var parseLinkDestination = require('../helpers/parse_link_destination');\n    var parseLinkTitle = require('../helpers/parse_link_title');\n    var normalizeReference = require('../helpers/normalize_reference');\n\n    function parseReference(str, parser, options, env) {\n      var state, labelEnd, pos, max, code, start, href, title, label;\n\n      if (str.charCodeAt(0) !== 0x5B /* [ */) {\n          return -1;\n        }\n\n      if (str.indexOf(']:') === -1) {\n        return -1;\n      }\n\n      state = new StateInline(str, parser, options, env, []);\n      labelEnd = parseLinkLabel(state, 0);\n\n      if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A /* : */) {\n          return -1;\n        }\n\n      max = state.posMax;\n\n      // [label]:   destination   'title'\n      //         ^^^ skip optional whitespace here\n      for (pos = labelEnd + 2; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) {\n          break;\n        }\n      }\n\n      // [label]:   destination   'title'\n      //            ^^^^^^^^^^^ parse this\n      if (!parseLinkDestination(state, pos)) {\n        return -1;\n      }\n      href = state.linkContent;\n      pos = state.pos;\n\n      // [label]:   destination   'title'\n      //                       ^^^ skipping those spaces\n      start = pos;\n      for (pos = pos + 1; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) {\n          break;\n        }\n      }\n\n      // [label]:   destination   'title'\n      //                          ^^^^^^^ parse this\n      if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n        title = state.linkContent;\n        pos = state.pos;\n      } else {\n        title = '';\n        pos = start;\n      }\n\n      // ensure that the end of the line is empty\n      while (pos < max && state.src.charCodeAt(pos) === 0x20 /* space */) {\n        pos++;\n      }\n      if (pos < max && state.src.charCodeAt(pos) !== 0x0A) {\n        return -1;\n      }\n\n      label = normalizeReference(str.slice(1, labelEnd));\n      if (typeof env.references[label] === 'undefined') {\n        env.references[label] = { title: title, href: href };\n      }\n\n      return pos;\n    }\n\n    module.exports = function references(state) {\n      var tokens = state.tokens,\n          i,\n          l,\n          content,\n          pos;\n\n      state.env.references = state.env.references || {};\n\n      if (state.inlineMode) {\n        return;\n      }\n\n      // Scan definitions in paragraph inlines\n      for (i = 1, l = tokens.length - 1; i < l; i++) {\n        if (tokens[i].type === 'inline' && tokens[i - 1].type === 'paragraph_open' && tokens[i + 1].type === 'paragraph_close') {\n\n          content = tokens[i].content;\n          while (content.length) {\n            pos = parseReference(content, state.inline, state.options, state.env);\n            if (pos < 0) {\n              break;\n            }\n            content = content.slice(pos).trim();\n          }\n\n          tokens[i].content = content;\n          if (!content.length) {\n            tokens[i - 1].tight = true;\n            tokens[i + 1].tight = true;\n          }\n        }\n      }\n    };\n  }, { \"../helpers/normalize_reference\": 18, \"../helpers/parse_link_destination\": 19, \"../helpers/parse_link_label\": 20, \"../helpers/parse_link_title\": 21, \"../rules_inline/state_inline\": 64 }], 49: [function (require, module, exports) {\n    // Simple typographical replacements\n    //\n    'use strict';\n\n    // TODO:\n    // - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n    // - miltiplication 2 x 4 -> 2 × 4\n\n    var RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n    var SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\n    var SCOPED_ABBR = {\n      'c': '©',\n      'r': '®',\n      'p': '§',\n      'tm': '™'\n    };\n\n    function replaceScopedAbbr(str) {\n      if (str.indexOf('(') < 0) {\n        return str;\n      }\n\n      return str.replace(SCOPED_ABBR_RE, function (match, name) {\n        return SCOPED_ABBR[name.toLowerCase()];\n      });\n    }\n\n    module.exports = function replace(state) {\n      var i, token, text, inlineTokens, blkIdx;\n\n      if (!state.options.typographer) {\n        return;\n      }\n\n      for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n        if (state.tokens[blkIdx].type !== 'inline') {\n          continue;\n        }\n\n        inlineTokens = state.tokens[blkIdx].children;\n\n        for (i = inlineTokens.length - 1; i >= 0; i--) {\n          token = inlineTokens[i];\n          if (token.type === 'text') {\n            text = token.content;\n\n            text = replaceScopedAbbr(text);\n\n            if (RARE_RE.test(text)) {\n              text = text.replace(/\\+-/g, '±')\n              // .., ..., ....... -> …\n              // but ?..... & !..... -> ?.. & !..\n              .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..').replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n              // em-dash\n              .replace(/(^|[^-])---([^-]|$)/mg, \"$1\\u2014$2\")\n              // en-dash\n              .replace(/(^|\\s)--(\\s|$)/mg, \"$1\\u2013$2\").replace(/(^|[^-\\s])--([^-\\s]|$)/mg, \"$1\\u2013$2\");\n            }\n\n            token.content = text;\n          }\n        }\n      }\n    };\n  }, {}], 50: [function (require, module, exports) {\n    // Convert straight quotation marks to typographic ones\n    //\n    'use strict';\n\n    var QUOTE_TEST_RE = /['\"]/;\n    var QUOTE_RE = /['\"]/g;\n    var PUNCT_RE = /[-\\s()\\[\\]]/;\n    var APOSTROPHE = '’';\n\n    // This function returns true if the character at `pos`\n    // could be inside a word.\n    function isLetter(str, pos) {\n      if (pos < 0 || pos >= str.length) {\n        return false;\n      }\n      return !PUNCT_RE.test(str[pos]);\n    }\n\n    function replaceAt(str, index, ch) {\n      return str.substr(0, index) + ch + str.substr(index + 1);\n    }\n\n    module.exports = function smartquotes(state) {\n      /*eslint max-depth:0*/\n      var i, token, text, t, pos, max, thisLevel, lastSpace, nextSpace, item, canOpen, canClose, j, isSingle, blkIdx, tokens, stack;\n\n      if (!state.options.typographer) {\n        return;\n      }\n\n      stack = [];\n\n      for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n        if (state.tokens[blkIdx].type !== 'inline') {\n          continue;\n        }\n\n        tokens = state.tokens[blkIdx].children;\n        stack.length = 0;\n\n        for (i = 0; i < tokens.length; i++) {\n          token = tokens[i];\n\n          if (token.type !== 'text' || QUOTE_TEST_RE.test(token.text)) {\n            continue;\n          }\n\n          thisLevel = tokens[i].level;\n\n          for (j = stack.length - 1; j >= 0; j--) {\n            if (stack[j].level <= thisLevel) {\n              break;\n            }\n          }\n          stack.length = j + 1;\n\n          text = token.content;\n          pos = 0;\n          max = text.length;\n\n          /*eslint no-labels:0,block-scoped-var:0*/\n          OUTER: while (pos < max) {\n            QUOTE_RE.lastIndex = pos;\n            t = QUOTE_RE.exec(text);\n            if (!t) {\n              break;\n            }\n\n            lastSpace = !isLetter(text, t.index - 1);\n            pos = t.index + 1;\n            isSingle = t[0] === \"'\";\n            nextSpace = !isLetter(text, pos);\n\n            if (!nextSpace && !lastSpace) {\n              // middle of word\n              if (isSingle) {\n                token.content = replaceAt(token.content, t.index, APOSTROPHE);\n              }\n              continue;\n            }\n\n            canOpen = !nextSpace;\n            canClose = !lastSpace;\n\n            if (canClose) {\n              // this could be a closing quote, rewind the stack to get a match\n              for (j = stack.length - 1; j >= 0; j--) {\n                item = stack[j];\n                if (stack[j].level < thisLevel) {\n                  break;\n                }\n                if (item.single === isSingle && stack[j].level === thisLevel) {\n                  item = stack[j];\n                  if (isSingle) {\n                    tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[2]);\n                    token.content = replaceAt(token.content, t.index, state.options.quotes[3]);\n                  } else {\n                    tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[0]);\n                    token.content = replaceAt(token.content, t.index, state.options.quotes[1]);\n                  }\n                  stack.length = j;\n                  continue OUTER;\n                }\n              }\n            }\n\n            if (canOpen) {\n              stack.push({\n                token: i,\n                pos: t.index,\n                single: isSingle,\n                level: thisLevel\n              });\n            } else if (canClose && isSingle) {\n              token.content = replaceAt(token.content, t.index, APOSTROPHE);\n            }\n          }\n        }\n      }\n    };\n  }, {}], 51: [function (require, module, exports) {\n    // Process autolinks '<protocol:...>'\n\n    'use strict';\n\n    var url_schemas = require('../common/url_schemas');\n    var normalizeLink = require('../helpers/normalize_link');\n\n    /*eslint max-len:0*/\n    var EMAIL_RE = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\n    var AUTOLINK_RE = /^<([a-zA-Z.\\-]{1,25}):([^<>\\x00-\\x20]*)>/;\n\n    module.exports = function autolink(state, silent) {\n      var tail,\n          linkMatch,\n          emailMatch,\n          url,\n          fullUrl,\n          pos = state.pos;\n\n      if (state.src.charCodeAt(pos) !== 0x3C /* < */) {\n          return false;\n        }\n\n      tail = state.src.slice(pos);\n\n      if (tail.indexOf('>') < 0) {\n        return false;\n      }\n\n      linkMatch = tail.match(AUTOLINK_RE);\n\n      if (linkMatch) {\n        if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) {\n          return false;\n        }\n\n        url = linkMatch[0].slice(1, -1);\n        fullUrl = normalizeLink(url);\n        if (!state.parser.validateLink(url)) {\n          return false;\n        }\n\n        if (!silent) {\n          state.push({\n            type: 'link_open',\n            href: fullUrl,\n            level: state.level\n          });\n          state.push({\n            type: 'text',\n            content: url,\n            level: state.level + 1\n          });\n          state.push({ type: 'link_close', level: state.level });\n        }\n\n        state.pos += linkMatch[0].length;\n        return true;\n      }\n\n      emailMatch = tail.match(EMAIL_RE);\n\n      if (emailMatch) {\n\n        url = emailMatch[0].slice(1, -1);\n\n        fullUrl = normalizeLink('mailto:' + url);\n        if (!state.parser.validateLink(fullUrl)) {\n          return false;\n        }\n\n        if (!silent) {\n          state.push({\n            type: 'link_open',\n            href: fullUrl,\n            level: state.level\n          });\n          state.push({\n            type: 'text',\n            content: url,\n            level: state.level + 1\n          });\n          state.push({ type: 'link_close', level: state.level });\n        }\n\n        state.pos += emailMatch[0].length;\n        return true;\n      }\n\n      return false;\n    };\n  }, { \"../common/url_schemas\": 12, \"../helpers/normalize_link\": 17 }], 52: [function (require, module, exports) {\n    // Parse backticks\n\n    'use strict';\n\n    module.exports = function backticks(state, silent) {\n      var start,\n          max,\n          marker,\n          matchStart,\n          matchEnd,\n          pos = state.pos,\n          ch = state.src.charCodeAt(pos);\n\n      if (ch !== 0x60 /* ` */) {\n          return false;\n        }\n\n      start = pos;\n      pos++;\n      max = state.posMax;\n\n      while (pos < max && state.src.charCodeAt(pos) === 0x60 /* ` */) {\n        pos++;\n      }\n\n      marker = state.src.slice(start, pos);\n\n      matchStart = matchEnd = pos;\n\n      while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n        matchEnd = matchStart + 1;\n\n        while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60 /* ` */) {\n          matchEnd++;\n        }\n\n        if (matchEnd - matchStart === marker.length) {\n          if (!silent) {\n            state.push({\n              type: 'code',\n              content: state.src.slice(pos, matchStart).replace(/[ \\n]+/g, ' ').trim(),\n              block: false,\n              level: state.level\n            });\n          }\n          state.pos = matchEnd;\n          return true;\n        }\n      }\n\n      if (!silent) {\n        state.pending += marker;\n      }\n      state.pos += marker.length;\n      return true;\n    };\n  }, {}], 53: [function (require, module, exports) {\n    // Process ~~deleted text~~\n\n    'use strict';\n\n    module.exports = function del(state, silent) {\n      var found,\n          pos,\n          stack,\n          max = state.posMax,\n          start = state.pos,\n          lastChar,\n          nextChar;\n\n      if (state.src.charCodeAt(start) !== 0x7E /* ~ */) {\n          return false;\n        }\n      if (silent) {\n        return false;\n      } // don't run any pairs in validation mode\n      if (start + 4 >= max) {\n        return false;\n      }\n      if (state.src.charCodeAt(start + 1) !== 0x7E /* ~ */) {\n          return false;\n        }\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n      nextChar = state.src.charCodeAt(start + 2);\n\n      if (lastChar === 0x7E /* ~ */) {\n          return false;\n        }\n      if (nextChar === 0x7E /* ~ */) {\n          return false;\n        }\n      if (nextChar === 0x20 || nextChar === 0x0A) {\n        return false;\n      }\n\n      pos = start + 2;\n      while (pos < max && state.src.charCodeAt(pos) === 0x7E /* ~ */) {\n        pos++;\n      }\n      if (pos > start + 3) {\n        // sequence of 4+ markers taking as literal, same as in a emphasis\n        state.pos += pos - start;\n        if (!silent) {\n          state.pending += state.src.slice(start, pos);\n        }\n        return true;\n      }\n\n      state.pos = start + 2;\n      stack = 1;\n\n      while (state.pos + 1 < max) {\n        if (state.src.charCodeAt(state.pos) === 0x7E /* ~ */) {\n            if (state.src.charCodeAt(state.pos + 1) === 0x7E /* ~ */) {\n                lastChar = state.src.charCodeAt(state.pos - 1);\n                nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n                if (nextChar !== 0x7E /* ~ */ && lastChar !== 0x7E /* ~ */) {\n                    if (lastChar !== 0x20 && lastChar !== 0x0A) {\n                      // closing '~~'\n                      stack--;\n                    } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n                      // opening '~~'\n                      stack++;\n                    } // else {\n                    //  // standalone ' ~~ ' indented with spaces\n                    // }\n                    if (stack <= 0) {\n                      found = true;\n                      break;\n                    }\n                  }\n              }\n          }\n\n        state.parser.skipToken(state);\n      }\n\n      if (!found) {\n        // parser failed to find ending tag, so it's not valid emphasis\n        state.pos = start;\n        return false;\n      }\n\n      // found!\n      state.posMax = state.pos;\n      state.pos = start + 2;\n\n      if (!silent) {\n        state.push({ type: 'del_open', level: state.level++ });\n        state.parser.tokenize(state);\n        state.push({ type: 'del_close', level: --state.level });\n      }\n\n      state.pos = state.posMax + 2;\n      state.posMax = max;\n      return true;\n    };\n  }, {}], 54: [function (require, module, exports) {\n    // Process *this* and _that_\n\n    'use strict';\n\n    function isAlphaNum(code) {\n      return code >= 0x30 /* 0 */ && code <= 0x39 /* 9 */ || code >= 0x41 /* A */ && code <= 0x5A /* Z */ || code >= 0x61 /* a */ && code <= 0x7A /* z */;\n    }\n\n    // parse sequence of emphasis markers,\n    // \"start\" should point at a valid marker\n    function scanDelims(state, start) {\n      var pos = start,\n          lastChar,\n          nextChar,\n          count,\n          can_open = true,\n          can_close = true,\n          max = state.posMax,\n          marker = state.src.charCodeAt(start);\n\n      lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n\n      while (pos < max && state.src.charCodeAt(pos) === marker) {\n        pos++;\n      }\n      if (pos >= max) {\n        can_open = false;\n      }\n      count = pos - start;\n\n      if (count >= 4) {\n        // sequence of four or more unescaped markers can't start/end an emphasis\n        can_open = can_close = false;\n      } else {\n        nextChar = pos < max ? state.src.charCodeAt(pos) : -1;\n\n        // check whitespace conditions\n        if (nextChar === 0x20 || nextChar === 0x0A) {\n          can_open = false;\n        }\n        if (lastChar === 0x20 || lastChar === 0x0A) {\n          can_close = false;\n        }\n\n        if (marker === 0x5F /* _ */) {\n            // check if we aren't inside the word\n            if (isAlphaNum(lastChar)) {\n              can_open = false;\n            }\n            if (isAlphaNum(nextChar)) {\n              can_close = false;\n            }\n          }\n      }\n\n      return {\n        can_open: can_open,\n        can_close: can_close,\n        delims: count\n      };\n    }\n\n    module.exports = function emphasis(state, silent) {\n      var startCount,\n          count,\n          found,\n          oldCount,\n          newCount,\n          stack,\n          res,\n          max = state.posMax,\n          start = state.pos,\n          marker = state.src.charCodeAt(start);\n\n      if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) {\n          return false;\n        }\n      if (silent) {\n        return false;\n      } // don't run any pairs in validation mode\n\n      res = scanDelims(state, start);\n      startCount = res.delims;\n      if (!res.can_open) {\n        state.pos += startCount;\n        if (!silent) {\n          state.pending += state.src.slice(start, state.pos);\n        }\n        return true;\n      }\n\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      state.pos = start + startCount;\n      stack = [startCount];\n\n      while (state.pos < max) {\n        if (state.src.charCodeAt(state.pos) === marker) {\n          res = scanDelims(state, state.pos);\n          count = res.delims;\n          if (res.can_close) {\n            oldCount = stack.pop();\n            newCount = count;\n\n            while (oldCount !== newCount) {\n              if (newCount < oldCount) {\n                stack.push(oldCount - newCount);\n                break;\n              }\n\n              // assert(newCount > oldCount)\n              newCount -= oldCount;\n\n              if (stack.length === 0) {\n                break;\n              }\n              state.pos += oldCount;\n              oldCount = stack.pop();\n            }\n\n            if (stack.length === 0) {\n              startCount = oldCount;\n              found = true;\n              break;\n            }\n            state.pos += count;\n            continue;\n          }\n\n          if (res.can_open) {\n            stack.push(count);\n          }\n          state.pos += count;\n          continue;\n        }\n\n        state.parser.skipToken(state);\n      }\n\n      if (!found) {\n        // parser failed to find ending tag, so it's not valid emphasis\n        state.pos = start;\n        return false;\n      }\n\n      // found!\n      state.posMax = state.pos;\n      state.pos = start + startCount;\n\n      if (!silent) {\n        if (startCount === 2 || startCount === 3) {\n          state.push({ type: 'strong_open', level: state.level++ });\n        }\n        if (startCount === 1 || startCount === 3) {\n          state.push({ type: 'em_open', level: state.level++ });\n        }\n\n        state.parser.tokenize(state);\n\n        if (startCount === 1 || startCount === 3) {\n          state.push({ type: 'em_close', level: --state.level });\n        }\n        if (startCount === 2 || startCount === 3) {\n          state.push({ type: 'strong_close', level: --state.level });\n        }\n      }\n\n      state.pos = state.posMax + startCount;\n      state.posMax = max;\n      return true;\n    };\n  }, {}], 55: [function (require, module, exports) {\n    // Process html entity - &#123;, &#xAF;, &quot;, ...\n\n    'use strict';\n\n    var entities = require('../common/entities');\n    var has = require('../common/utils').has;\n    var isValidEntityCode = require('../common/utils').isValidEntityCode;\n    var fromCodePoint = require('../common/utils').fromCodePoint;\n\n    var DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\n    var NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\n\n    module.exports = function entity(state, silent) {\n      var ch,\n          code,\n          match,\n          pos = state.pos,\n          max = state.posMax;\n\n      if (state.src.charCodeAt(pos) !== 0x26 /* & */) {\n          return false;\n        }\n\n      if (pos + 1 < max) {\n        ch = state.src.charCodeAt(pos + 1);\n\n        if (ch === 0x23 /* # */) {\n            match = state.src.slice(pos).match(DIGITAL_RE);\n            if (match) {\n              if (!silent) {\n                code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n                state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n              }\n              state.pos += match[0].length;\n              return true;\n            }\n          } else {\n          match = state.src.slice(pos).match(NAMED_RE);\n          if (match) {\n            if (has(entities, match[1])) {\n              if (!silent) {\n                state.pending += entities[match[1]];\n              }\n              state.pos += match[0].length;\n              return true;\n            }\n          }\n        }\n      }\n\n      if (!silent) {\n        state.pending += '&';\n      }\n      state.pos++;\n      return true;\n    };\n  }, { \"../common/entities\": 9, \"../common/utils\": 13 }], 56: [function (require, module, exports) {\n    // Proceess escaped chars and hardbreaks\n\n    'use strict';\n\n    var ESCAPED = [];\n\n    for (var i = 0; i < 256; i++) {\n      ESCAPED.push(0);\n    }\n\n    '\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {\n      ESCAPED[ch.charCodeAt(0)] = 1;\n    });\n\n    module.exports = function escape(state, silent) {\n      var ch,\n          pos = state.pos,\n          max = state.posMax;\n\n      if (state.src.charCodeAt(pos) !== 0x5C /* \\ */) {\n          return false;\n        }\n\n      pos++;\n\n      if (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (ch < 256 && ESCAPED[ch] !== 0) {\n          if (!silent) {\n            state.pending += state.src[pos];\n          }\n          state.pos += 2;\n          return true;\n        }\n\n        if (ch === 0x0A) {\n          if (!silent) {\n            state.push({\n              type: 'hardbreak',\n              level: state.level\n            });\n          }\n\n          pos++;\n          // skip leading whitespaces from next line\n          while (pos < max && state.src.charCodeAt(pos) === 0x20) {\n            pos++;\n          }\n\n          state.pos = pos;\n          return true;\n        }\n      }\n\n      if (!silent) {\n        state.pending += '\\\\';\n      }\n      state.pos++;\n      return true;\n    };\n  }, {}], 57: [function (require, module, exports) {\n    // Process inline footnotes (^[...])\n\n    'use strict';\n\n    var parseLinkLabel = require('../helpers/parse_link_label');\n\n    module.exports = function footnote_inline(state, silent) {\n      var labelStart,\n          labelEnd,\n          footnoteId,\n          oldLength,\n          max = state.posMax,\n          start = state.pos;\n\n      if (start + 2 >= max) {\n        return false;\n      }\n      if (state.src.charCodeAt(start) !== 0x5E /* ^ */) {\n          return false;\n        }\n      if (state.src.charCodeAt(start + 1) !== 0x5B /* [ */) {\n          return false;\n        }\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      labelStart = start + 2;\n      labelEnd = parseLinkLabel(state, start + 1);\n\n      // parser failed to find ']', so it's not a valid note\n      if (labelEnd < 0) {\n        return false;\n      }\n\n      // We found the end of the link, and know for a fact it's a valid link;\n      // so all that's left to do is to call tokenizer.\n      //\n      if (!silent) {\n        if (!state.env.footnotes) {\n          state.env.footnotes = {};\n        }\n        if (!state.env.footnotes.list) {\n          state.env.footnotes.list = [];\n        }\n        footnoteId = state.env.footnotes.list.length;\n\n        state.pos = labelStart;\n        state.posMax = labelEnd;\n\n        state.push({\n          type: 'footnote_ref',\n          id: footnoteId,\n          level: state.level\n        });\n        state.linkLevel++;\n        oldLength = state.tokens.length;\n        state.parser.tokenize(state);\n        state.env.footnotes.list[footnoteId] = { tokens: state.tokens.splice(oldLength) };\n        state.linkLevel--;\n      }\n\n      state.pos = labelEnd + 1;\n      state.posMax = max;\n      return true;\n    };\n  }, { \"../helpers/parse_link_label\": 20 }], 58: [function (require, module, exports) {\n    // Process footnote references ([^...])\n\n    'use strict';\n\n    module.exports = function footnote_ref(state, silent) {\n      var label,\n          pos,\n          footnoteId,\n          footnoteSubId,\n          max = state.posMax,\n          start = state.pos;\n\n      // should be at least 4 chars - \"[^x]\"\n      if (start + 3 > max) {\n        return false;\n      }\n\n      if (!state.env.footnotes || !state.env.footnotes.refs) {\n        return false;\n      }\n      if (state.src.charCodeAt(start) !== 0x5B /* [ */) {\n          return false;\n        }\n      if (state.src.charCodeAt(start + 1) !== 0x5E /* ^ */) {\n          return false;\n        }\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      for (pos = start + 2; pos < max; pos++) {\n        if (state.src.charCodeAt(pos) === 0x20) {\n          return false;\n        }\n        if (state.src.charCodeAt(pos) === 0x0A) {\n          return false;\n        }\n        if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n            break;\n          }\n      }\n\n      if (pos === start + 2) {\n        return false;\n      } // no empty footnote labels\n      if (pos >= max) {\n        return false;\n      }\n      pos++;\n\n      label = state.src.slice(start + 2, pos - 1);\n      if (typeof state.env.footnotes.refs[':' + label] === 'undefined') {\n        return false;\n      }\n\n      if (!silent) {\n        if (!state.env.footnotes.list) {\n          state.env.footnotes.list = [];\n        }\n\n        if (state.env.footnotes.refs[':' + label] < 0) {\n          footnoteId = state.env.footnotes.list.length;\n          state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n          state.env.footnotes.refs[':' + label] = footnoteId;\n        } else {\n          footnoteId = state.env.footnotes.refs[':' + label];\n        }\n\n        footnoteSubId = state.env.footnotes.list[footnoteId].count;\n        state.env.footnotes.list[footnoteId].count++;\n\n        state.push({\n          type: 'footnote_ref',\n          id: footnoteId,\n          subId: footnoteSubId,\n          level: state.level\n        });\n      }\n\n      state.pos = pos;\n      state.posMax = max;\n      return true;\n    };\n  }, {}], 59: [function (require, module, exports) {\n    // Process html tags\n\n    'use strict';\n\n    var HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n    function isLetter(ch) {\n      /*eslint no-bitwise:0*/\n      var lc = ch | 0x20; // to lower case\n      return lc >= 0x61 /* a */ && lc <= 0x7a /* z */;\n    }\n\n    module.exports = function htmltag(state, silent) {\n      var ch,\n          match,\n          max,\n          pos = state.pos;\n\n      if (!state.options.html) {\n        return false;\n      }\n\n      // Check start\n      max = state.posMax;\n      if (state.src.charCodeAt(pos) !== 0x3C /* < */ || pos + 2 >= max) {\n        return false;\n      }\n\n      // Quick fail on second char\n      ch = state.src.charCodeAt(pos + 1);\n      if (ch !== 0x21 /* ! */ && ch !== 0x3F /* ? */ && ch !== 0x2F /* / */ && !isLetter(ch)) {\n        return false;\n      }\n\n      match = state.src.slice(pos).match(HTML_TAG_RE);\n      if (!match) {\n        return false;\n      }\n\n      if (!silent) {\n        state.push({\n          type: 'htmltag',\n          content: state.src.slice(pos, pos + match[0].length),\n          level: state.level\n        });\n      }\n      state.pos += match[0].length;\n      return true;\n    };\n  }, { \"../common/html_re\": 11 }], 60: [function (require, module, exports) {\n    // Process ++inserted text++\n\n    'use strict';\n\n    module.exports = function ins(state, silent) {\n      var found,\n          pos,\n          stack,\n          max = state.posMax,\n          start = state.pos,\n          lastChar,\n          nextChar;\n\n      if (state.src.charCodeAt(start) !== 0x2B /* + */) {\n          return false;\n        }\n      if (silent) {\n        return false;\n      } // don't run any pairs in validation mode\n      if (start + 4 >= max) {\n        return false;\n      }\n      if (state.src.charCodeAt(start + 1) !== 0x2B /* + */) {\n          return false;\n        }\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n      nextChar = state.src.charCodeAt(start + 2);\n\n      if (lastChar === 0x2B /* + */) {\n          return false;\n        }\n      if (nextChar === 0x2B /* + */) {\n          return false;\n        }\n      if (nextChar === 0x20 || nextChar === 0x0A) {\n        return false;\n      }\n\n      pos = start + 2;\n      while (pos < max && state.src.charCodeAt(pos) === 0x2B /* + */) {\n        pos++;\n      }\n      if (pos !== start + 2) {\n        // sequence of 3+ markers taking as literal, same as in a emphasis\n        state.pos += pos - start;\n        if (!silent) {\n          state.pending += state.src.slice(start, pos);\n        }\n        return true;\n      }\n\n      state.pos = start + 2;\n      stack = 1;\n\n      while (state.pos + 1 < max) {\n        if (state.src.charCodeAt(state.pos) === 0x2B /* + */) {\n            if (state.src.charCodeAt(state.pos + 1) === 0x2B /* + */) {\n                lastChar = state.src.charCodeAt(state.pos - 1);\n                nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n                if (nextChar !== 0x2B /* + */ && lastChar !== 0x2B /* + */) {\n                    if (lastChar !== 0x20 && lastChar !== 0x0A) {\n                      // closing '++'\n                      stack--;\n                    } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n                      // opening '++'\n                      stack++;\n                    } // else {\n                    //  // standalone ' ++ ' indented with spaces\n                    // }\n                    if (stack <= 0) {\n                      found = true;\n                      break;\n                    }\n                  }\n              }\n          }\n\n        state.parser.skipToken(state);\n      }\n\n      if (!found) {\n        // parser failed to find ending tag, so it's not valid emphasis\n        state.pos = start;\n        return false;\n      }\n\n      // found!\n      state.posMax = state.pos;\n      state.pos = start + 2;\n\n      if (!silent) {\n        state.push({ type: 'ins_open', level: state.level++ });\n        state.parser.tokenize(state);\n        state.push({ type: 'ins_close', level: --state.level });\n      }\n\n      state.pos = state.posMax + 2;\n      state.posMax = max;\n      return true;\n    };\n  }, {}], 61: [function (require, module, exports) {\n    // Process [links](<to> \"stuff\")\n\n    'use strict';\n\n    var parseLinkLabel = require('../helpers/parse_link_label');\n    var parseLinkDestination = require('../helpers/parse_link_destination');\n    var parseLinkTitle = require('../helpers/parse_link_title');\n    var normalizeReference = require('../helpers/normalize_reference');\n\n    module.exports = function links(state, silent) {\n      var labelStart,\n          labelEnd,\n          label,\n          href,\n          title,\n          pos,\n          ref,\n          code,\n          isImage = false,\n          oldPos = state.pos,\n          max = state.posMax,\n          start = state.pos,\n          marker = state.src.charCodeAt(start);\n\n      if (marker === 0x21 /* ! */) {\n          isImage = true;\n          marker = state.src.charCodeAt(++start);\n        }\n\n      if (marker !== 0x5B /* [ */) {\n          return false;\n        }\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      labelStart = start + 1;\n      labelEnd = parseLinkLabel(state, start);\n\n      // parser failed to find ']', so it's not a valid link\n      if (labelEnd < 0) {\n        return false;\n      }\n\n      pos = labelEnd + 1;\n      if (pos < max && state.src.charCodeAt(pos) === 0x28 /* ( */) {\n          //\n          // Inline link\n          //\n\n          // [link](  <href>  \"title\"  )\n          //        ^^ skipping these spaces\n          pos++;\n          for (; pos < max; pos++) {\n            code = state.src.charCodeAt(pos);\n            if (code !== 0x20 && code !== 0x0A) {\n              break;\n            }\n          }\n          if (pos >= max) {\n            return false;\n          }\n\n          // [link](  <href>  \"title\"  )\n          //          ^^^^^^ parsing link destination\n          start = pos;\n          if (parseLinkDestination(state, pos)) {\n            href = state.linkContent;\n            pos = state.pos;\n          } else {\n            href = '';\n          }\n\n          // [link](  <href>  \"title\"  )\n          //                ^^ skipping these spaces\n          start = pos;\n          for (; pos < max; pos++) {\n            code = state.src.charCodeAt(pos);\n            if (code !== 0x20 && code !== 0x0A) {\n              break;\n            }\n          }\n\n          // [link](  <href>  \"title\"  )\n          //                  ^^^^^^^ parsing link title\n          if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n            title = state.linkContent;\n            pos = state.pos;\n\n            // [link](  <href>  \"title\"  )\n            //                         ^^ skipping these spaces\n            for (; pos < max; pos++) {\n              code = state.src.charCodeAt(pos);\n              if (code !== 0x20 && code !== 0x0A) {\n                break;\n              }\n            }\n          } else {\n            title = '';\n          }\n\n          if (pos >= max || state.src.charCodeAt(pos) !== 0x29 /* ) */) {\n              state.pos = oldPos;\n              return false;\n            }\n          pos++;\n        } else {\n        //\n        // Link reference\n        //\n\n        // do not allow nested reference links\n        if (state.linkLevel > 0) {\n          return false;\n        }\n\n        // [foo]  [bar]\n        //      ^^ optional whitespace (can include newlines)\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (code !== 0x20 && code !== 0x0A) {\n            break;\n          }\n        }\n\n        if (pos < max && state.src.charCodeAt(pos) === 0x5B /* [ */) {\n            start = pos + 1;\n            pos = parseLinkLabel(state, pos);\n            if (pos >= 0) {\n              label = state.src.slice(start, pos++);\n            } else {\n              pos = start - 1;\n            }\n          }\n\n        // covers label === '' and label === undefined\n        // (collapsed reference link and shortcut reference link respectively)\n        if (!label) {\n          if (typeof label === 'undefined') {\n            pos = labelEnd + 1;\n          }\n          label = state.src.slice(labelStart, labelEnd);\n        }\n\n        ref = state.env.references[normalizeReference(label)];\n        if (!ref) {\n          state.pos = oldPos;\n          return false;\n        }\n        href = ref.href;\n        title = ref.title;\n      }\n\n      //\n      // We found the end of the link, and know for a fact it's a valid link;\n      // so all that's left to do is to call tokenizer.\n      //\n      if (!silent) {\n        state.pos = labelStart;\n        state.posMax = labelEnd;\n\n        if (isImage) {\n          state.push({\n            type: 'image',\n            src: href,\n            title: title,\n            alt: state.src.substr(labelStart, labelEnd - labelStart),\n            level: state.level\n          });\n        } else {\n          state.push({\n            type: 'link_open',\n            href: href,\n            title: title,\n            level: state.level++\n          });\n          state.linkLevel++;\n          state.parser.tokenize(state);\n          state.linkLevel--;\n          state.push({ type: 'link_close', level: --state.level });\n        }\n      }\n\n      state.pos = pos;\n      state.posMax = max;\n      return true;\n    };\n  }, { \"../helpers/normalize_reference\": 18, \"../helpers/parse_link_destination\": 19, \"../helpers/parse_link_label\": 20, \"../helpers/parse_link_title\": 21 }], 62: [function (require, module, exports) {\n    // Process ==highlighted text==\n\n    'use strict';\n\n    module.exports = function del(state, silent) {\n      var found,\n          pos,\n          stack,\n          max = state.posMax,\n          start = state.pos,\n          lastChar,\n          nextChar;\n\n      if (state.src.charCodeAt(start) !== 0x3D /* = */) {\n          return false;\n        }\n      if (silent) {\n        return false;\n      } // don't run any pairs in validation mode\n      if (start + 4 >= max) {\n        return false;\n      }\n      if (state.src.charCodeAt(start + 1) !== 0x3D /* = */) {\n          return false;\n        }\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n      nextChar = state.src.charCodeAt(start + 2);\n\n      if (lastChar === 0x3D /* = */) {\n          return false;\n        }\n      if (nextChar === 0x3D /* = */) {\n          return false;\n        }\n      if (nextChar === 0x20 || nextChar === 0x0A) {\n        return false;\n      }\n\n      pos = start + 2;\n      while (pos < max && state.src.charCodeAt(pos) === 0x3D /* = */) {\n        pos++;\n      }\n      if (pos !== start + 2) {\n        // sequence of 3+ markers taking as literal, same as in a emphasis\n        state.pos += pos - start;\n        if (!silent) {\n          state.pending += state.src.slice(start, pos);\n        }\n        return true;\n      }\n\n      state.pos = start + 2;\n      stack = 1;\n\n      while (state.pos + 1 < max) {\n        if (state.src.charCodeAt(state.pos) === 0x3D /* = */) {\n            if (state.src.charCodeAt(state.pos + 1) === 0x3D /* = */) {\n                lastChar = state.src.charCodeAt(state.pos - 1);\n                nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n                if (nextChar !== 0x3D /* = */ && lastChar !== 0x3D /* = */) {\n                    if (lastChar !== 0x20 && lastChar !== 0x0A) {\n                      // closing '=='\n                      stack--;\n                    } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n                      // opening '=='\n                      stack++;\n                    } // else {\n                    //  // standalone ' == ' indented with spaces\n                    // }\n                    if (stack <= 0) {\n                      found = true;\n                      break;\n                    }\n                  }\n              }\n          }\n\n        state.parser.skipToken(state);\n      }\n\n      if (!found) {\n        // parser failed to find ending tag, so it's not valid emphasis\n        state.pos = start;\n        return false;\n      }\n\n      // found!\n      state.posMax = state.pos;\n      state.pos = start + 2;\n\n      if (!silent) {\n        state.push({ type: 'mark_open', level: state.level++ });\n        state.parser.tokenize(state);\n        state.push({ type: 'mark_close', level: --state.level });\n      }\n\n      state.pos = state.posMax + 2;\n      state.posMax = max;\n      return true;\n    };\n  }, {}], 63: [function (require, module, exports) {\n    // Proceess '\\n'\n\n    'use strict';\n\n    module.exports = function newline(state, silent) {\n      var pmax,\n          max,\n          pos = state.pos;\n\n      if (state.src.charCodeAt(pos) !== 0x0A /* \\n */) {\n          return false;\n        }\n\n      pmax = state.pending.length - 1;\n      max = state.posMax;\n\n      // '  \\n' -> hardbreak\n      // Lookup in pending chars is bad practice! Don't copy to other rules!\n      // Pending string is stored in concat mode, indexed lookups will cause\n      // convertion to flat mode.\n      if (!silent) {\n        if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n          if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n            // Strip out all trailing spaces on this line.\n            for (var i = pmax - 2; i >= 0; i--) {\n              if (state.pending.charCodeAt(i) !== 0x20) {\n                state.pending = state.pending.substring(0, i + 1);\n                break;\n              }\n            }\n            state.push({\n              type: 'hardbreak',\n              level: state.level\n            });\n          } else {\n            state.pending = state.pending.slice(0, -1);\n            state.push({\n              type: 'softbreak',\n              level: state.level\n            });\n          }\n        } else {\n          state.push({\n            type: 'softbreak',\n            level: state.level\n          });\n        }\n      }\n\n      pos++;\n\n      // skip heading spaces for next line\n      while (pos < max && state.src.charCodeAt(pos) === 0x20) {\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    };\n  }, {}], 64: [function (require, module, exports) {\n    // Inline parser state\n\n    'use strict';\n\n    function StateInline(src, parserInline, options, env, outTokens) {\n      this.src = src;\n      this.env = env;\n      this.options = options;\n      this.parser = parserInline;\n      this.tokens = outTokens;\n      this.pos = 0;\n      this.posMax = this.src.length;\n      this.level = 0;\n      this.pending = '';\n      this.pendingLevel = 0;\n\n      this.cache = []; // Stores { start: end } pairs. Useful for backtrack\n      // optimization of pairs parse (emphasis, strikes).\n\n      // Link parser state vars\n\n      this.isInLabel = false; // Set true when seek link label - we should disable\n      // \"paired\" rules (emphasis, strikes) to not skip\n      // tailing `]`\n\n      this.linkLevel = 0; // Increment for each nesting link. Used to prevent\n      // nesting in definitions\n\n      this.linkContent = ''; // Temporary storage for link url\n\n      this.labelUnmatchedScopes = 0; // Track unpaired `[` for link labels\n      // (backtrack optimization)\n    }\n\n    // Flush pending text\n    //\n    StateInline.prototype.pushPending = function () {\n      this.tokens.push({\n        type: 'text',\n        content: this.pending,\n        level: this.pendingLevel\n      });\n      this.pending = '';\n    };\n\n    // Push new token to \"stream\".\n    // If pending text exists - flush it as text token\n    //\n    StateInline.prototype.push = function (token) {\n      if (this.pending) {\n        this.pushPending();\n      }\n\n      this.tokens.push(token);\n      this.pendingLevel = this.level;\n    };\n\n    // Store value to cache.\n    // !!! Implementation has parser-specific optimizations\n    // !!! keys MUST be integer, >= 0; values MUST be integer, > 0\n    //\n    StateInline.prototype.cacheSet = function (key, val) {\n      for (var i = this.cache.length; i <= key; i++) {\n        this.cache.push(0);\n      }\n\n      this.cache[key] = val;\n    };\n\n    // Get cache value\n    //\n    StateInline.prototype.cacheGet = function (key) {\n      return key < this.cache.length ? this.cache[key] : 0;\n    };\n\n    module.exports = StateInline;\n  }, {}], 65: [function (require, module, exports) {\n    // Process ~subscript~\n\n    'use strict';\n\n    // same as UNESCAPE_MD_RE plus a space\n\n    var UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n    module.exports = function sub(state, silent) {\n      var found,\n          content,\n          max = state.posMax,\n          start = state.pos;\n\n      if (state.src.charCodeAt(start) !== 0x7E /* ~ */) {\n          return false;\n        }\n      if (silent) {\n        return false;\n      } // don't run any pairs in validation mode\n      if (start + 2 >= max) {\n        return false;\n      }\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      state.pos = start + 1;\n\n      while (state.pos < max) {\n        if (state.src.charCodeAt(state.pos) === 0x7E /* ~ */) {\n            found = true;\n            break;\n          }\n\n        state.parser.skipToken(state);\n      }\n\n      if (!found || start + 1 === state.pos) {\n        state.pos = start;\n        return false;\n      }\n\n      content = state.src.slice(start + 1, state.pos);\n\n      // don't allow unescaped spaces/newlines inside\n      if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n        state.pos = start;\n        return false;\n      }\n\n      // found!\n      state.posMax = state.pos;\n      state.pos = start + 1;\n\n      if (!silent) {\n        state.push({\n          type: 'sub',\n          level: state.level,\n          content: content.replace(UNESCAPE_RE, '$1')\n        });\n      }\n\n      state.pos = state.posMax + 1;\n      state.posMax = max;\n      return true;\n    };\n  }, {}], 66: [function (require, module, exports) {\n    // Process ^superscript^\n\n    'use strict';\n\n    // same as UNESCAPE_MD_RE plus a space\n\n    var UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\n    module.exports = function sup(state, silent) {\n      var found,\n          content,\n          max = state.posMax,\n          start = state.pos;\n\n      if (state.src.charCodeAt(start) !== 0x5E /* ^ */) {\n          return false;\n        }\n      if (silent) {\n        return false;\n      } // don't run any pairs in validation mode\n      if (start + 2 >= max) {\n        return false;\n      }\n      if (state.level >= state.options.maxNesting) {\n        return false;\n      }\n\n      state.pos = start + 1;\n\n      while (state.pos < max) {\n        if (state.src.charCodeAt(state.pos) === 0x5E /* ^ */) {\n            found = true;\n            break;\n          }\n\n        state.parser.skipToken(state);\n      }\n\n      if (!found || start + 1 === state.pos) {\n        state.pos = start;\n        return false;\n      }\n\n      content = state.src.slice(start + 1, state.pos);\n\n      // don't allow unescaped spaces/newlines inside\n      if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n        state.pos = start;\n        return false;\n      }\n\n      // found!\n      state.posMax = state.pos;\n      state.pos = start + 1;\n\n      if (!silent) {\n        state.push({\n          type: 'sup',\n          level: state.level,\n          content: content.replace(UNESCAPE_RE, '$1')\n        });\n      }\n\n      state.pos = state.posMax + 1;\n      state.posMax = max;\n      return true;\n    };\n  }, {}], 67: [function (require, module, exports) {\n    // Skip text characters for text token, place those to pending buffer\n    // and increment current pos\n\n    'use strict';\n\n    // Rule to skip pure text\n    // '{}$%@~+=:' reserved for extentions\n\n    function isTerminatorChar(ch) {\n      switch (ch) {\n        case 0x0A /* \\n */:\n        case 0x5C /* \\ */:\n        case 0x60 /* ` */:\n        case 0x2A /* * */:\n        case 0x5F /* _ */:\n        case 0x5E /* ^ */:\n        case 0x5B /* [ */:\n        case 0x5D /* ] */:\n        case 0x21 /* ! */:\n        case 0x26 /* & */:\n        case 0x3C /* < */:\n        case 0x3E /* > */:\n        case 0x7B /* { */:\n        case 0x7D /* } */:\n        case 0x24 /* $ */:\n        case 0x25 /* % */:\n        case 0x40 /* @ */:\n        case 0x7E /* ~ */:\n        case 0x2B /* + */:\n        case 0x3D /* = */:\n        case 0x3A /* : */:\n          return true;\n        default:\n          return false;\n      }\n    }\n\n    module.exports = function text(state, silent) {\n      var pos = state.pos;\n\n      while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n        pos++;\n      }\n\n      if (pos === state.pos) {\n        return false;\n      }\n\n      if (!silent) {\n        state.pending += state.src.slice(state.pos, pos);\n      }\n\n      state.pos = pos;\n\n      return true;\n    };\n  }, {}], 68: [function (require, module, exports) {\n    var Message = require('./messages/Message');\n    var MessageText = require('./messages/MessageText');\n\n    window.Chat = {\n      Message: Message,\n      MessageText: MessageText\n    };\n  }, { \"./messages/Message\": 69, \"./messages/MessageText\": 70 }], 69: [function (require, module, exports) {\n    var MessageText = require('./MessageText');\n    var md5 = require('blueimp-md5');\n\n    var Message = function () {\n      function Message(raw_data) {\n        _classCallCheck(this, Message);\n\n        this.raw_data = raw_data;\n        this.text = new MessageText(raw_data.msg);\n        this.read = false;\n      }\n\n      _createClass(Message, [{\n        key: \"getId\",\n        value: function getId() {\n          return md5(this.raw_data.msg + this.getTime() + this.getUsername());\n        }\n      }, {\n        key: \"isChat\",\n        value: function isChat() {\n          return this.raw_data.type === 'chat';\n        }\n      }, {\n        key: \"isSystem\",\n        value: function isSystem() {\n          return this.raw_data.type === 'system';\n        }\n      }, {\n        key: \"isHidden\",\n        value: function isHidden() {\n          return this.raw_data.hidden;\n        }\n      }, {\n        key: \"isOwn\",\n        value: function isOwn() {\n          return this.raw_data.ownMsg;\n        }\n      }, {\n        key: \"isInstructor\",\n        value: function isInstructor() {\n          return this.raw_data.isInstructor;\n        }\n      }, {\n        key: \"isTA\",\n        value: function isTA() {\n          return this.raw_data.isTA;\n        }\n      }, {\n        key: \"getTime\",\n        value: function getTime() {\n          return this.raw_data.msgTime;\n        }\n      }, {\n        key: \"getAvatar\",\n        value: function getAvatar() {\n          return this.raw_data.userAvatar;\n        }\n      }, {\n        key: \"getInitials\",\n        value: function getInitials() {\n          return this.raw_data.initials;\n        }\n      }, {\n        key: \"getUsername\",\n        value: function getUsername() {\n          return this.raw_data.username;\n        }\n      }, {\n        key: \"getText\",\n        value: function getText() {\n          return this.text;\n        }\n      }, {\n        key: \"hasFile\",\n        value: function hasFile() {\n          return this.raw_data.hasFile;\n        }\n      }, {\n        key: \"isImageFile\",\n        value: function isImageFile() {\n          return this.raw_data.isImageFile;\n        }\n      }, {\n        key: \"getFileName\",\n        value: function getFileName() {\n          return this.raw_data.filename;\n        }\n      }, {\n        key: \"isAudioFile\",\n        value: function isAudioFile() {\n          return this.raw_data.isMusicFile;\n        }\n      }, {\n        key: \"isPdfFile\",\n        value: function isPdfFile() {\n          return this.raw_data.isPDFFile;\n        }\n      }]);\n\n      return Message;\n    }();\n\n    module.exports = Message;\n  }, { \"./MessageText\": 70, \"blueimp-md5\": 4 }], 70: [function (require, module, exports) {\n    var Remarkable = require('remarkable');\n    var atob = require('atob');\n    var btoa = require('btoa');\n\n    var MessageText = function () {\n      function MessageText(text) {\n        _classCallCheck(this, MessageText);\n\n        this.md = new Remarkable();\n        text = text.split(\"-----MC2 BEGIN ATTACHMENT-----\");\n        this.text = text[0].replace(/^\\n|\\n$/g, '');\n        if (text.length > 1) {\n          text = text[1].split(\"-----MC2 END ATTACHMENT-----\");\n          this.raw_attachments = text[0].replace(/^\\n|\\n$/g, '');\n        } else {\n          this.raw_attachments = \"e30=\";\n        }\n\n        this.rendered_text = this.md.render(this.text);\n        this.attachments = JSON.parse(atob(this.raw_attachments));\n\n        if (this.text.match(/^\\[mc2-image\\]/)) {\n          this.is_image = true;\n        } else {\n          this.is_image = false;\n        }\n\n        if (this.text.match(/^\\$\\$[\\s\\S]*\\$\\$$/)) {\n          this.is_equation = true;\n        } else {\n          this.is_equation = false;\n        }\n      }\n\n      _createClass(MessageText, [{\n        key: \"getRaw\",\n        value: function getRaw() {\n          return this.text.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n        }\n      }, {\n        key: \"getRenderedText\",\n        value: function getRenderedText() {\n          return this.rendered_text;\n        }\n      }, {\n        key: \"getRawAttachments\",\n        value: function getRawAttachments() {\n          return this.raw_attachments;\n        }\n      }, {\n        key: \"getAttachments\",\n        value: function getAttachments() {\n          return this.attachments;\n        }\n      }, {\n        key: \"hasSvgSource\",\n        value: function hasSvgSource() {\n          if (this.attachments['svg-source']) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      }, {\n        key: \"getSvgSource\",\n        value: function getSvgSource() {\n          return decodeURIComponent(escape(atob(this.attachments['svg-source'])));\n        }\n      }, {\n        key: \"isEquation\",\n        value: function isEquation() {\n          return this.is_equation;\n        }\n      }, {\n        key: \"isImage\",\n        value: function isImage() {\n          return this.is_image;\n        }\n      }, {\n        key: \"getImage\",\n        value: function getImage() {\n          var re = /^\\[mc2-image\\]/;\n          return this.text.replace(re, \"\");\n        }\n      }, {\n        key: \"getTextSize\",\n        value: function getTextSize() {\n          return this._getByteLen(this.text);\n        }\n      }, {\n        key: \"getAttachmentsSize\",\n        value: function getAttachmentsSize() {\n          return this._getByteLen(this.raw_attachments);\n        }\n\n        /**\r\n         * Get byte length of a string in UTF-8 format\r\n         * @param normal_val\r\n         * @returns {number}\r\n         * @private\r\n         */\n\n      }, {\n        key: \"_getByteLen\",\n        value: function _getByteLen(normal_val) {\n          // Force string type\n          normal_val = String(normal_val);\n\n          var byteLen = 0;\n          for (var i = 0; i < normal_val.length; i++) {\n            var c = normal_val.charCodeAt(i);\n            byteLen += c < 1 << 7 ? 1 : c < 1 << 11 ? 2 : c < 1 << 16 ? 3 : c < 1 << 21 ? 4 : c < 1 << 26 ? 5 : c < 1 << 31 ? 6 : Number.NaN;\n          }\n          return byteLen;\n        }\n      }]);\n\n      return MessageText;\n    }();\n\n    module.exports = MessageText;\n  }, { \"atob\": 1, \"btoa\": 5, \"remarkable\": 8 }] }, {}, [68]);"]}